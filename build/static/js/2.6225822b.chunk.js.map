{"version":3,"sources":["util/array/arrayFillWith.ts","components/PDF/PDFLib.ts","components/Forms/CFC/initialValues.ts","components/Forms/CFC/calculateInitial.ts","components/PDF/servePDF.ts","state/CFC/createCashFlow.tsx","components/CFCCompare/__config/utilities.ts","components/PDF/CashFlowCanvasPDF.ts","components/CFC/NoCanvases.tsx","components/CFC/CopyCanvasTrigger.tsx","components/PDF/CFCComparePDF.ts","components/CFC/ControlPanel.tsx","components/CFCCompare/__config/styles.ts","components/CFCCompare/TimeframeOutOfSync.tsx","components/CFCCompare/CompareSelector.tsx","components/CFCCompare/TableHeader.tsx","components/CFCCompare/CanvasItemRow.tsx","components/CFCCompare/CompareTable.tsx","components/CFCCompare/NotEnoughCanvases.tsx","components/CFCCompare/CompareCanvases.tsx","components/CFCCompare/ControlCompareLink.tsx"],"names":["arrayFillWith","len","fill","Array","addPadding","content","margin","columns","pageDefaultSettings","pageSize","pageMargins","footer","text","format","Date","alignment","fontSize","color","frameContent","inner","style","table","widths","body","pageHeading","layout","pagePadding","basicTable","items","initialValues","canvasTitle","canvasType","canvasTimeFrame","canvasStartDate","canvasEndDate","calculatedEndDate","openingBalance","paygWithholding","superAmount","incomeTax","cashToOwner","stock","creditors","debtors","assets","loans","cashInItems","createCashFlowItem","cashOutItems","calculateInitial","values","gstOnSales","calcCashFlowGST","closingBalance","calcClosingBalance","gstOnPurchases","totalNetAssets","calcTotalNetAssets","cashSurplus","calcCashSurplus","availableToSpend","calcAvailableToSpend","incomeTaxPercentage","calcIncomeTaxPer","pdf","browser","detect","name","open","download","id","uuidv4","description","amount","gstApplicable","getCanvasData","client","a","CFCUseCase","findByClient","data","reduceToOptions","acc","cur","concat","value","label","canvasDisplayTitle","changeSelected","allCanvases","selected","idx","newItem","filter","filterById","isAfter","calculateDifferencePer","val1","val2","diff","pipe","toTwoDecimal","removeTrailingZeros","concatStr","pdfMake","vfs","pdfFonts","formatDollars","toString","openingBalanceSection","cashInSection","cashInTotal","bold","map","line","cashOutSection","cashOutTotal","gstOnPurchasesSection","cashSurplusSection","incomeSection","availableToSpendSection","closingCashBalanceSection","yourNetAssetPositionSection","title","calcCashFlowTotal","cashInGST","calcTotalCashOut","cashOutGST","calculated","docDefinition","upperFirst","styles","pageHeader","fillColor","green","rightAlign","yellowBlock","defaultStyle","createPdf","NoCanvases","variant","to","PrivateRoutes","ClientList","routeVarReplacement","CFC","CopyCanvasTrigger","useState","setOpen","dispatch","useContext","CFCContext","useEffect","type","CFCActionTypes","ChangeCopyCanvasActive","payload","ListItem","button","onClick","ListItemIcon","ListItemText","onClose","rowValue","addDollarSign","renderRepeaterFields","length","item","leftSelected","rightSelected","leftCalc","rightCalc","width","colSpan","defaultStyles","ControlPanel","history","useHistory","location","useLocation","canvasId","useParams","useCurrentClient","currentClient","leftCompare","rightCompare","goTo","route","push","isNewPage","pathname","isCompare","CFCCompare","printPDF","findById","undefined","alert","CashFlowCanvasPDF","servePDF","CFCComparePDF","ExpandableNav","List","component","disablePadding","CFCListing","useStyles","makeStyles","theme","compareLabel","display","alignItems","compareTooltip","marginLeft","spacing","cell1","cellCanvas","cellDifference","tableRow","background","palette","grey","noBorderBottom","borderBottom","breakpoints","down","minWidth","md","marginTop","marginBottom","TimeframeOutOfSync","Alert","severity","CompareSelector","selectedCanvases","cls","selectOptions","useMemo","reduce","changeSelectedCanvas","e","target","Grid","container","xs","Typography","className","Tooltip","SelectField","onChange","options","align","React","memo","left","right","TableHead","TableRow","TableCell","CanvasItemRow","border","formatNumber","CompareTable","leftCalculated","rightCalculated","key","newTimestamp","TableContainer","Table","TableBody","NotEnoughCanvases","CompareCanvases","useMachine","fetchMachine","stateMachine","changeState","clientSynced","canvases","setCanvases","setSelectedCanvases","ChangeQuestionValues","one","calcQuestionOne","two","calcQuestionTwo","three","calcQuestionThree","four","calcQuestionFour","ChangeCompare","fetchCanvasData","useCallback","item1","item2","newSelected","Spacer","Divider","Loading","renderForStateMachine","ControlCompareLink","count","setCount","getCount","countClientRecords","c"],"mappings":"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","file":"static/js/2.6225822b.chunk.js","sourcesContent":["/**\n * Creates and fills an array with some data\n *\n * @export\n * @template T\n * @param {number} len\n * @param {T} fill\n * @returns {T[]}\n */\nexport default function arrayFillWith<T>(len: number, fill: T): T[] {\n\treturn new Array(len).fill(fill)\n}\n","/**\n * Add Padding\n *\n * add white space around some content\n */\n\nimport { format } from \"date-fns\"\n\nexport const addPadding = (content: any, margin = 10) => {\n\treturn {\n\t\tmargin,\n\t\tcolumns: [content],\n\t}\n}\n\n/**\n * Page and margin defaults\n */\n\nexport const pageDefaultSettings = () => {\n\treturn {\n\t\t// watermark: {\n\t\t// \ttext: \"draft\",\n\t\t// \tcolor: \"blue\",\n\t\t// \topacity: 0.3,\n\t\t// \tbold: true,\n\t\t// \titalics: false,\n\t\t// },\n\n\t\tpageSize: \"A4\",\n\t\tpageMargins: [0, 0, 0, 25],\n\t\tfooter: {\n\t\t\tcolumns: [\n\t\t\t\t{\n\t\t\t\t\ttext: `Created on the ${format(new Date(), \"do 'of' MMMM yyyy\")}`,\n\t\t\t\t\talignment: \"center\",\n\t\t\t\t\tfontSize: 12,\n\t\t\t\t\tcolor: \"#333\",\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t}\n}\n\n/**\n * Frame Content\n *\n * Put content in a table with a border\n */\n\nexport const frameContent = (inner: any, style: string[] = []) => {\n\treturn {\n\t\ttable: {\n\t\t\twidths: [\"*\"], // to make it full length\n\t\t\tbody: [[inner]],\n\t\t},\n\t\tstyle,\n\t}\n}\n\n/**\n * Table with Text in it for top of page\n * Requires a pageHeader style\n */\n\nexport const pageHeading = (text: string) => {\n\tconst content = frameContent(addPadding(text), [\"pageHeader\"])\n\n\treturn {\n\t\t...content,\n\t\tlayout: \"noBorders\",\n\t}\n}\n\n/**\n * Add 20 points of padding on a full page\n */\n\nexport const pagePadding = (content: any) => addPadding(content, 20)\n\n/**\n * Basic table of key .... value\n */\n\nexport const basicTable = (items: any, style: string[] = []) => {\n\treturn {\n\t\ttable: {\n\t\t\twidths: [\"75%\", \"*\"],\n\t\t\tbody: items,\n\t\t},\n\t\tstyle,\n\t\tlayout: \"noBorders\",\n\t}\n}\n","import { BaseCFCStruct } from \"../../../data/_config/shape\"\nimport createCashFlowItem from \"../../../state/CFC/createCashFlow\"\nimport { calculatedEndDate } from \"../../../util/dates\"\n\nconst initialValues: BaseCFCStruct = {\n\tcanvasTitle: \"\",\n\tcanvasType: \"review\",\n\tcanvasTimeFrame: \"quaterly\",\n\tcanvasStartDate: new Date(),\n\tcanvasEndDate: calculatedEndDate(new Date(), \"quaterly\"),\n\topeningBalance: 0,\n\tpaygWithholding: 0,\n\tsuperAmount: 0,\n\tincomeTax: 25,\n\tcashToOwner: 0,\n\tstock: 0,\n\tcreditors: 0,\n\tdebtors: 0,\n\tassets: 0,\n\tloans: 0,\n\tcashInItems: [createCashFlowItem()],\n\tcashOutItems: [createCashFlowItem()],\n}\n\nexport default initialValues\n","import { BaseCFCStruct } from \"../../../data/_config/shape\"\nimport { CalculatedValues } from \"../../../state/CFC/useCalculated\"\nimport {\n\tcalcTotalNetAssets,\n\tcalcAvailableToSpend,\n\tcalcCashSurplus,\n\tcalcCashFlowGST,\n\tcalcClosingBalance,\n\tcalcIncomeTaxPer,\n} from \"../../../state/CFC/accumulators\"\n\n/**\n * Calculates the values for the dynamic values\n *\n * @param {BaseCFCStruct} values\n * @returns {CalculatedValues}\n */\nfunction calculateInitial(values: BaseCFCStruct): CalculatedValues {\n\treturn {\n\t\tgstOnSales: calcCashFlowGST(values.cashInItems),\n\t\tclosingBalance: calcClosingBalance(values),\n\t\tgstOnPurchases: calcCashFlowGST(values.cashOutItems),\n\t\ttotalNetAssets: calcTotalNetAssets(values),\n\t\tcashSurplus: calcCashSurplus(values),\n\t\tavailableToSpend: calcAvailableToSpend(values),\n\t\tincomeTaxPercentage: calcIncomeTaxPer(values),\n\t}\n}\n\nexport default calculateInitial\n","import pdfMake from \"pdfmake/build/pdfmake\"\nimport { detect } from \"detect-browser\"\n\nexport default function (pdf: pdfMake.TCreatedPdf): void {\n\tconst browser = detect()\n\tif (browser?.name === \"ie\" || browser?.name === \"edge\") {\n\t\tpdf.download()\n\t\treturn\n\t}\n\n\tpdf.open()\n}\n","import { v4 as uuidv4 } from \"uuid\"\nimport { CashFlow } from \"../../data/_config/shape\"\n\nexport default function createCashFlowItem(): CashFlow {\n\treturn {\n\t\tid: uuidv4(),\n\t\tdescription: \"\",\n\t\tamount: 0,\n\t\tgstApplicable: true,\n\t}\n}\n","import { isAfter } from \"date-fns\"\nimport { CFCStruct, ClientId, CFCId } from \"../../../data/_config/shape\"\nimport CFCUseCase from \"../../../data/CFC/CFCLogic\"\nimport { SelectFieldOptions } from \"../../SelectField/SelectField\"\nimport { canvasDisplayTitle } from \"../../CFC/__config/utilities\"\nimport { CanvasTuple } from \"./shape\"\nimport filterById from \"../../../util/filters/ById\"\nimport {\n\ttoTwoDecimal,\n\tremoveTrailingZeros,\n} from \"../../../util/money/formatting\"\nimport concatStr from \"../../../util/strings/concatStr\"\nimport { pipe } from \"../../../util/reduce/math\"\n\ntype Client = ClientId | undefined\n\n/**\n * Fetches the canvases for a specific client\n *\n * @param {Client} client\n * @returns {Promise<CFCStruct[]>}\n */\nexport async function getCanvasData(client: Client): Promise<CFCStruct[]> {\n\tif (!client) return []\n\tconst data = await CFCUseCase.findByClient(client)\n\treturn data\n}\n\n/**\n * Reduces a CFC object into options for the select field\n *\n * @returns {ReducerHOF<SelectFieldOptions, CFCStruct>}\n */\nexport function reduceToOptions(): ReducerHOF<SelectFieldOptions, CFCStruct> {\n\treturn (acc, cur): SelectFieldOptions => {\n\t\treturn acc.concat({\n\t\t\tvalue: cur.id || -1,\n\t\t\tlabel: canvasDisplayTitle(cur),\n\t\t})\n\t}\n}\n\n/**\n * Changes which canvases are selected for comparing\n *\n * @export\n * @param {CFCStruct[]} allCanvases\n * @param {CanvasTuple} selected\n * @param {number} idx\n * @param {CFCId} id\n * @returns {CanvasTuple}\n */\nexport function changeSelected(\n\tallCanvases: CFCStruct[],\n\tselected: CanvasTuple,\n\tidx: number,\n\tid: CFCId\n): CanvasTuple {\n\tconst newItem = allCanvases.filter(filterById(id))[0]\n\t// return if undefined\n\tif (!newItem) return selected\n\n\tif (idx === 0) {\n\t\tif (isAfter(selected[1].canvasStartDate, newItem.canvasStartDate)) {\n\t\t\treturn [selected[1], newItem]\n\t\t}\n\t\treturn [newItem, selected[1]]\n\t}\n\n\tif (isAfter(newItem.canvasStartDate, selected[0].canvasStartDate)) {\n\t\treturn [newItem, selected[0]]\n\t}\n\treturn [selected[0], newItem]\n}\n\n/**\n * Calculated the percentage difference of two fields\n *\n * @export\n * @param {number} val1\n * @param {number} val2\n * @returns {string}\n */\nexport function calculateDifferencePer(val1: number, val2: number): string {\n\tif (val2 === 0) return \"N/A\"\n\tconst diff = ((val1 - val2) / val2) * 100\n\n\treturn pipe(toTwoDecimal, removeTrailingZeros, concatStr(\"%\"))(`${diff}`)\n}\n","import pdfMake from \"pdfmake/build/pdfmake\"\nimport pdfFonts from \"pdfmake/build/vfs_fonts\"\nimport { green } from \"@material-ui/core/colors\"\nimport { format } from \"date-fns\"\nimport {\n\tframeContent,\n\tbasicTable,\n\tpageDefaultSettings,\n\tpageHeading,\n\tpagePadding,\n} from \"./PDFLib\"\nimport { BaseCFCStruct, CashFlow } from \"../../data/_config/shape\"\nimport {\n\tcalcCashFlowGST,\n\tcalcCashFlowTotal,\n\tcalcTotalCashOut,\n} from \"../../state/CFC/accumulators\"\nimport { calculateInitial } from \"../Forms/CFC\"\nimport { canvasDisplayTitle } from \"../CFC/__config/utilities\"\nimport upperFirst from \"../../util/strings/upperCaseFirst\"\n\npdfMake.vfs = pdfFonts.pdfMake.vfs\n\nconst formatDollars = (value: number) => `$${value.toString()}`\n\nconst openingBalanceSection = (openingBalance: number): any => {\n\treturn frameContent(\n\t\tbasicTable([\n\t\t\t[\n\t\t\t\t\"Opening Balance\",\n\t\t\t\t{ text: formatDollars(openingBalance), style: [\"rightAlign\"] },\n\t\t\t],\n\t\t])\n\t)\n}\n\nconst cashInSection = (cashInItems: CashFlow[], cashInTotal: number): any => {\n\treturn frameContent([\n\t\t{\n\t\t\ttext: \"Cash IN\",\n\t\t\tbold: true,\n\t\t},\n\t\tbasicTable([\n\t\t\t...cashInItems.map((line) => [\n\t\t\t\tline.description,\n\t\t\t\t{ text: formatDollars(line.amount), style: [\"rightAlign\"] },\n\t\t\t]),\n\t\t\t[\n\t\t\t\t\"Total (Exc GST)\",\n\t\t\t\t{\n\t\t\t\t\ttext: formatDollars(cashInTotal),\n\t\t\t\t\tstyle: [\"rightAlign\"],\n\t\t\t\t},\n\t\t\t],\n\t\t]),\n\t])\n}\n\nconst gstOnSalesSection = (gstOnSales: number): any => {\n\treturn frameContent(\n\t\tbasicTable(\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"GST on Sales\",\n\t\t\t\t\t{ text: formatDollars(gstOnSales), style: [\"rightAlign\"] },\n\t\t\t\t],\n\t\t\t],\n\t\t\t[\"yellowBlock\"]\n\t\t)\n\t)\n}\n\nconst cashOutSection = (\n\tcashOutItems: CashFlow[],\n\tcashOutTotal: number\n): any => {\n\treturn frameContent([\n\t\t{ text: \"Cash OUT\", bold: true },\n\t\tbasicTable([\n\t\t\t...cashOutItems.map((line) => [\n\t\t\t\tline.description,\n\t\t\t\t{ text: formatDollars(line.amount), style: [\"rightAlign\"] },\n\t\t\t]),\n\t\t\t[\n\t\t\t\t\"Total (Exc GST)\",\n\t\t\t\t{\n\t\t\t\t\ttext: formatDollars(cashOutTotal),\n\t\t\t\t\tstyle: [\"rightAlign\"],\n\t\t\t\t},\n\t\t\t],\n\t\t]),\n\t])\n}\n\nconst gstOnPurchasesSection = (\n\tgstOnPurchases: number,\n\tpaygWithholding: number,\n\tsuperAmount: number\n): any => {\n\treturn frameContent(\n\t\tbasicTable(\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"GST on Purchases\",\n\t\t\t\t\t{ text: formatDollars(gstOnPurchases), style: [\"rightAlign\"] },\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"PAYG Withholding\",\n\t\t\t\t\t{ text: formatDollars(paygWithholding), style: [\"rightAlign\"] },\n\t\t\t\t],\n\t\t\t\t[\"Super\", { text: formatDollars(superAmount), style: [\"rightAlign\"] }],\n\t\t\t],\n\t\t\t[\"yellowBlock\"]\n\t\t)\n\t)\n}\n\nconst cashSurplusSection = (cashSurplus: number): any => {\n\treturn frameContent(\n\t\tbasicTable([\n\t\t\t[\n\t\t\t\t\"Cash Surplus\",\n\t\t\t\t{ text: formatDollars(cashSurplus), style: [\"rightAlign\"] },\n\t\t\t],\n\t\t])\n\t)\n}\n\nconst incomeSection = (incomeTax: number): any => {\n\treturn frameContent(\n\t\tbasicTable(\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"Income/Company Tax\",\n\t\t\t\t\t// TODO: Needs to use the new calculations in feature/122 branch\n\t\t\t\t\t{ text: formatDollars(incomeTax), style: [\"rightAlign\"] },\n\t\t\t\t],\n\t\t\t],\n\t\t\t[\"yellowBlock\"]\n\t\t)\n\t)\n}\n\nconst availableToSpendSection = (availableToSpend: number): any => {\n\treturn frameContent(\n\t\tbasicTable([\n\t\t\t[\n\t\t\t\t\"Available to spend\",\n\t\t\t\t{ text: formatDollars(availableToSpend), style: [\"rightAlign\"] },\n\t\t\t],\n\t\t])\n\t)\n}\n\nconst closingCashBalanceSection = (\n\tcashToOwner: number,\n\tclosingBalance: number\n): any => {\n\treturn frameContent([\n\t\t{ text: \"Your Closing Cash Balance\", bold: true },\n\t\tbasicTable([\n\t\t\t[\n\t\t\t\t\"Cash to owner\",\n\t\t\t\t{ text: formatDollars(cashToOwner), style: [\"rightAlign\"] },\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Closing balance\",\n\t\t\t\t{ text: formatDollars(closingBalance), style: [\"rightAlign\"] },\n\t\t\t],\n\t\t]),\n\t])\n}\n\nconst yourNetAssetPositionSection = (\n\tstock: number,\n\tcreditors: number,\n\tdebtors: number,\n\tassets: number,\n\tloans: number,\n\ttotalNetAssets: number\n): any => {\n\treturn frameContent([\n\t\t{ text: \"Your net asset position\", bold: true },\n\t\tbasicTable([\n\t\t\t[\"Stocks\", { text: formatDollars(stock), style: [\"rightAlign\"] }],\n\t\t\t[\"Creditors\", { text: formatDollars(creditors), style: [\"rightAlign\"] }],\n\t\t\t[\"Debtors\", { text: formatDollars(debtors), style: [\"rightAlign\"] }],\n\t\t\t[\"Assets\", { text: formatDollars(assets), style: [\"rightAlign\"] }],\n\t\t\t[\"Loans\", { text: formatDollars(loans), style: [\"rightAlign\"] }],\n\t\t\t[\n\t\t\t\t{ text: \"Total net assets\", bold: true },\n\t\t\t\t{ text: formatDollars(totalNetAssets), style: [\"rightAlign\"] },\n\t\t\t],\n\t\t]),\n\t])\n}\n\nexport default async (title: string, values: BaseCFCStruct) => {\n\tconst {\n\t\topeningBalance,\n\t\tcashInItems,\n\t\tcashOutItems,\n\t\tpaygWithholding,\n\t\tsuperAmount,\n\t\tincomeTax,\n\t\tcashToOwner,\n\t\tstock,\n\t\tcreditors,\n\t\tdebtors,\n\t\tassets,\n\t\tloans,\n\t} = values\n\n\tconst cashInTotal = calcCashFlowTotal(cashInItems)\n\tconst cashInGST = calcCashFlowGST(cashInItems)\n\tconst cashOutTotal = calcTotalCashOut(values)\n\tconst cashOutGST = calcCashFlowGST(cashOutItems)\n\n\tconst calculated = calculateInitial(values)\n\tconst {\n\t\tcashSurplus,\n\t\tavailableToSpend,\n\t\tclosingBalance,\n\t\ttotalNetAssets,\n\t} = calculated\n\n\tconst docDefinition: any = {\n\t\t...pageDefaultSettings(),\n\n\t\tcontent: [\n\t\t\tpageHeading(`${title} - CANVAS - ${canvasDisplayTitle(values)}`),\n\t\t\tpagePadding([\n\t\t\t\tframeContent({\n\t\t\t\t\ttable: {\n\t\t\t\t\t\twidths: [\"25%\", \"25%\", \"25%\", \"25%\"],\n\t\t\t\t\t\tbody: [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t{ text: \"Canvas Type\", bold: true },\n\t\t\t\t\t\t\t\t\tupperFirst(values.canvasType),\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t{ text: \"Time-frame\", bold: true },\n\t\t\t\t\t\t\t\t\tupperFirst(values.canvasTimeFrame),\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t{ text: \"Start date\", bold: true },\n\t\t\t\t\t\t\t\t\t`${format(values.canvasStartDate, \"dd/MM/yyyy\")}`,\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t{ text: \"End date\", bold: true },\n\t\t\t\t\t\t\t\t\t`${format(values.canvasEndDate, \"dd/MM/yyyy\")}`,\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\tlayout: \"noBorders\",\n\t\t\t\t}),\n\t\t\t\t\" \",\n\t\t\t\topeningBalanceSection(openingBalance),\n\n\t\t\t\t{\n\t\t\t\t\ttable: {\n\t\t\t\t\t\twidths: [\"60%\", \"*\"],\n\t\t\t\t\t\tbody: [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tcashInSection(cashInItems, cashInTotal),\n\t\t\t\t\t\t\t\tgstOnSalesSection(cashInGST),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tcashOutSection(cashOutItems, cashOutTotal),\n\t\t\t\t\t\t\t\tgstOnPurchasesSection(cashOutGST, paygWithholding, superAmount),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[cashSurplusSection(cashSurplus), incomeSection(incomeTax)],\n\t\t\t\t\t\t\t[availableToSpendSection(availableToSpend), {}],\n\t\t\t\t\t\t\t[closingCashBalanceSection(cashToOwner, closingBalance), {}],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tyourNetAssetPositionSection(\n\t\t\t\t\t\t\t\t\tstock,\n\t\t\t\t\t\t\t\t\tcreditors,\n\t\t\t\t\t\t\t\t\tdebtors,\n\t\t\t\t\t\t\t\t\tassets,\n\t\t\t\t\t\t\t\t\tloans,\n\t\t\t\t\t\t\t\t\ttotalNetAssets\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\tlayout: \"noBorders\",\n\t\t\t\t},\n\t\t\t]),\n\t\t],\n\n\t\tstyles: {\n\t\t\tpageHeader: {\n\t\t\t\tfontSize: 20,\n\t\t\t\tbold: true,\n\t\t\t\tfillColor: green[\"800\"],\n\t\t\t\tcolor: \"white\",\n\t\t\t\talignment: \"center\",\n\t\t\t},\n\t\t\trightAlign: {\n\t\t\t\t// fillColor: \"#CCCCCC\",\n\t\t\t\talignment: \"right\",\n\t\t\t},\n\t\t\tyellowBlock: {\n\t\t\t\tfillColor: \"yellow\",\n\t\t\t},\n\t\t},\n\n\t\tdefaultStyle: {\n\t\t\tfontSize: 15,\n\t\t\tbold: false,\n\t\t},\n\t}\n\treturn pdfMake.createPdf(docDefinition)\n}\n","import React, { ReactElement } from \"react\"\nimport { Typography } from \"@material-ui/core\"\nimport { Link } from \"react-router-dom\"\nimport { PrivateRoutes, routeVarReplacement } from \"../../util/routes/routes\"\n\n/**\n * No canvas data message\n *\n * @export\n * @returns {ReactElement}\n */\nexport default function NoCanvases(): ReactElement {\n\treturn (\n\t\t<>\n\t\t\t<Typography variant=\"h6\">No canvas data found</Typography>\n\t\t\t<Typography>\n\t\t\t\tCheck that you have the correct{\" \"}\n\t\t\t\t<Link to={PrivateRoutes.ClientList}>client selected</Link> or{\" \"}\n\t\t\t\t<Link to={routeVarReplacement(PrivateRoutes.CFC, [[\":id?\", \"\"]])}>\n\t\t\t\t\tstart a new canvas\n\t\t\t\t</Link>\n\t\t\t\t.\n\t\t\t</Typography>\n\t\t</>\n\t)\n}\n","import React, { ReactElement, useState, useContext, useEffect } from \"react\"\nimport { ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\"\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\"\nimport { CopyCanvasDialog } from \"../../content/dialog\"\nimport CFCContext from \"../../state/CFC/context\"\nimport { CFCActionTypes } from \"../../state/CFC/shape\"\n\n/**\n * Component used to trigger the copy canvas modal\n *\n * @export\n * @returns {ReactElement}\n */\nexport default function CopyCanvasTrigger(): ReactElement {\n\tconst [open, setOpen] = useState(false)\n\tconst { dispatch } = useContext(CFCContext)\n\n\tuseEffect(() => {\n\t\tdispatch({\n\t\t\ttype: CFCActionTypes.ChangeCopyCanvasActive,\n\t\t\tpayload: open,\n\t\t})\n\t}, [open, dispatch])\n\n\tconst onClose = (): void => {\n\t\tsetOpen(false)\n\t}\n\tconst onOpen = (): void => {\n\t\tsetOpen(true)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<ListItem button onClick={onOpen}>\n\t\t\t\t<ListItemIcon>\n\t\t\t\t\t<FileCopyIcon />\n\t\t\t\t</ListItemIcon>\n\t\t\t\t<ListItemText>Copy Canvas</ListItemText>\n\t\t\t</ListItem>\n\t\t\t<CopyCanvasDialog open={open} onClose={onClose} />\n\t\t</>\n\t)\n}\n","import pdfMake from \"pdfmake/build/pdfmake\"\nimport pdfFonts from \"pdfmake/build/vfs_fonts\"\nimport { green } from \"@material-ui/core/colors\"\nimport { CFCStruct, CashFlow } from \"../../data/_config/shape\"\nimport { pageDefaultSettings, pageHeading, pagePadding } from \"./PDFLib\"\nimport { canvasDisplayTitle } from \"../CFC/__config/utilities\"\nimport { addDollarSign } from \"../../util/money/formatting\"\nimport { calculateDifferencePer } from \"../CFCCompare/__config/utilities\"\nimport { calculateInitial } from \"../Forms/CFC\"\nimport { calcCashFlowTotal } from \"../../state/CFC/accumulators\"\nimport arrayFillWith from \"../../util/array/arrayFillWith\"\n\npdfMake.vfs = pdfFonts.pdfMake.vfs\n\nconst rowValue = (values: [number, number]): string[] => {\n\tconst [val1, val2] = values\n\treturn [\n\t\t`${val1}`,\n\t\t`${val2}`,\n\t\taddDollarSign(`${val1 - val2}`),\n\t\tcalculateDifferencePer(val1, val2),\n\t]\n}\n\nfunction renderRepeaterFields(val1: CashFlow[], val2: CashFlow[]): string[][] {\n\tconst len = val1.length > val2.length ? val1.length : val2.length\n\tconst arr = arrayFillWith(len, 0)\n\treturn arr.map((item, idx) => [\n\t\t\"\",\n\t\t...rowValue([val1[idx]?.amount || 0, val2[idx]?.amount || 0]),\n\t])\n}\n\nexport default async (\n\tleftSelected: CFCStruct,\n\trightSelected: CFCStruct\n): Promise<pdfMake.TCreatedPdf> => {\n\tconst leftCalc = calculateInitial(leftSelected)\n\tconst rightCalc = calculateInitial(rightSelected)\n\n\tconst docDefinition: any = {\n\t\t...pageDefaultSettings(),\n\t\tcontent: [\n\t\t\tpageHeading(\"Canvas Comparison\"),\n\t\t\tpagePadding([\n\t\t\t\t{\n\t\t\t\t\ttable: {\n\t\t\t\t\t\twidth: [\"*\", \"*\", \"*\", \"*\", \"*\"],\n\t\t\t\t\t\tbody: [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\t\t{ text: canvasDisplayTitle(leftSelected), bold: true },\n\t\t\t\t\t\t\t\t{ text: canvasDisplayTitle(rightSelected), bold: true },\n\t\t\t\t\t\t\t\t{ text: \"$ Difference\", bold: true },\n\t\t\t\t\t\t\t\t{ text: \"% Difference\", bold: true },\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t{ text: \"Opening balance\", bold: true },\n\t\t\t\t\t\t\t\t...rowValue([\n\t\t\t\t\t\t\t\t\tleftSelected.openingBalance,\n\t\t\t\t\t\t\t\t\trightSelected.openingBalance,\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[{ text: \"Cash In\", colSpan: 5, bold: true }, \"\", \"\", \"\", \"\"],\n\t\t\t\t\t\t\t...renderRepeaterFields(\n\t\t\t\t\t\t\t\tleftSelected.cashInItems,\n\t\t\t\t\t\t\t\trightSelected.cashInItems\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\"GST on sales\",\n\t\t\t\t\t\t\t\t...rowValue([leftCalc.gstOnSales, rightCalc.gstOnSales]),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t{ text: \"Total (exc GST)\", bold: true },\n\t\t\t\t\t\t\t\t...rowValue([\n\t\t\t\t\t\t\t\t\tcalcCashFlowTotal(leftSelected.cashInItems),\n\t\t\t\t\t\t\t\t\tcalcCashFlowTotal(rightSelected.cashInItems),\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[{ text: \"Cash Out\", colSpan: 5, bold: true }, \"\", \"\", \"\", \"\"],\n\t\t\t\t\t\t\t...renderRepeaterFields(\n\t\t\t\t\t\t\t\tleftSelected.cashOutItems,\n\t\t\t\t\t\t\t\trightSelected.cashOutItems\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\"GST on Purchases\",\n\t\t\t\t\t\t\t\t...rowValue([\n\t\t\t\t\t\t\t\t\tleftCalc.gstOnPurchases,\n\t\t\t\t\t\t\t\t\trightCalc.gstOnPurchases,\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t{ text: \"Total (exc GST)\", bold: true },\n\t\t\t\t\t\t\t\t...rowValue([\n\t\t\t\t\t\t\t\t\tcalcCashFlowTotal(leftSelected.cashOutItems),\n\t\t\t\t\t\t\t\t\tcalcCashFlowTotal(rightSelected.cashOutItems),\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t{ text: \"Cash Surplus\", bold: true },\n\t\t\t\t\t\t\t\t...rowValue([leftCalc.cashSurplus, rightCalc.cashSurplus]),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\"Income/Outcome tax\",\n\t\t\t\t\t\t\t\t// TODO: Update to the correct income tax value\n\t\t\t\t\t\t\t\t...rowValue([leftSelected.incomeTax, rightSelected.incomeTax]),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t{ text: \"Available to spend\", bold: true },\n\t\t\t\t\t\t\t\t...rowValue([\n\t\t\t\t\t\t\t\t\tleftCalc.availableToSpend,\n\t\t\t\t\t\t\t\t\trightCalc.availableToSpend,\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\"Cash to owner\",\n\t\t\t\t\t\t\t\t...rowValue([\n\t\t\t\t\t\t\t\t\tleftSelected.cashToOwner,\n\t\t\t\t\t\t\t\t\trightSelected.cashToOwner,\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t{ text: \"Closing balance\", bold: true },\n\t\t\t\t\t\t\t\t...rowValue([\n\t\t\t\t\t\t\t\t\tleftCalc.closingBalance,\n\t\t\t\t\t\t\t\t\trightCalc.closingBalance,\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\"Stock\", ...rowValue([leftSelected.stock, rightSelected.stock])],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\"Debtors\",\n\t\t\t\t\t\t\t\t...rowValue([leftSelected.debtors, rightSelected.debtors]),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\"Assets\",\n\t\t\t\t\t\t\t\t...rowValue([leftSelected.assets, rightSelected.assets]),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\"Creditors\",\n\t\t\t\t\t\t\t\t...rowValue([leftSelected.creditors, rightSelected.creditors]),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\"Loans\", ...rowValue([leftSelected.loans, rightSelected.loans])],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t{ text: \"Net position\", bold: true },\n\t\t\t\t\t\t\t\t...rowValue([\n\t\t\t\t\t\t\t\t\tleftCalc.totalNetAssets,\n\t\t\t\t\t\t\t\t\trightCalc.totalNetAssets,\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t]),\n\t\t],\n\t\tstyles: {\n\t\t\tpageHeader: {\n\t\t\t\tfontSize: 20,\n\t\t\t\tbold: true,\n\t\t\t\tfillColor: green[\"800\"],\n\t\t\t\tcolor: \"white\",\n\t\t\t\talignment: \"center\",\n\t\t\t},\n\t\t},\n\t\tdefaultStyles: {\n\t\t\tfontSize: 15,\n\t\t\tbold: false,\n\t\t\tcolor: \"#000\",\n\t\t},\n\t}\n\n\treturn pdfMake.createPdf(docDefinition)\n}\n","import React, { ReactElement, useContext } from \"react\"\nimport PictureAsPdfIcon from \"@material-ui/icons/PictureAsPdf\"\nimport { List, ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\"\nimport AddIcon from \"@material-ui/icons/Add\"\nimport { useHistory, useLocation, useParams } from \"react-router-dom\"\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumbered\"\nimport GetAppIcon from \"@material-ui/icons/GetApp\"\nimport ExpandableNav from \"../ExpandableNav\"\nimport { PrivateRoutes } from \"../../util/routes/routes\"\nimport CopyCanvasTrigger from \"./CopyCanvasTrigger\"\nimport { ControlCompareLink } from \"../CFCCompare\"\nimport CFCUseCase from \"../../data/CFC/CFCLogic\"\nimport CashFlowCanvasPDF from \"../PDF/CashFlowCanvasPDF\"\nimport useCurrentClient from \"../../state/client/useCurrentClient\"\nimport CFCContext from \"../../state/CFC/context\"\nimport CFCComparePDF from \"../PDF/CFCComparePDF\"\nimport servePDF from \"../PDF/servePDF\"\n\n/**\n * Canvas page control panel component\n *\n * @export\n * @returns {ReactElement}\n */\nexport default function ControlPanel(): ReactElement {\n\tconst history = useHistory()\n\tconst location = useLocation()\n\tconst { id: canvasId } = useParams()\n\tconst [currentClient] = useCurrentClient()\n\tconst { leftCompare, rightCompare } = useContext(CFCContext)\n\n\tconst goTo = (route: PrivateRoutes) => (): void => {\n\t\t// eslint-disable-next-line\n\t\thistory.push(route)\n\t}\n\n\tconst isNewPage = (): boolean => {\n\t\treturn location.pathname === PrivateRoutes.CFC\n\t}\n\n\tconst isCompare = (): boolean => {\n\t\treturn location.pathname === PrivateRoutes.CFCCompare\n\t}\n\n\tconst printPDF = async () => {\n\t\tif (canvasId && typeof canvasId === \"string\" && !isCompare()) {\n\t\t\tconst data = await CFCUseCase.findById(canvasId)\n\t\t\t// console.log(\"data\", canvasId, data)\n\t\t\tif (data === undefined) alert(\"no data\")\n\t\t\telse {\n\t\t\t\tconst pdf = await CashFlowCanvasPDF(\n\t\t\t\t\tcurrentClient?.name ?? \"Client\",\n\t\t\t\t\tdata\n\t\t\t\t)\n\t\t\t\tservePDF(pdf)\n\t\t\t}\n\t\t}\n\n\t\tif (isCompare()) {\n\t\t\tif (leftCompare && rightCompare) {\n\t\t\t\tconst pdf = await CFCComparePDF(leftCompare, rightCompare)\n\t\t\t\tservePDF(pdf)\n\t\t\t}\n\t\t}\n\t}\n\n\treturn (\n\t\t<ExpandableNav>\n\t\t\t<List component=\"nav\" disablePadding>\n\t\t\t\t{!isNewPage() && !isCompare() && <CopyCanvasTrigger />}\n\t\t\t\t{(!isNewPage() || isCompare()) && (\n\t\t\t\t\t<ListItem button onClick={goTo(PrivateRoutes.CFC)}>\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<AddIcon />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText>Create new Canvas</ListItemText>\n\t\t\t\t\t</ListItem>\n\t\t\t\t)}\n\t\t\t\t{!isNewPage() && !isCompare() && (\n\t\t\t\t\t<ListItem button>\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<GetAppIcon />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText>Import data</ListItemText>\n\t\t\t\t\t</ListItem>\n\t\t\t\t)}\n\t\t\t\t<ListItem button onClick={goTo(PrivateRoutes.CFCListing)}>\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<FormatListNumberedIcon />\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText>List of Canvases</ListItemText>\n\t\t\t\t</ListItem>\n\t\t\t\t{!isCompare() && !isNewPage() && <ControlCompareLink />}\n\t\t\t\t{!isNewPage() && (\n\t\t\t\t\t<ListItem button>\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<PictureAsPdfIcon />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText onClick={printPDF}>Generate PDF</ListItemText>\n\t\t\t\t\t</ListItem>\n\t\t\t\t)}\n\t\t\t</List>\n\t\t</ExpandableNav>\n\t)\n}\n","import { makeStyles } from \"@material-ui/core\"\n\nconst useStyles = makeStyles((theme) => ({\n\tcompareLabel: {\n\t\tdisplay: \"flex\",\n\t\talignItems: \"center\",\n\t},\n\tcompareTooltip: {\n\t\tmarginLeft: theme.spacing(1),\n\t},\n\tcell1: {\n\t\twidth: \"20%\",\n\t},\n\tcellCanvas: {\n\t\twidth: \"25%\",\n\t},\n\tcellDifference: {\n\t\twidth: \"15%\",\n\t},\n\ttableRow: {\n\t\t\"&:hover\": {\n\t\t\tbackground: theme.palette.grey[100],\n\t\t},\n\t},\n\tnoBorderBottom: {\n\t\tborderBottom: \"none\",\n\t},\n\ttable: {\n\t\t[theme.breakpoints.down(\"md\")]: {\n\t\t\tminWidth: theme.breakpoints.values.md,\n\t\t},\n\t},\n\tto: {\n\t\t[theme.breakpoints.down(\"md\")]: {\n\t\t\tmarginTop: -theme.spacing(1),\n\t\t\tmarginBottom: -theme.spacing(1),\n\t\t},\n\t},\n}))\n\nexport default useStyles\n","import React, { ReactElement } from \"react\"\nimport Alert from \"@material-ui/lab/Alert\"\n\n/**\n * Message to display when comparing canvases are in different time frames\n *\n * @export\n * @returns {ReactElement}\n */\nexport default function TimeframeOutOfSync(): ReactElement {\n\treturn (\n\t\t<Alert severity=\"warning\">\n\t\t\tThe two selected canvases are in different time-frames. The calculations\n\t\t\twill not be accurate.\n\t\t</Alert>\n\t)\n}\n","import React, { ReactElement, useMemo, ChangeEvent } from \"react\"\nimport { Typography, Grid, Tooltip } from \"@material-ui/core\"\nimport InfoIcon from \"@material-ui/icons/Info\"\nimport { CompareSelectorProps } from \"./__config/shape\"\nimport SelectField from \"../SelectField\"\nimport { reduceToOptions } from \"./__config/utilities\"\nimport useStyles from \"./__config/styles\"\nimport TimeframeOutOfSync from \"./TimeframeOutOfSync\"\n\nconst tipContent =\n\t\"The canvas with the later date will always move to the ‘left-side’ of the comparison\"\n\n/**\n * Selector to choose between different canvases\n *\n * @export\n * @param {CompareSelectorProps} {\n * \tselectedCanvases: [leftSelected, rightSelected],\n * \tallCanvases,\n * }\n * @returns {ReactElement}\n */\nexport default function CompareSelector({\n\tselectedCanvases: [leftSelected, rightSelected],\n\tallCanvases,\n\tchangeSelected,\n}: CompareSelectorProps): ReactElement {\n\tconst cls = useStyles()\n\n\tconst selectOptions = useMemo(() => {\n\t\treturn allCanvases.reduce(reduceToOptions(), [])\n\t}, [allCanvases])\n\n\tconst changeSelectedCanvas = (idx: number) => (\n\t\te: ChangeEvent<HTMLInputElement>\n\t): void => {\n\t\tchangeSelected(idx, e.target.value)\n\t}\n\n\treturn (\n\t\t<Grid container spacing={2} alignItems=\"center\">\n\t\t\t<Grid item xs={12} md={3}>\n\t\t\t\t<Typography variant=\"h6\" className={cls.compareLabel}>\n\t\t\t\t\tCompare\n\t\t\t\t\t<Tooltip title={tipContent} className={cls.compareTooltip}>\n\t\t\t\t\t\t<InfoIcon color=\"primary\" />\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12} md={4}>\n\t\t\t\t<SelectField\n\t\t\t\t\tname=\"left-side-compare\"\n\t\t\t\t\tlabel=\"Canvas\"\n\t\t\t\t\tvalue={leftSelected?.id || -1}\n\t\t\t\t\tonChange={changeSelectedCanvas(0)}\n\t\t\t\t\toptions={selectOptions}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12} md={1} className={cls.to}>\n\t\t\t\t<Typography align=\"center\" variant=\"overline\" component=\"p\">\n\t\t\t\t\tto\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12} md={4}>\n\t\t\t\t<SelectField\n\t\t\t\t\tname=\"right-side-compare\"\n\t\t\t\t\tlabel=\"Canvas\"\n\t\t\t\t\tvalue={rightSelected?.id || -1}\n\t\t\t\t\tonChange={changeSelectedCanvas(1)}\n\t\t\t\t\toptions={selectOptions}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t\t{leftSelected.canvasTimeFrame !== rightSelected.canvasTimeFrame && (\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<TimeframeOutOfSync />\n\t\t\t\t</Grid>\n\t\t\t)}\n\t\t</Grid>\n\t)\n}\n","import React, { ReactElement } from \"react\"\nimport { TableHead, TableRow, TableCell } from \"@material-ui/core\"\nimport { TableHeaderProps } from \"./__config/shape\"\nimport { canvasDisplayTitle } from \"../CFC/__config/utilities\"\nimport useStyles from \"./__config/styles\"\n\n/**\n * Component used as the table header\n *\n * @export\n * @param {TableHeaderProps} {\n * \tselectedCanvases: [left, right],\n * }\n * @returns {ReactElement}\n */\nexport default React.memo(function TableHeader({\n\tselectedCanvases: [left, right],\n}: TableHeaderProps): ReactElement {\n\tconst cls = useStyles()\n\n\treturn (\n\t\t<TableHead>\n\t\t\t<TableRow>\n\t\t\t\t<TableCell className={cls.cell1} />\n\t\t\t\t<TableCell className={cls.cellCanvas}>\n\t\t\t\t\t{canvasDisplayTitle(left)}\n\t\t\t\t</TableCell>\n\t\t\t\t<TableCell className={cls.cellCanvas}>\n\t\t\t\t\t{canvasDisplayTitle(right)}\n\t\t\t\t</TableCell>\n\t\t\t\t<TableCell className={cls.cellDifference}>$ Difference</TableCell>\n\t\t\t\t<TableCell className={cls.cellDifference}>% Difference</TableCell>\n\t\t\t</TableRow>\n\t\t</TableHead>\n\t)\n})\n","import React, { ReactElement } from \"react\"\nimport { TableCell, TableRow } from \"@material-ui/core\"\nimport { CanvasItemRowProps } from \"./__config/shape\"\nimport { calculateDifferencePer } from \"./__config/utilities\"\nimport { addDollarSign, formatNumber } from \"../../util/money/formatting\"\nimport useStyles from \"./__config/styles\"\n\n/**\n * Used to display the data related to a value for a field in the canvas\n *\n * @export\n * @param {CanvasItemRowProps} {\n * \tvalues: [val1, val2],\n * \tlabel,\n * \tbold\n * \tborder\n * }\n * @returns {ReactElement}\n */\nexport default function CanvasItemRow({\n\tvalues: [val1, val2],\n\tlabel,\n\tbold = false,\n\tborder = true,\n}: CanvasItemRowProps): ReactElement {\n\tconst cls = useStyles()\n\n\treturn (\n\t\t<TableRow className={cls.tableRow}>\n\t\t\t<TableCell\n\t\t\t\tclassName={border ? \"\" : cls.noBorderBottom}\n\t\t\t\tvariant={bold ? \"head\" : \"body\"}\n\t\t\t>\n\t\t\t\t{label || \"\"}\n\t\t\t</TableCell>\n\t\t\t<TableCell\n\t\t\t\tclassName={border ? \"\" : cls.noBorderBottom}\n\t\t\t\tvariant={bold ? \"head\" : \"body\"}\n\t\t\t>\n\t\t\t\t{formatNumber(`${val1}`)}\n\t\t\t</TableCell>\n\t\t\t<TableCell\n\t\t\t\tclassName={border ? \"\" : cls.noBorderBottom}\n\t\t\t\tvariant={bold ? \"head\" : \"body\"}\n\t\t\t>\n\t\t\t\t{formatNumber(`${val2}`)}\n\t\t\t</TableCell>\n\t\t\t<TableCell\n\t\t\t\tclassName={border ? \"\" : cls.noBorderBottom}\n\t\t\t\tvariant={bold ? \"head\" : \"body\"}\n\t\t\t>\n\t\t\t\t{addDollarSign(formatNumber(`${val1 - val2}`))}\n\t\t\t</TableCell>\n\t\t\t<TableCell\n\t\t\t\tclassName={border ? \"\" : cls.noBorderBottom}\n\t\t\t\tvariant={bold ? \"head\" : \"body\"}\n\t\t\t>\n\t\t\t\t{calculateDifferencePer(val1, val2)}\n\t\t\t</TableCell>\n\t\t</TableRow>\n\t)\n}\n","import React, { ReactElement, useMemo } from \"react\"\nimport { TableContainer, Table, TableBody, TableCell } from \"@material-ui/core\"\nimport TableHeader from \"./TableHeader\"\nimport CanvasItemRow from \"./CanvasItemRow\"\nimport { CompareTableProps } from \"./__config/shape\"\nimport { calculateInitial } from \"../Forms/CFC\"\nimport { calcCashFlowTotal } from \"../../state/CFC/accumulators\"\nimport { CashFlow } from \"../../data/_config/shape\"\nimport arrayFillWith from \"../../util/array/arrayFillWith\"\nimport { newTimestamp } from \"../../util/dates\"\nimport useStyles from \"./__config/styles\"\n\n/**\n * The component used to display the data in a table format\n *\n * @export\n * @param {CompareTableProps} {\n * \tselectedCanvases,\n * }\n * @returns {ReactElement}\n */\nexport default function CompareTable({\n\tselectedCanvases,\n}: CompareTableProps): ReactElement {\n\tconst cls = useStyles()\n\n\tconst leftCalculated = useMemo(() => {\n\t\treturn calculateInitial(selectedCanvases[0])\n\t}, [selectedCanvases])\n\n\tconst rightCalculated = useMemo(() => {\n\t\treturn calculateInitial(selectedCanvases[1])\n\t}, [selectedCanvases])\n\n\t/**\n\t * Renders the repeater form values\n\t *\n\t * @param {CashFlow[]} val1\n\t * @param {CashFlow[]} val2\n\t * @returns {ReactElement[]}\n\t */\n\tfunction renderRepeaterFields(\n\t\tval1: CashFlow[],\n\t\tval2: CashFlow[]\n\t): ReactElement[] {\n\t\tconst len = val1.length > val2.length ? val1.length : val2.length\n\t\tconst arr = arrayFillWith(len, 0)\n\t\treturn arr.map((item, idx) => (\n\t\t\t<CanvasItemRow\n\t\t\t\tkey={val1[idx]?.id || val2[idx]?.id || newTimestamp()}\n\t\t\t\tvalues={[val1[idx]?.amount || 0, val2[idx]?.amount || 0]}\n\t\t\t\tborder={idx >= len - 1}\n\t\t\t/>\n\t\t))\n\t}\n\n\treturn (\n\t\t<TableContainer>\n\t\t\t<Table className={cls.table}>\n\t\t\t\t<TableHeader selectedCanvases={selectedCanvases} />\n\t\t\t\t<TableBody>\n\t\t\t\t\t<CanvasItemRow\n\t\t\t\t\t\tbold\n\t\t\t\t\t\tlabel=\"Opening Balance\"\n\t\t\t\t\t\tvalues={[\n\t\t\t\t\t\t\tselectedCanvases[0].openingBalance,\n\t\t\t\t\t\t\tselectedCanvases[1].openingBalance,\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t\t<TableCell colSpan={5} variant=\"head\" className={cls.noBorderBottom}>\n\t\t\t\t\t\tCash IN\n\t\t\t\t\t</TableCell>\n\t\t\t\t\t{renderRepeaterFields(\n\t\t\t\t\t\tselectedCanvases[0].cashInItems,\n\t\t\t\t\t\tselectedCanvases[1].cashInItems\n\t\t\t\t\t)}\n\t\t\t\t\t<CanvasItemRow\n\t\t\t\t\t\tlabel=\"GST on sales\"\n\t\t\t\t\t\tvalues={[leftCalculated.gstOnSales, rightCalculated.gstOnSales]}\n\t\t\t\t\t/>\n\t\t\t\t\t<CanvasItemRow\n\t\t\t\t\t\tbold\n\t\t\t\t\t\tlabel=\"Total (exc GST)\"\n\t\t\t\t\t\tvalues={[\n\t\t\t\t\t\t\tcalcCashFlowTotal(selectedCanvases[0].cashInItems),\n\t\t\t\t\t\t\tcalcCashFlowTotal(selectedCanvases[1].cashInItems),\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t\t<TableCell colSpan={5} variant=\"head\" className={cls.noBorderBottom}>\n\t\t\t\t\t\tCash OUT\n\t\t\t\t\t</TableCell>\n\t\t\t\t\t{renderRepeaterFields(\n\t\t\t\t\t\tselectedCanvases[0].cashOutItems,\n\t\t\t\t\t\tselectedCanvases[1].cashOutItems\n\t\t\t\t\t)}\n\t\t\t\t\t<CanvasItemRow\n\t\t\t\t\t\tlabel=\"GST on Purchases\"\n\t\t\t\t\t\tvalues={[\n\t\t\t\t\t\t\tleftCalculated.gstOnPurchases,\n\t\t\t\t\t\t\trightCalculated.gstOnPurchases,\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t\t<CanvasItemRow\n\t\t\t\t\t\tbold\n\t\t\t\t\t\tlabel=\"Total (exc GST)\"\n\t\t\t\t\t\tvalues={[\n\t\t\t\t\t\t\tcalcCashFlowTotal(selectedCanvases[0].cashOutItems),\n\t\t\t\t\t\t\tcalcCashFlowTotal(selectedCanvases[1].cashOutItems),\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t\t<CanvasItemRow\n\t\t\t\t\t\tbold\n\t\t\t\t\t\tlabel=\"Cash Surplus\"\n\t\t\t\t\t\tvalues={[leftCalculated.cashSurplus, rightCalculated.cashSurplus]}\n\t\t\t\t\t/>\n\t\t\t\t\t<CanvasItemRow\n\t\t\t\t\t\tlabel=\"Income/Company Tax\"\n\t\t\t\t\t\tvalues={[\n\t\t\t\t\t\t\tleftCalculated.incomeTaxPercentage,\n\t\t\t\t\t\t\trightCalculated.incomeTaxPercentage,\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t\t<CanvasItemRow\n\t\t\t\t\t\tbold\n\t\t\t\t\t\tlabel=\"Available to spend\"\n\t\t\t\t\t\tvalues={[\n\t\t\t\t\t\t\tleftCalculated.availableToSpend,\n\t\t\t\t\t\t\trightCalculated.availableToSpend,\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t\t<CanvasItemRow\n\t\t\t\t\t\tlabel=\"Cash to Owner\"\n\t\t\t\t\t\tvalues={[\n\t\t\t\t\t\t\tselectedCanvases[0].cashToOwner,\n\t\t\t\t\t\t\tselectedCanvases[1].cashToOwner,\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t\t<CanvasItemRow\n\t\t\t\t\t\tbold\n\t\t\t\t\t\tlabel=\"Closing balance\"\n\t\t\t\t\t\tvalues={[\n\t\t\t\t\t\t\tleftCalculated.closingBalance,\n\t\t\t\t\t\t\trightCalculated.closingBalance,\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t\t<CanvasItemRow\n\t\t\t\t\t\tlabel=\"Stock\"\n\t\t\t\t\t\tvalues={[selectedCanvases[0].stock, selectedCanvases[1].stock]}\n\t\t\t\t\t/>\n\t\t\t\t\t<CanvasItemRow\n\t\t\t\t\t\tlabel=\"Debtors\"\n\t\t\t\t\t\tvalues={[selectedCanvases[0].debtors, selectedCanvases[1].debtors]}\n\t\t\t\t\t/>\n\t\t\t\t\t<CanvasItemRow\n\t\t\t\t\t\tlabel=\"Assets\"\n\t\t\t\t\t\tvalues={[selectedCanvases[0].assets, selectedCanvases[1].assets]}\n\t\t\t\t\t/>\n\t\t\t\t\t<CanvasItemRow\n\t\t\t\t\t\tlabel=\"Creditors\"\n\t\t\t\t\t\tvalues={[\n\t\t\t\t\t\t\tselectedCanvases[0].creditors,\n\t\t\t\t\t\t\tselectedCanvases[1].creditors,\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t\t<CanvasItemRow\n\t\t\t\t\t\tlabel=\"Loans\"\n\t\t\t\t\t\tvalues={[selectedCanvases[0].loans, selectedCanvases[1].loans]}\n\t\t\t\t\t/>\n\t\t\t\t\t<CanvasItemRow\n\t\t\t\t\t\tbold\n\t\t\t\t\t\tlabel=\"Net Position\"\n\t\t\t\t\t\tvalues={[\n\t\t\t\t\t\t\tleftCalculated.totalNetAssets,\n\t\t\t\t\t\t\trightCalculated.totalNetAssets,\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t</TableBody>\n\t\t\t</Table>\n\t\t</TableContainer>\n\t)\n}\n","import React, { ReactElement } from \"react\"\nimport { Typography } from \"@material-ui/core\"\nimport { Link } from \"react-router-dom\"\nimport { PrivateRoutes, routeVarReplacement } from \"../../util/routes/routes\"\n\n/**\n * Message to display when there are not enough canvases\n *\n * @export\n * @returns {ReactElement}\n */\nexport default function NotEnoughCanvases(): ReactElement {\n\treturn (\n\t\t<>\n\t\t\t<Typography variant=\"h6\">\n\t\t\t\tYou don&apos;t have enough canvases created\n\t\t\t</Typography>\n\t\t\t<Typography>\n\t\t\t\tTo continue, you&apos;ll need at least 2 canvases created. <br /> Check\n\t\t\t\tthat you have the correct{\" \"}\n\t\t\t\t<Link to={PrivateRoutes.ClientList}>client selected</Link> or{\" \"}\n\t\t\t\t<Link to={routeVarReplacement(PrivateRoutes.CFC, [[\":id?\", \"\"]])}>\n\t\t\t\t\tstart a new canvas\n\t\t\t\t</Link>\n\t\t\t\t.\n\t\t\t</Typography>\n\t\t</>\n\t)\n}\n","import React, {\n\tReactElement,\n\tuseCallback,\n\tuseEffect,\n\tuseState,\n\tuseContext,\n} from \"react\"\nimport { Divider } from \"@material-ui/core\"\nimport { useMachine } from \"@xstate/react\"\nimport { isAfter } from \"date-fns\"\nimport CompareSelector from \"./CompareSelector\"\nimport Spacer from \"../Spacer\"\nimport CompareTable from \"./CompareTable\"\nimport fetchMachine from \"../Forms/CFC/__config/machine\"\nimport NoCanvases from \"../CFC/NoCanvases\"\nimport Loading from \"../Loading\"\nimport useCurrentClient from \"../../state/client/useCurrentClient\"\nimport { CFCStruct, CFCId } from \"../../data/_config/shape\"\nimport { getCanvasData, changeSelected } from \"./__config/utilities\"\nimport NotEnoughCanvases from \"./NotEnoughCanvases\"\nimport { CanvasTuple } from \"./__config/shape\"\nimport CFCContext from \"../../state/CFC/context\"\nimport { calculateInitial } from \"../Forms/CFC\"\nimport { CFCActionTypes } from \"../../state/CFC/shape\"\nimport {\n\tcalcQuestionFour,\n\tcalcQuestionOne,\n\tcalcQuestionTwo,\n\tcalcQuestionThree,\n} from \"../CFC/__config/utilities\"\n\n/**\n * Component wrapper to display all the data in the compare table\n *\n * @export\n * @returns {ReactElement}\n */\nexport default function CompareCanvases(): ReactElement {\n\t// #region State Management\n\tconst { dispatch } = useContext(CFCContext)\n\tconst [stateMachine, changeState] = useMachine(fetchMachine)\n\tconst [currentClient, clientSynced] = useCurrentClient()\n\tconst [canvases, setCanvases] = useState<CFCStruct[]>([])\n\tconst [selectedCanvases, setSelectedCanvases] = useState<CanvasTuple>()\n\n\tuseEffect(() => {\n\t\tconst left = selectedCanvases?.[0]\n\t\tconst right = selectedCanvases?.[1]\n\n\t\tif (left && right) {\n\t\t\tconst leftCalc = calculateInitial(left)\n\t\t\tconst rightCalc = calculateInitial(right)\n\n\t\t\tdispatch({\n\t\t\t\ttype: CFCActionTypes.ChangeQuestionValues,\n\t\t\t\tpayload: {\n\t\t\t\t\tone: calcQuestionOne(leftCalc),\n\t\t\t\t\ttwo: calcQuestionTwo(\n\t\t\t\t\t\tleftCalc,\n\t\t\t\t\t\tleft.paygWithholding,\n\t\t\t\t\t\tleft.superAmount,\n\t\t\t\t\t\tleft.incomeTax\n\t\t\t\t\t),\n\t\t\t\t\tthree: calcQuestionThree(\n\t\t\t\t\t\tleft.openingBalance,\n\t\t\t\t\t\tleftCalc,\n\t\t\t\t\t\tleft.incomeTax\n\t\t\t\t\t),\n\t\t\t\t\tfour: calcQuestionFour(leftCalc, rightCalc),\n\t\t\t\t},\n\t\t\t})\n\n\t\t\tdispatch({\n\t\t\t\ttype: CFCActionTypes.ChangeCompare,\n\t\t\t\tpayload: {\n\t\t\t\t\tleft,\n\t\t\t\t\tright,\n\t\t\t\t},\n\t\t\t})\n\t\t}\n\t}, [selectedCanvases, dispatch])\n\t// #endregion\n\n\t// #region Data Fetching\n\tconst fetchCanvasData = useCallback(async () => {\n\t\tconst data = await getCanvasData(currentClient?.id)\n\t\tsetCanvases(data)\n\t\tif (data.length >= 2) {\n\t\t\tconst item1 = data[0]\n\t\t\tconst item2 = data[1]\n\t\t\tsetSelectedCanvases(\n\t\t\t\tisAfter(item1.canvasStartDate, item2.canvasStartDate)\n\t\t\t\t\t? [item1, item2]\n\t\t\t\t\t: [item2, item1]\n\t\t\t)\n\t\t}\n\t\tchangeState(data.length < 2 ? \"REJECT\" : \"RESOLVE\")\n\t}, [currentClient, changeState])\n\n\tuseEffect(() => {\n\t\tif (clientSynced) {\n\t\t\tfetchCanvasData()\n\t\t}\n\t}, [clientSynced, fetchCanvasData])\n\t// #endregion\n\n\t// #region Changing Selected Canvas\n\t/**\n\t * Change the currently selected canvas to compare\n\t *\n\t * @param {number} idx\n\t * @param {CFCId} id\n\t */\n\tfunction changeSelectedCanvas(idx: number, id: CFCId): void {\n\t\tif (!selectedCanvases) return\n\n\t\tconst newSelected = changeSelected(canvases, selectedCanvases, idx, id)\n\t\tsetSelectedCanvases(newSelected)\n\t}\n\t// #endregion\n\n\t// #region Component rendering\n\t/**\n\t * Renders the component based on the current state of the state machine\n\t *\n\t * @returns {ReactElement}\n\t */\n\tfunction renderForStateMachine(): ReactElement {\n\t\tswitch (stateMachine.value) {\n\t\t\tcase \"failure\":\n\t\t\t\treturn canvases.length === 1 ? <NotEnoughCanvases /> : <NoCanvases />\n\t\t\tcase \"success\":\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<CompareSelector\n\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\t\t\t\tselectedCanvases={selectedCanvases!}\n\t\t\t\t\t\t\tallCanvases={canvases}\n\t\t\t\t\t\t\tchangeSelected={changeSelectedCanvas}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Spacer />\n\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t<Spacer />\n\t\t\t\t\t\t{/* eslint-disable-next-line @typescript-eslint/no-non-null-assertion */}\n\t\t\t\t\t\t<CompareTable selectedCanvases={selectedCanvases!} />\n\t\t\t\t\t</>\n\t\t\t\t)\n\t\t\tcase \"loading\":\n\t\t\tdefault:\n\t\t\t\treturn <Loading />\n\t\t}\n\t}\n\n\treturn renderForStateMachine()\n\t// #endregion\n}\n","import React, { ReactElement, useState, useCallback, useEffect } from \"react\"\nimport CompareArrowsIcon from \"@material-ui/icons/CompareArrows\"\nimport { useHistory, useParams } from \"react-router-dom\"\nimport { ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\"\nimport { PrivateRoutes } from \"../../util/routes/routes\"\nimport useCurrentClient from \"../../state/client/useCurrentClient\"\nimport CFCUseCase from \"../../data/CFC/CFCLogic\"\n\nexport default function ControlCompareLink(): ReactElement {\n\tconst history = useHistory()\n\tconst [count, setCount] = useState(0)\n\tconst { id } = useParams()\n\tconst [currentClient, clientSynced] = useCurrentClient()\n\tconst getCount = useCallback(async () => {\n\t\tif (currentClient?.id) {\n\t\t\tconst c = await CFCUseCase.countClientRecords(currentClient.id)\n\t\t\tsetCount(c)\n\t\t}\n\t}, [currentClient, setCount])\n\n\tuseEffect(() => {\n\t\tif (clientSynced) {\n\t\t\tgetCount()\n\t\t}\n\t}, [clientSynced, getCount, id])\n\n\tconst goTo = (route: PrivateRoutes) => (): void => {\n\t\t// eslint-disable-next-line\n\t\thistory.push(route)\n\t}\n\n\tif (count < 2) {\n\t\treturn <></>\n\t}\n\n\treturn (\n\t\t<ListItem button onClick={goTo(PrivateRoutes.CFCCompare)}>\n\t\t\t<ListItemIcon>\n\t\t\t\t<CompareArrowsIcon />\n\t\t\t</ListItemIcon>\n\t\t\t<ListItemText>Compare Canvases</ListItemText>\n\t\t</ListItem>\n\t)\n}\n"],"sourceRoot":""}