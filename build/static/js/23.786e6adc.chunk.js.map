{"version":3,"sources":["components/SnackbarMsg/SnackbarMsg.tsx","components/IfElseLoading/IfElseLoading.tsx","util/array/arrayFillWith.ts","components/ActionChecklist/ActionContainer/_config/data.ts","components/SectionTitle/_config/styles.ts","components/SectionTitle/SectionTitle.tsx","components/Forms/CFC/initialValues.ts","components/Forms/CFC/calculateInitial.ts","components/PDF/PDFLib.ts","data/healthChecks/HealthCheckLogic.ts","state/CFC/createCashFlow.tsx","components/PDF/CashFlowCanvasPDF.ts","components/PDF/HealthCheckPDF.ts","components/PDF/ActionChecklistPDF.ts","components/SessionFiles/CheckboxListItem.tsx","components/SessionFiles/FileListing.tsx","components/SessionFiles/__config/constants.ts","components/SessionFiles/__config/styles.ts","pages/session-files.tsx","components/SessionFiles/__config/utilities.ts"],"names":["SnackbarMsg","open","msg","onClose","severity","autoHideDuration","anchorOrigin","vertical","horizontal","variant","action","size","aria-label","color","fontSize","IfElseLoading","children","if","Loading","arrayFillWith","len","fill","Array","actionTitleMapping","cashInActions","cashOutActions","planningBusiness","recordKeeping","funding","managing","planningCommitments","tracking","transition","useSTStyles","makeStyles","theme","title","fontWeight","marginBottom","spacing","breakpoints","down","typography","h5","SectionTitle","className","props","styles","Typography","initialValues","canvasTitle","canvasType","canvasTimeFrame","canvasStartDate","Date","canvasEndDate","calculatedEndDate","openingBalance","paygWithholding","superAmount","incomeTax","cashToOwner","stock","creditors","debtors","assets","loans","cashInItems","createCashFlowItem","cashOutItems","calculateInitial","values","gstOnSales","calcCashFlowGST","closingBalance","calcClosingBalance","gstOnPurchases","totalNetAssets","calcTotalNetAssets","cashSurplus","calcCashSurplus","availableToSpend","calcAvailableToSpend","incomeTaxPercentage","calcIncomeTaxPer","addPadding","content","margin","columns","pageDefaultSettings","pageSize","pageMargins","footer","text","format","alignment","frameContent","inner","style","table","widths","body","pageHeading","layout","pagePadding","basicTable","items","HealthCheckUseCase","HealthCheckDB","healthChecks","id","clientId","this","database","transaction","name","where","first","equals","toArray","ILogicLayer","uuidv4","description","amount","gstApplicable","pdfMake","vfs","pdfFonts","formatDollars","value","toString","openingBalanceSection","cashInSection","cashInTotal","bold","map","line","cashOutSection","cashOutTotal","gstOnPurchasesSection","cashSurplusSection","incomeSection","availableToSpendSection","closingCashBalanceSection","yourNetAssetPositionSection","a","calcCashFlowTotal","cashInGST","calcTotalCashOut","cashOutGST","calculated","docDefinition","canvasDisplayTitle","upperFirst","pageHeader","fillColor","green","rightAlign","yellowBlock","defaultStyle","createPdf","questionElementTop","question","answer","answers","colSpan","purple","tableHeading","grey","positive","answerTheming","negative","neutral","itemsSection","length","reviewBy","checklistCollection","notes","Object","keys","idx","arr","filter","i","actionContainer","note","push","lightBlue","heading","subHeading","noResult","italics","React","memo","label","checked","onClick","ListItem","button","ListItemIcon","Checkbox","edge","tabIndex","disableRipple","inputProps","ListItemText","setState","state","data","loading","handleChange","prev","copy","ExpandableNav","List","component","disablePadding","item","key","staticTitles","changeLevers","actionChecklist","discoverTopics","path","useStyles","dropdownWrapper","marginTop","useSessionStyles","createStyles","backdrop","zIndex","drawer","SessionFiles","classes","cls","useState","cfc","selectedFiles","setSelectedFiles","setHealthChecks","setCfc","HCListing","setHCListing","CFCListing","setCFCListing","assetBaseUrl","process","REACT_APP_ASSETS_URL","fetching","setFetching","exporting","setExporting","useCurrentClient","currentClient","synced","snackbar","setSnackbar","showSnackbar","fetchData","useCallback","findByClient","hcs","CFCUseCase","cfcs","reduce","acc","cur","concat","createdAt","useEffect","changeSingleDownload","getStaticPdf","url","fetchPolyfill","method","then","response","arrayBuffer","buffer","fileName","makeStaticPdf","file","encodeURI","pdf","pdfMakeBlobPromise","filename","Promise","resolve","getBlob","b","blob","generateZip","zip","JSZip","CHPDF","ActionChecklistUseCase","checklists","ActionNotesUseCase","ActionChecklistPDF","ACPDF","DTPromises","val","v","HCNames","HCPromises","pdfData","questions","forEach","q","options","replace","HealthCheckPDF","CFCNames","CFCPromises","CashFlowCanvasPDF","all","res","names","blobPromises","res1","doc","hasProperty","generateAsync","type","saveAs","catch","Nav","SingleDownloads","Grid","container","xs","md","Box","Backdrop","CircularProgress","event","reason"],"mappings":"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","file":"static/js/23.786e6adc.chunk.js","sourcesContent":["import React, { ReactElement } from \"react\"\nimport Alert, { AlertProps } from \"@material-ui/lab/Alert\"\nimport { Snackbar, IconButton } from \"@material-ui/core\"\nimport CloseIcon from \"@material-ui/icons/Close\"\n\n// #region Interface Definitions\n/**\n * Data required for the snackbar\n * use this interface when defining the state\n *\n * @export\n * @interface SnackbarMsgData\n */\nexport interface SnackbarMsgData {\n\topen: boolean\n\tmsg: string\n\tseverity?: AlertProps[\"severity\"]\n}\n\n/**\n * Props required to be passed to the component\n *\n * @export\n * @interface SnackbarMsgProps\n * @extends {SnackbarMsgData}\n */\nexport interface SnackbarMsgProps extends SnackbarMsgData {\n\tonClose: (\n\t\tevent: React.SyntheticEvent | React.MouseEvent,\n\t\treason?: string\n\t) => void\n}\n// #endregion\n\n/**\n * Snackbar abstraction component, use this for a consistent\n * way to show messages to the user\n *\n * The component who uses this component will need to handle the\n * state of this component and pass down the props.\n *\n * See the README\n *\n * @export\n * @param {SnackbarMsgProps} {\n * \topen,\n * \tmsg,\n * \tonClose,\n * \tseverity = \"info\",\n * }\n * @returns {ReactElement}\n */\nexport default function SnackbarMsg({\n\topen,\n\tmsg,\n\tonClose,\n\tseverity = \"info\",\n}: SnackbarMsgProps): ReactElement {\n\treturn (\n\t\t<Snackbar\n\t\t\topen={open}\n\t\t\tautoHideDuration={2000}\n\t\t\tanchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n\t\t\tonClose={onClose}\n\t\t>\n\t\t\t<Alert\n\t\t\t\tseverity={severity}\n\t\t\t\tvariant=\"filled\"\n\t\t\t\taction={\n\t\t\t\t\t<IconButton size=\"small\" aria-label=\"close\" color=\"inherit\">\n\t\t\t\t\t\t<CloseIcon fontSize=\"small\" />\n\t\t\t\t\t</IconButton>\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t{msg}\n\t\t\t</Alert>\n\t\t</Snackbar>\n\t)\n}\n","import React, { ReactElement, ReactNode } from \"react\"\nimport Loading from \"../Loading\"\n\n/**\n * Prop defintion for the `IfElseLoading` component\n *\n * @interface IfElseLoadingProps\n */\ninterface IfElseLoadingProps {\n\tchildren: ReactNode\n\tif: boolean\n}\n\n/**\n * A component to render either the default Loading component\n * or its children based on a conditional\n *\n * @export\n * @param {IfElseLoadingProps} {\n * \tchildren,\n * \tif: check,\n * }\n * @returns {ReactElement}\n */\nexport default function IfElseLoading({\n\tchildren,\n\tif: check,\n}: IfElseLoadingProps): ReactElement {\n\treturn !check ? <Loading /> : <>{children}</>\n}\n","/**\n * Creates and fills an array with some data\n *\n * @export\n * @template T\n * @param {number} len\n * @param {T} fill\n * @returns {T[]}\n */\nexport default function arrayFillWith<T>(len: number, fill: T): T[] {\n\treturn new Array(len).fill(fill)\n}\n","/* eslint-disable import/prefer-default-export */\nimport { PossibleActionItems } from \"../../../../state/action-checklist/shape\"\n\n// Action title mapping object\nexport const actionTitleMapping: Record<PossibleActionItems, string> = {\n\tcashInActions: \"Cash IN actions\",\n\tcashOutActions: \"Cash OUT actions\",\n\tplanningBusiness: \"Planning your business actions\",\n\trecordKeeping: \"Record keeping actions\",\n\tfunding: \"Funding your business actions\",\n\tmanaging: \"Managing your cash flow actions\",\n\tplanningCommitments: \"Planning your regular financial commitments actions\",\n\ttracking: \"Tracking your performance actions\",\n\ttransition: \"Selling, closing and succession planning\",\n}\n","import { makeStyles } from \"@material-ui/core\"\n\n// Section title styles\nconst useSTStyles = makeStyles((theme) => ({\n\ttitle: {\n\t\tfontWeight: 500,\n\t\tmarginBottom: theme.spacing(2),\n\t\t[theme.breakpoints.down(\"sm\")]: {\n\t\t\tfontSize: theme.typography.h5.fontSize,\n\t\t},\n\t},\n}))\n\nexport default useSTStyles\n","import React, { ReactElement } from \"react\"\nimport { Typography } from \"@material-ui/core\"\nimport { SectionTitleProps } from \"./_config/shape\"\nimport useSTStyles from \"./_config/styles\"\n\n/**\n * Abstraction for the Typography for a consistent heading for sections\n *\n * @param {SectionTitleProps} props Mimics the props for `<Typography>`\n * @returns ReactElement\n */\nconst SectionTitle = ({\n\tchildren,\n\tclassName,\n\t...props\n}: SectionTitleProps): ReactElement => {\n\tconst styles = useSTStyles()\n\treturn (\n\t\t<Typography\n\t\t\tvariant=\"h4\"\n\t\t\tcolor=\"textPrimary\"\n\t\t\tclassName={`${styles.title} ${className}`}\n\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t{...props}\n\t\t>\n\t\t\t{children}\n\t\t</Typography>\n\t)\n}\n\nexport default SectionTitle\n","import { BaseCFCStruct } from \"../../../data/_config/shape\"\nimport createCashFlowItem from \"../../../state/CFC/createCashFlow\"\nimport { calculatedEndDate } from \"../../../util/dates\"\n\nconst initialValues: BaseCFCStruct = {\n\tcanvasTitle: \"\",\n\tcanvasType: \"review\",\n\tcanvasTimeFrame: \"quaterly\",\n\tcanvasStartDate: new Date(),\n\tcanvasEndDate: calculatedEndDate(new Date(), \"quaterly\"),\n\topeningBalance: 0,\n\tpaygWithholding: 0,\n\tsuperAmount: 0,\n\tincomeTax: 25,\n\tcashToOwner: 0,\n\tstock: 0,\n\tcreditors: 0,\n\tdebtors: 0,\n\tassets: 0,\n\tloans: 0,\n\tcashInItems: [createCashFlowItem()],\n\tcashOutItems: [createCashFlowItem()],\n}\n\nexport default initialValues\n","import { BaseCFCStruct } from \"../../../data/_config/shape\"\nimport { CalculatedValues } from \"../../../state/CFC/useCalculated\"\nimport {\n\tcalcTotalNetAssets,\n\tcalcAvailableToSpend,\n\tcalcCashSurplus,\n\tcalcCashFlowGST,\n\tcalcClosingBalance,\n\tcalcIncomeTaxPer,\n} from \"../../../state/CFC/accumulators\"\n\n/**\n * Calculates the values for the dynamic values\n *\n * @param {BaseCFCStruct} values\n * @returns {CalculatedValues}\n */\nfunction calculateInitial(values: BaseCFCStruct): CalculatedValues {\n\treturn {\n\t\tgstOnSales: calcCashFlowGST(values.cashInItems),\n\t\tclosingBalance: calcClosingBalance(values),\n\t\tgstOnPurchases: calcCashFlowGST(values.cashOutItems),\n\t\ttotalNetAssets: calcTotalNetAssets(values),\n\t\tcashSurplus: calcCashSurplus(values),\n\t\tavailableToSpend: calcAvailableToSpend(values),\n\t\tincomeTaxPercentage: calcIncomeTaxPer(values),\n\t}\n}\n\nexport default calculateInitial\n","/**\n * Add Padding\n *\n * add white space around some content\n */\n\nimport { format } from \"date-fns\"\n\nexport const addPadding = (content: any, margin = 10) => {\n\treturn {\n\t\tmargin,\n\t\tcolumns: [content],\n\t}\n}\n\n/**\n * Page and margin defaults\n */\n\nexport const pageDefaultSettings = () => {\n\treturn {\n\t\t// watermark: {\n\t\t// \ttext: \"draft\",\n\t\t// \tcolor: \"blue\",\n\t\t// \topacity: 0.3,\n\t\t// \tbold: true,\n\t\t// \titalics: false,\n\t\t// },\n\n\t\tpageSize: \"A4\",\n\t\tpageMargins: [0, 0, 0, 25],\n\t\tfooter: {\n\t\t\tcolumns: [\n\t\t\t\t{\n\t\t\t\t\ttext: `Created on the ${format(new Date(), \"do 'of' MMMM yyyy\")}`,\n\t\t\t\t\talignment: \"center\",\n\t\t\t\t\tfontSize: 12,\n\t\t\t\t\tcolor: \"#333\",\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t}\n}\n\n/**\n * Frame Content\n *\n * Put content in a table with a border\n */\n\nexport const frameContent = (inner: any, style: string[] = []) => {\n\treturn {\n\t\ttable: {\n\t\t\twidths: [\"*\"], // to make it full length\n\t\t\tbody: [[inner]],\n\t\t},\n\t\tstyle,\n\t}\n}\n\n/**\n * Table with Text in it for top of page\n * Requires a pageHeader style\n */\n\nexport const pageHeading = (text: string) => {\n\tconst content = frameContent(addPadding(text), [\"pageHeader\"])\n\n\treturn {\n\t\t...content,\n\t\tlayout: \"noBorders\",\n\t}\n}\n\n/**\n * Add 20 points of padding on a full page\n */\n\nexport const pagePadding = (content: any) => addPadding(content, 20)\n\n/**\n * Basic table of key .... value\n */\n\nexport const basicTable = (items: any, style: string[] = []) => {\n\treturn {\n\t\ttable: {\n\t\t\twidths: [\"75%\", \"*\"],\n\t\t\tbody: items,\n\t\t},\n\t\tstyle,\n\t\tlayout: \"noBorders\",\n\t}\n}\n","import ILogicLayer from \"../_config/logicLayer\"\nimport HealthCheckDB from \"./HealthCheckDatabase\"\nimport {\n\tHealthCheckDataStruct,\n\tBaseHealthCheckStruct,\n\tHealthCheckId,\n\tClientId,\n} from \"../_config/shape\"\n\n/**\n * Logic implementation for the Health check database\n *\n * @class HealthCheckLogic\n * @extends {ILogicLayer<HealthCheckDataStruct, BaseHealthCheckStruct>}\n */\nclass HealthCheckLogic extends ILogicLayer<\n\tHealthCheckDataStruct,\n\tBaseHealthCheckStruct\n> {\n\t/**\n\t * Creates an instance of HealthCheckLogic.\n\t *\n\t * @memberof HealthCheckLogic\n\t */\n\tconstructor() {\n\t\tsuper(HealthCheckDB, HealthCheckDB.healthChecks)\n\t}\n\n\t/**\n\t * Finds a health check by the id and clientId\n\t *\n\t * @param {HealthCheckId} id\n\t * @param {ClientId} clientId\n\t * @returns {Promise<HealthCheckDataStruct>}\n\t * @memberof HealthCheckLogic\n\t */\n\tpublic findByClientId(\n\t\tid: HealthCheckId,\n\t\tclientId: ClientId\n\t): Promise<HealthCheckDataStruct | undefined> {\n\t\treturn this.database.transaction(\"r\", this.table.name, () => {\n\t\t\treturn this.table.where({ id, clientId }).first()\n\t\t})\n\t}\n\n\t/**\n\t * Finds all the health checks for a given client\n\t *\n\t * @param {ClientId} clientId\n\t * @returns {Promise<HealthCheckDataStruct[]>}\n\t * @memberof HealthCheckLogic\n\t */\n\tpublic findClientHealthChecks(\n\t\tclientId: ClientId\n\t): Promise<HealthCheckDataStruct[]> {\n\t\treturn this.database.transaction(\"r\", this.table.name, () => {\n\t\t\treturn this.table.where(\"clientId\").equals(clientId).toArray()\n\t\t})\n\t}\n}\n\n// Creates a instance of the logic class and exports the instance\nconst HealthCheckUseCase = new HealthCheckLogic()\n\nexport default HealthCheckUseCase\n","import { v4 as uuidv4 } from \"uuid\"\nimport { CashFlow } from \"../../data/_config/shape\"\n\nexport default function createCashFlowItem(): CashFlow {\n\treturn {\n\t\tid: uuidv4(),\n\t\tdescription: \"\",\n\t\tamount: 0,\n\t\tgstApplicable: true,\n\t}\n}\n","import pdfMake from \"pdfmake/build/pdfmake\"\nimport pdfFonts from \"pdfmake/build/vfs_fonts\"\nimport { green } from \"@material-ui/core/colors\"\nimport { format } from \"date-fns\"\nimport {\n\tframeContent,\n\tbasicTable,\n\tpageDefaultSettings,\n\tpageHeading,\n\tpagePadding,\n} from \"./PDFLib\"\nimport { BaseCFCStruct, CashFlow } from \"../../data/_config/shape\"\nimport {\n\tcalcCashFlowGST,\n\tcalcCashFlowTotal,\n\tcalcTotalCashOut,\n} from \"../../state/CFC/accumulators\"\nimport { calculateInitial } from \"../Forms/CFC\"\nimport { canvasDisplayTitle } from \"../CFC/__config/utilities\"\nimport upperFirst from \"../../util/strings/upperCaseFirst\"\n\npdfMake.vfs = pdfFonts.pdfMake.vfs\n\nconst formatDollars = (value: number) => `$${value.toString()}`\n\nconst openingBalanceSection = (openingBalance: number): any => {\n\treturn frameContent(\n\t\tbasicTable([\n\t\t\t[\n\t\t\t\t\"Opening Balance\",\n\t\t\t\t{ text: formatDollars(openingBalance), style: [\"rightAlign\"] },\n\t\t\t],\n\t\t])\n\t)\n}\n\nconst cashInSection = (cashInItems: CashFlow[], cashInTotal: number): any => {\n\treturn frameContent([\n\t\t{\n\t\t\ttext: \"Cash IN\",\n\t\t\tbold: true,\n\t\t},\n\t\tbasicTable([\n\t\t\t...cashInItems.map((line) => [\n\t\t\t\tline.description,\n\t\t\t\t{ text: formatDollars(line.amount), style: [\"rightAlign\"] },\n\t\t\t]),\n\t\t\t[\n\t\t\t\t\"Total (Exc GST)\",\n\t\t\t\t{\n\t\t\t\t\ttext: formatDollars(cashInTotal),\n\t\t\t\t\tstyle: [\"rightAlign\"],\n\t\t\t\t},\n\t\t\t],\n\t\t]),\n\t])\n}\n\nconst gstOnSalesSection = (gstOnSales: number): any => {\n\treturn frameContent(\n\t\tbasicTable(\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"GST on Sales\",\n\t\t\t\t\t{ text: formatDollars(gstOnSales), style: [\"rightAlign\"] },\n\t\t\t\t],\n\t\t\t],\n\t\t\t[\"yellowBlock\"]\n\t\t)\n\t)\n}\n\nconst cashOutSection = (\n\tcashOutItems: CashFlow[],\n\tcashOutTotal: number\n): any => {\n\treturn frameContent([\n\t\t{ text: \"Cash OUT\", bold: true },\n\t\tbasicTable([\n\t\t\t...cashOutItems.map((line) => [\n\t\t\t\tline.description,\n\t\t\t\t{ text: formatDollars(line.amount), style: [\"rightAlign\"] },\n\t\t\t]),\n\t\t\t[\n\t\t\t\t\"Total (Exc GST)\",\n\t\t\t\t{\n\t\t\t\t\ttext: formatDollars(cashOutTotal),\n\t\t\t\t\tstyle: [\"rightAlign\"],\n\t\t\t\t},\n\t\t\t],\n\t\t]),\n\t])\n}\n\nconst gstOnPurchasesSection = (\n\tgstOnPurchases: number,\n\tpaygWithholding: number,\n\tsuperAmount: number\n): any => {\n\treturn frameContent(\n\t\tbasicTable(\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"GST on Purchases\",\n\t\t\t\t\t{ text: formatDollars(gstOnPurchases), style: [\"rightAlign\"] },\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"PAYG Withholding\",\n\t\t\t\t\t{ text: formatDollars(paygWithholding), style: [\"rightAlign\"] },\n\t\t\t\t],\n\t\t\t\t[\"Super\", { text: formatDollars(superAmount), style: [\"rightAlign\"] }],\n\t\t\t],\n\t\t\t[\"yellowBlock\"]\n\t\t)\n\t)\n}\n\nconst cashSurplusSection = (cashSurplus: number): any => {\n\treturn frameContent(\n\t\tbasicTable([\n\t\t\t[\n\t\t\t\t\"Cash Surplus\",\n\t\t\t\t{ text: formatDollars(cashSurplus), style: [\"rightAlign\"] },\n\t\t\t],\n\t\t])\n\t)\n}\n\nconst incomeSection = (incomeTax: number): any => {\n\treturn frameContent(\n\t\tbasicTable(\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"Income/Company Tax\",\n\t\t\t\t\t// TODO: Needs to use the new calculations in feature/122 branch\n\t\t\t\t\t{ text: formatDollars(incomeTax), style: [\"rightAlign\"] },\n\t\t\t\t],\n\t\t\t],\n\t\t\t[\"yellowBlock\"]\n\t\t)\n\t)\n}\n\nconst availableToSpendSection = (availableToSpend: number): any => {\n\treturn frameContent(\n\t\tbasicTable([\n\t\t\t[\n\t\t\t\t\"Available to spend\",\n\t\t\t\t{ text: formatDollars(availableToSpend), style: [\"rightAlign\"] },\n\t\t\t],\n\t\t])\n\t)\n}\n\nconst closingCashBalanceSection = (\n\tcashToOwner: number,\n\tclosingBalance: number\n): any => {\n\treturn frameContent([\n\t\t{ text: \"Your Closing Cash Balance\", bold: true },\n\t\tbasicTable([\n\t\t\t[\n\t\t\t\t\"Cash to owner\",\n\t\t\t\t{ text: formatDollars(cashToOwner), style: [\"rightAlign\"] },\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Closing balance\",\n\t\t\t\t{ text: formatDollars(closingBalance), style: [\"rightAlign\"] },\n\t\t\t],\n\t\t]),\n\t])\n}\n\nconst yourNetAssetPositionSection = (\n\tstock: number,\n\tcreditors: number,\n\tdebtors: number,\n\tassets: number,\n\tloans: number,\n\ttotalNetAssets: number\n): any => {\n\treturn frameContent([\n\t\t{ text: \"Your net asset position\", bold: true },\n\t\tbasicTable([\n\t\t\t[\"Stocks\", { text: formatDollars(stock), style: [\"rightAlign\"] }],\n\t\t\t[\"Creditors\", { text: formatDollars(creditors), style: [\"rightAlign\"] }],\n\t\t\t[\"Debtors\", { text: formatDollars(debtors), style: [\"rightAlign\"] }],\n\t\t\t[\"Assets\", { text: formatDollars(assets), style: [\"rightAlign\"] }],\n\t\t\t[\"Loans\", { text: formatDollars(loans), style: [\"rightAlign\"] }],\n\t\t\t[\n\t\t\t\t{ text: \"Total net assets\", bold: true },\n\t\t\t\t{ text: formatDollars(totalNetAssets), style: [\"rightAlign\"] },\n\t\t\t],\n\t\t]),\n\t])\n}\n\nexport default async (title: string, values: BaseCFCStruct) => {\n\tconst {\n\t\topeningBalance,\n\t\tcashInItems,\n\t\tcashOutItems,\n\t\tpaygWithholding,\n\t\tsuperAmount,\n\t\tincomeTax,\n\t\tcashToOwner,\n\t\tstock,\n\t\tcreditors,\n\t\tdebtors,\n\t\tassets,\n\t\tloans,\n\t} = values\n\n\tconst cashInTotal = calcCashFlowTotal(cashInItems)\n\tconst cashInGST = calcCashFlowGST(cashInItems)\n\tconst cashOutTotal = calcTotalCashOut(values)\n\tconst cashOutGST = calcCashFlowGST(cashOutItems)\n\n\tconst calculated = calculateInitial(values)\n\tconst {\n\t\tcashSurplus,\n\t\tavailableToSpend,\n\t\tclosingBalance,\n\t\ttotalNetAssets,\n\t} = calculated\n\n\tconst docDefinition: any = {\n\t\t...pageDefaultSettings(),\n\n\t\tcontent: [\n\t\t\tpageHeading(`${title} - CANVAS - ${canvasDisplayTitle(values)}`),\n\t\t\tpagePadding([\n\t\t\t\tframeContent({\n\t\t\t\t\ttable: {\n\t\t\t\t\t\twidths: [\"25%\", \"25%\", \"25%\", \"25%\"],\n\t\t\t\t\t\tbody: [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t{ text: \"Canvas Type\", bold: true },\n\t\t\t\t\t\t\t\t\tupperFirst(values.canvasType),\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t{ text: \"Time-frame\", bold: true },\n\t\t\t\t\t\t\t\t\tupperFirst(values.canvasTimeFrame),\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t{ text: \"Start date\", bold: true },\n\t\t\t\t\t\t\t\t\t`${format(values.canvasStartDate, \"dd/MM/yyyy\")}`,\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t{ text: \"End date\", bold: true },\n\t\t\t\t\t\t\t\t\t`${format(values.canvasEndDate, \"dd/MM/yyyy\")}`,\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\tlayout: \"noBorders\",\n\t\t\t\t}),\n\t\t\t\t\" \",\n\t\t\t\topeningBalanceSection(openingBalance),\n\n\t\t\t\t{\n\t\t\t\t\ttable: {\n\t\t\t\t\t\twidths: [\"60%\", \"*\"],\n\t\t\t\t\t\tbody: [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tcashInSection(cashInItems, cashInTotal),\n\t\t\t\t\t\t\t\tgstOnSalesSection(cashInGST),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tcashOutSection(cashOutItems, cashOutTotal),\n\t\t\t\t\t\t\t\tgstOnPurchasesSection(cashOutGST, paygWithholding, superAmount),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[cashSurplusSection(cashSurplus), incomeSection(incomeTax)],\n\t\t\t\t\t\t\t[availableToSpendSection(availableToSpend), {}],\n\t\t\t\t\t\t\t[closingCashBalanceSection(cashToOwner, closingBalance), {}],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tyourNetAssetPositionSection(\n\t\t\t\t\t\t\t\t\tstock,\n\t\t\t\t\t\t\t\t\tcreditors,\n\t\t\t\t\t\t\t\t\tdebtors,\n\t\t\t\t\t\t\t\t\tassets,\n\t\t\t\t\t\t\t\t\tloans,\n\t\t\t\t\t\t\t\t\ttotalNetAssets\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\tlayout: \"noBorders\",\n\t\t\t\t},\n\t\t\t]),\n\t\t],\n\n\t\tstyles: {\n\t\t\tpageHeader: {\n\t\t\t\tfontSize: 20,\n\t\t\t\tbold: true,\n\t\t\t\tfillColor: green[\"800\"],\n\t\t\t\tcolor: \"white\",\n\t\t\t\talignment: \"center\",\n\t\t\t},\n\t\t\trightAlign: {\n\t\t\t\t// fillColor: \"#CCCCCC\",\n\t\t\t\talignment: \"right\",\n\t\t\t},\n\t\t\tyellowBlock: {\n\t\t\t\tfillColor: \"yellow\",\n\t\t\t},\n\t\t},\n\n\t\tdefaultStyle: {\n\t\t\tfontSize: 15,\n\t\t\tbold: false,\n\t\t},\n\t}\n\treturn pdfMake.createPdf(docDefinition)\n}\n","import pdfMake from \"pdfmake/build/pdfmake\"\nimport pdfFonts from \"pdfmake/build/vfs_fonts\"\nimport { purple, grey } from \"@material-ui/core/colors\"\nimport {\n\tpageDefaultSettings,\n\tpageHeading,\n\tpagePadding,\n\taddPadding,\n} from \"./PDFLib\"\nimport { answerTheming } from \"../HealthCheck/_config/data\"\n\npdfMake.vfs = pdfFonts.pdfMake.vfs\n\nexport interface HealthCheckQuestion {\n\tquestion: string\n\tanswer: string\n\ttext: string\n}\n\nexport interface HealthCheckQuestionSet {\n\t[key: number]: HealthCheckQuestion // 0..9\n}\n\nconst questionElementTop = ({\n\tquestion,\n\tanswer,\n\ttext,\n}: HealthCheckQuestion) => {\n\treturn addPadding([\n\t\t{ text: question, style: \"question\" },\n\t\t\" \",\n\t\t{ text, style: answer },\n\t])\n}\n\nexport interface HealthCheckParams {\n\ttitle: string\n\tanswers: {\n\t\t[idx: string]: string\n\t}\n}\n\nexport default async (title: string, answers: HealthCheckQuestionSet) => {\n\tconst docDefinition: any = {\n\t\t...pageDefaultSettings(),\n\n\t\tcontent: [\n\t\t\tpageHeading(`${title} - Health Check`),\n\t\t\tpagePadding([\n\t\t\t\t{\n\t\t\t\t\tstyle: \"tableCell\",\n\t\t\t\t\ttable: {\n\t\t\t\t\t\twidths: [\"*\", \"*\"],\n\t\t\t\t\t\tbody: [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttext: \"Four Key Questions\",\n\t\t\t\t\t\t\t\t\tstyle: \"tableHeading\",\n\t\t\t\t\t\t\t\t\tcolSpan: 2,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[questionElementTop(answers[0]), questionElementTop(answers[1])],\n\t\t\t\t\t\t\t[questionElementTop(answers[2]), questionElementTop(answers[3])],\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t},\n\n\t\t\t\t\" \",\n\n\t\t\t\t{\n\t\t\t\t\tstyle: \"tableCell\",\n\t\t\t\t\ttable: {\n\t\t\t\t\t\twidths: [\"*\", \"*\"],\n\t\t\t\t\t\tbody: [\n\t\t\t\t\t\t\t[questionElementTop(answers[4]), questionElementTop(answers[5])],\n\n\t\t\t\t\t\t\t[questionElementTop(answers[6]), questionElementTop(answers[7])],\n\n\t\t\t\t\t\t\t[questionElementTop(answers[8]), questionElementTop(answers[9])],\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t]),\n\t\t],\n\n\t\tstyles: {\n\t\t\tpageHeader: {\n\t\t\t\tfontSize: 20,\n\t\t\t\tbold: true,\n\t\t\t\tfillColor: purple[\"500\"],\n\t\t\t\tcolor: \"white\",\n\t\t\t\talignment: \"center\",\n\t\t\t},\n\t\t\ttableHeading: {\n\t\t\t\tfillColor: grey[\"200\"],\n\t\t\t\talignment: \"center\",\n\t\t\t},\n\t\t\tquestion: {},\n\t\t\tpositive: {\n\t\t\t\tfontSize: 16,\n\t\t\t\tcolor: answerTheming[0].color,\n\t\t\t\tbold: true,\n\t\t\t},\n\t\t\tnegative: {\n\t\t\t\tfontSize: 16,\n\t\t\t\tcolor: answerTheming[1].color,\n\t\t\t\tbold: true,\n\t\t\t},\n\t\t\tneutral: {\n\t\t\t\tfontSize: 16,\n\t\t\t\tcolor: answerTheming[2].color,\n\t\t\t\tbold: true,\n\t\t\t},\n\t\t},\n\n\t\tdefaultStyle: {\n\t\t\tfontSize: 15,\n\t\t\tbold: false,\n\t\t\tcolor: \"#000\",\n\t\t},\n\t}\n\treturn pdfMake.createPdf(docDefinition)\n}\n","/* eslint-disable */\nimport pdfMake, { TCreatedPdf } from \"pdfmake/build/pdfmake\"\nimport pdfFonts from \"pdfmake/build/vfs_fonts\"\nimport { format } from \"date-fns\"\nimport { lightBlue } from \"@material-ui/core/colors\"\nimport {\n\tpageHeading,\n\tpagePadding,\n\tpageDefaultSettings,\n\tbasicTable,\n} from \"./PDFLib\"\nimport {\n\tActionChecklistStruct,\n\tActionChecklistNotesStruct,\n} from \"../../data/_config/shape\"\nimport { actionTitleMapping } from \"../ActionChecklist/ActionContainer/_config/data\"\nimport { PossibleActionItems } from \"../../state/action-checklist/shape\"\n\npdfMake.vfs = pdfFonts.pdfMake.vfs\n\nconst itemsSection = (items: ActionChecklistStruct[]) => {\n\tif (items.length === 0) {\n\t\treturn {\n\t\t\ttext: \"No action items\",\n\t\t\tstyle: \"noResult\",\n\t\t}\n\t}\n\n\treturn basicTable(\n\t\titems.map(({ description, reviewBy }) => [\n\t\t\t{\n\t\t\t\ttext: description || \"No description provided\",\n\t\t\t\tstyle: description === \"\" ? \"noResult\" : \"\",\n\t\t\t},\n\t\t\tformat(reviewBy, \"dd/MM/yyyy\"),\n\t\t])\n\t)\n}\n\nexport default async (\n\ttitle: string,\n\tchecklistCollection: ActionChecklistStruct[],\n\tnotes: ActionChecklistNotesStruct[]\n): Promise<TCreatedPdf> => {\n\tconst docDefinition: any = {\n\t\t...pageDefaultSettings(),\n\n\t\tcontent: [\n\t\t\tpageHeading(`${title} - Action Checklist`),\n\t\t\tpagePadding([\n\t\t\t\t...(Object.keys(actionTitleMapping) as PossibleActionItems[]).map(\n\t\t\t\t\t(value, idx) => {\n\t\t\t\t\t\tconst arr = []\n\t\t\t\t\t\tconst items = checklistCollection.filter(\n\t\t\t\t\t\t\t(i) => i.actionContainer === value\n\t\t\t\t\t\t)\n\t\t\t\t\t\tconst note = notes.filter((i) => i.actionContainer === value)\n\t\t\t\t\t\tif (items.length === 0) return \"\"\n\n\t\t\t\t\t\tif (idx !== 0) arr.push(\" \")\n\t\t\t\t\t\tarr.push({ text: actionTitleMapping[value], style: \"heading\" })\n\t\t\t\t\t\tarr.push(itemsSection(items))\n\t\t\t\t\t\tif (note.length > 0 && note[0].notes !== \"\") {\n\t\t\t\t\t\t\tarr.push(\" \")\n\t\t\t\t\t\t\tarr.push({ text: \"Notes\", style: \"subHeading\" })\n\t\t\t\t\t\t\tarr.push(note[0].notes)\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn arr\n\t\t\t\t\t}\n\t\t\t\t),\n\t\t\t]),\n\t\t],\n\n\t\tstyles: {\n\t\t\tpageHeader: {\n\t\t\t\tfontSize: 20,\n\t\t\t\tbold: true,\n\t\t\t\tfillColor: lightBlue[\"800\"],\n\t\t\t\tcolor: \"white\",\n\t\t\t\talignment: \"center\",\n\t\t\t},\n\t\t\theading: {\n\t\t\t\tfontSize: 16,\n\t\t\t\tbold: true,\n\t\t\t},\n\t\t\tsubHeading: {\n\t\t\t\tfontSize: 14,\n\t\t\t\tbold: true,\n\t\t\t},\n\t\t\trightAlign: {\n\t\t\t\talignment: \"right\",\n\t\t\t},\n\t\t\tnoResult: {\n\t\t\t\titalics: true,\n\t\t\t\tcolor: \"#333\",\n\t\t\t},\n\t\t},\n\n\t\tdefaultStyle: {\n\t\t\tfontSize: 15,\n\t\t\tbold: false,\n\t\t},\n\t}\n\treturn pdfMake.createPdf(docDefinition)\n}\n","import React, { ReactElement } from \"react\"\nimport {\n\tListItem,\n\tListItemIcon,\n\tCheckbox,\n\tListItemText,\n} from \"@material-ui/core\"\nimport { CheckboxListItemProps } from \"./__config/shape\"\n\nexport default React.memo(function CheckboxListItem({\n\tlabel,\n\tchecked,\n\tonClick,\n}: CheckboxListItemProps): ReactElement {\n\treturn (\n\t\t<ListItem button onClick={onClick}>\n\t\t\t<ListItemIcon>\n\t\t\t\t<Checkbox\n\t\t\t\t\tedge=\"start\"\n\t\t\t\t\tchecked={checked}\n\t\t\t\t\ttabIndex={-1}\n\t\t\t\t\tdisableRipple\n\t\t\t\t\tinputProps={{ \"aria-label\": label }}\n\t\t\t\t/>\n\t\t\t</ListItemIcon>\n\t\t\t<ListItemText>{label}</ListItemText>\n\t\t</ListItem>\n\t)\n})\n","import React, { ReactElement } from \"react\"\nimport { List, ListItem, ListItemText } from \"@material-ui/core\"\nimport ExpandableNav from \"../ExpandableNav\"\nimport IfElseLoading from \"../IfElseLoading\"\nimport { FileListingProps, FileListingStruct } from \"./__config/shape\"\nimport CheckboxListItem from \"./CheckboxListItem\"\n\nexport default React.memo(function FileListing({\n\ttitle,\n\tsetState,\n\tstate,\n\tdata,\n\tid,\n\tloading = false,\n}: FileListingProps): ReactElement {\n\tconst handleChange = (idx: number) => (): void => {\n\t\tsetState((prev) => {\n\t\t\tconst copy = [...prev[id]]\n\t\t\t// eslint-disable-next-line\n\t\t\tcopy[idx] = !copy[idx]\n\n\t\t\treturn {\n\t\t\t\t...prev,\n\t\t\t\t[id]: copy,\n\t\t\t}\n\t\t})\n\t}\n\n\tfunction mapList(item: FileListingStruct, idx: number): ReactElement {\n\t\treturn (\n\t\t\t<CheckboxListItem\n\t\t\t\tkey={item.id}\n\t\t\t\tonClick={handleChange(idx)}\n\t\t\t\tchecked={state[idx]}\n\t\t\t\tlabel={item.name}\n\t\t\t/>\n\t\t)\n\t}\n\n\treturn (\n\t\t<ExpandableNav title={title}>\n\t\t\t<IfElseLoading if={!loading}>\n\t\t\t\t<List component=\"nav\" disablePadding>\n\t\t\t\t\t{data.length === 0 ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t\t\t<ListItemText>No data available to download</ListItemText>\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<>{data.map(mapList)}</>\n\t\t\t\t\t)}\n\t\t\t\t</List>\n\t\t\t</IfElseLoading>\n\t\t</ExpandableNav>\n\t)\n})\n","import { DiscoverTopicsStruct, SingleDownloadProps } from \"./shape\"\n\nexport const staticTitles: Record<SingleDownloadProps[\"id\"], string> = {\n\tchangeLevers: \"Change Levers\",\n\tactionChecklist: \"Action Checklist\",\n}\n\nexport const discoverTopics: DiscoverTopicsStruct[] = [\n\t{\n\t\tname: \"Planning your business - Quicksnaps\",\n\t\tid: \"Planning your business - Quicksnaps\",\n\t\tpath: \"/pdf/Planning your business - Quicksnaps.pdf\",\n\t},\n\t{\n\t\tname: \"Business Plan - Activity\",\n\t\tid: \"Business Plan - Activity\",\n\t\tpath: \"/pdf/BusinessPlan-Activity.pdf\",\n\t},\n\t{\n\t\tname: \"Record Keeping - Quicksnaps\",\n\t\tid: \"Record Keeping - Quicksnaps\",\n\t\tpath: \"/pdf/Record keeping - Quicksnaps.pdf\",\n\t},\n\t{\n\t\tname: \"Record Keeping - Activity\",\n\t\tid: \"Record Keeping - Activity\",\n\t\tpath: \"/pdf/RecordKeeping-Activity.pdf\",\n\t},\n\t{\n\t\tname: \"Funding your business - Quicksnaps\",\n\t\tid: \"Funding your business - Quicksnaps\",\n\t\tpath: \"/pdf/Funding your business - Quicksnaps.pdf\",\n\t},\n\t{\n\t\tname: \"Funding your business - Activity\",\n\t\tid: \"Funding your business - Activity\",\n\t\tpath: \"/pdf/Funding-Activity.pdf\",\n\t},\n\t{\n\t\tname: \"Managing your cash flow - Quicksnaps\",\n\t\tid: \"Managing your cash flow - Quicksnaps\",\n\t\tpath: \"/pdf/Managing your cash flow - Quicksnaps.pdf\",\n\t},\n\t{\n\t\tname: \"Planning your regular financial commitments - Quicksnaps\",\n\t\tid: \"Planning your regular financial commitments - Quicksnaps\",\n\t\tpath: \"/pdf/Planning your regular financial commitments - Quicksnaps.pdf\",\n\t},\n\t{\n\t\tname: \"Know your commitments - Activity\",\n\t\tid: \"Know your commitments - Activity\",\n\t\tpath: \"/pdf/KnowYourCommitments-Activity.pdf\",\n\t},\n\t{\n\t\tname: \"Tracking your performance - Quicksnaps\",\n\t\tid: \"Tracking your performance - Quicksnaps\",\n\t\tpath: \"/pdf/Tracking your performance - Quicksnaps.pdf\",\n\t},\n\t{\n\t\tname: \"Selling, closing and succession planning - Quicksnaps\",\n\t\tid: \"Selling, closing and succession planning - Quicksnaps\",\n\t\tpath: \"/pdf/Selling, closing and succession planning - Quicksnaps.pdf\",\n\t},\n]\n\nexport const changeLeversPath = \"/pdf/Change levers.pdf\"\n","import { makeStyles } from \"@material-ui/core\"\n\nconst useStyles = makeStyles((theme) => ({\n\tdropdownWrapper: {\n\t\tmarginTop: theme.spacing(3),\n\t},\n}))\n\nexport default useStyles\n","import React, { ReactElement, useState, useCallback, useEffect } from \"react\"\nimport {\n\tGrid,\n\tTypography,\n\tList,\n\tListItem,\n\tListItemIcon,\n\tListItemText,\n\tBox,\n\tmakeStyles,\n\tTheme,\n\tcreateStyles,\n\tBackdrop,\n\tCircularProgress,\n} from \"@material-ui/core\"\nimport GetAppIcon from \"@material-ui/icons/GetApp\"\nimport JSZip from \"jszip\"\nimport { fetch as fetchPolyfill } from \"whatwg-fetch\"\nimport { saveAs } from \"file-saver\"\nimport { format } from \"date-fns\"\nimport { HealthCheckDataStruct, CFCStruct } from \"../data/_config/shape\"\nimport HealthCheckUseCase from \"../data/healthChecks/HealthCheckLogic\"\nimport CFCUseCase from \"../data/CFC/CFCLogic\"\nimport arrayFillWith from \"../util/array/arrayFillWith\"\nimport { PageContainer } from \"../components/Layouts\"\nimport ExpandableNav from \"../components/ExpandableNav\"\nimport FileListing from \"../components/SessionFiles/FileListing\"\nimport useCurrentClient from \"../state/client/useCurrentClient\"\nimport {\n\tSelectedFiles,\n\tSingleDownloadProps,\n\tFileListingStruct,\n} from \"../components/SessionFiles/__config/shape\"\nimport {\n\tdiscoverTopics,\n\tstaticTitles,\n\tchangeLeversPath,\n} from \"../components/SessionFiles/__config/constants\"\nimport {\n\thealthCheckToData,\n\tcfcToData,\n} from \"../components/SessionFiles/__config/utilities\"\nimport CheckboxListItem from \"../components/SessionFiles/CheckboxListItem\"\nimport useStyles from \"../components/SessionFiles/__config/styles\"\nimport SectionTitle from \"../components/SectionTitle\"\nimport HealthCheckPDF, {\n\tHealthCheckQuestionSet,\n} from \"../components/PDF/HealthCheckPDF\"\nimport { questions } from \"../components/HealthCheck/_config/data\"\nimport ActionChecklistUseCase from \"../data/ActionChecklist/ChecklistLogic\"\nimport ActionNotesUseCase from \"../data/ActionChecklist/NotesLogic\"\nimport ActionChecklistPDF from \"../components/PDF/ActionChecklistPDF\"\nimport CashFlowCanvasPDF from \"../components/PDF/CashFlowCanvasPDF\"\nimport hasProperty from \"../util/object/hasProperty\"\nimport { canvasDisplayTitle } from \"../components/CFC/__config/utilities\"\nimport SnackbarMsg, {\n\tSnackbarMsgData,\n} from \"../components/SnackbarMsg/SnackbarMsg\"\n\nconst useSessionStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\tbackdrop: {\n\t\t\tzIndex: theme.zIndex.drawer + 1,\n\t\t\tcolor: \"#fff\",\n\t\t},\n\t})\n)\n\nconst SessionFiles = (): ReactElement => {\n\tconst classes = useSessionStyles()\n\tconst cls = useStyles()\n\tconst [selectedFiles, setSelectedFiles] = useState<SelectedFiles>({\n\t\tchangeLevers: false,\n\t\tactionChecklist: false,\n\t\thealthChecks: [],\n\t\tcfc: [],\n\t\tdiscoverTopics: arrayFillWith(discoverTopics.length, false),\n\t})\n\tconst [healthChecks, setHealthChecks] = useState<HealthCheckDataStruct[]>([])\n\tconst [cfc, setCfc] = useState<CFCStruct[]>([])\n\tconst [HCListing, setHCListing] = useState<FileListingStruct[]>([])\n\tconst [CFCListing, setCFCListing] = useState<FileListingStruct[]>([])\n\tconst assetBaseUrl = process.env.REACT_APP_ASSETS_URL || \"\"\n\n\tconst [fetching, setFetching] = useState(true)\n\tconst [exporting, setExporting] = useState(false)\n\tconst [currentClient, synced] = useCurrentClient()\n\n\tconst [snackbar, setSnackbar] = useState<SnackbarMsgData>({\n\t\topen: false,\n\t\tmsg: \"\",\n\t})\n\n\tfunction showSnackbar(\n\t\tmsg: SnackbarMsgData[\"msg\"],\n\t\tseverity: SnackbarMsgData[\"severity\"]\n\t): void {\n\t\tsetSnackbar({ ...snackbar, msg, severity, open: true })\n\t}\n\n\tfunction handleClose(event?: React.SyntheticEvent, reason?: string): void {\n\t\tif (reason === \"clickaway\") {\n\t\t\treturn\n\t\t}\n\n\t\tsetSnackbar({ ...snackbar, open: false })\n\t}\n\n\tconst fetchData = useCallback(async () => {\n\t\tif (currentClient?.id) {\n\t\t\tconst hcs = await HealthCheckUseCase.findByClient(currentClient.id)\n\t\t\tconst cfcs = await CFCUseCase.findByClient(currentClient.id)\n\n\t\t\tsetHealthChecks(hcs)\n\t\t\tsetCfc(cfcs)\n\n\t\t\tsetSelectedFiles((prev) => ({\n\t\t\t\t...prev,\n\t\t\t\thealthChecks: arrayFillWith(hcs.length, false),\n\t\t\t\tcfc: arrayFillWith(cfcs.length, false),\n\t\t\t}))\n\n\t\t\tsetHCListing(hcs.reduce(healthCheckToData(), []))\n\t\t\tsetCFCListing(cfcs.reduce(cfcToData(), []))\n\t\t}\n\t\tsetFetching(false)\n\t}, [\n\t\tcurrentClient,\n\t\tsetSelectedFiles,\n\t\tsetHealthChecks,\n\t\tsetCfc,\n\t\tsetFetching,\n\t\tsetHCListing,\n\t\tsetCFCListing,\n\t])\n\n\tuseEffect(() => {\n\t\tif (synced) {\n\t\t\tfetchData()\n\t\t}\n\t}, [fetchData, synced])\n\n\tconst changeSingleDownload = (id: SingleDownloadProps[\"id\"]) => (): void => {\n\t\tsetSelectedFiles((prev) => ({\n\t\t\t...prev,\n\t\t\t[id]: !prev[id],\n\t\t}))\n\t}\n\n\tconst getStaticPdf = (name: string, url: string) => {\n\t\t// IE does not support Fetch response.arrayBuffer().\n\t\t// Use Polyfill Fetch for PDF response buffer.\n\t\treturn fetchPolyfill(url, {\n\t\t\tmethod: \"GET\",\n\t\t})\n\t\t\t.then((response: any) => response.arrayBuffer())\n\t\t\t.then((buffer: any) => ({ fileName: name, buffer }))\n\t}\n\n\tconst makeStaticPdf = async (name: string, path: string): Promise<any> => {\n\t\tconst file = encodeURI(`${assetBaseUrl}${path}`)\n\t\tconst pdf = await getStaticPdf(name, file)\n\t\treturn pdf\n\t}\n\n\tconst pdfMakeBlobPromise = (\n\t\tpdf: pdfMake.TCreatedPdf,\n\t\tfilename: string\n\t): Promise<{ blob: Blob; filename: string }> => {\n\t\treturn new Promise((resolve) => {\n\t\t\tpdf.getBlob((b: Blob) => resolve({ blob: b, filename }))\n\t\t})\n\t}\n\n\tconst generateZip = async (): Promise<void> => {\n\t\tif (currentClient?.id) {\n\t\t\tsetExporting(true)\n\t\t\tconst zip = new JSZip()\n\n\t\t\t// Change Levers document\n\t\t\tif (selectedFiles.changeLevers) {\n\t\t\t\tconst CHPDF = await makeStaticPdf(\"ChangeLevers.pdf\", changeLeversPath)\n\t\t\t\tzip.file(CHPDF.fileName, CHPDF.buffer)\n\t\t\t}\n\n\t\t\t// Action Checklist\n\t\t\tif (selectedFiles.actionChecklist) {\n\t\t\t\tconst checklists = await ActionChecklistUseCase.findByClient(\n\t\t\t\t\tcurrentClient.id\n\t\t\t\t)\n\t\t\t\tconst notes = await ActionNotesUseCase.findByClient(currentClient.id)\n\t\t\t\tconst ACPDF = await ActionChecklistPDF(\n\t\t\t\t\tcurrentClient?.name ?? \"Client\",\n\t\t\t\t\tchecklists,\n\t\t\t\t\tnotes\n\t\t\t\t)\n\t\t\t\tconst blob = await pdfMakeBlobPromise(\n\t\t\t\t\tACPDF,\n\t\t\t\t\t\"ActionChecklistSummary.pdf\"\n\t\t\t\t)\n\t\t\t\tzip.file(blob.filename, blob.blob)\n\t\t\t}\n\n\t\t\t// Discover Topics\n\t\t\tconst DTPromises: any = selectedFiles.discoverTopics\n\t\t\t\t.map((val, idx) => {\n\t\t\t\t\tif (val) {\n\t\t\t\t\t\treturn makeStaticPdf(\n\t\t\t\t\t\t\t`${discoverTopics[idx].name}.pdf`,\n\t\t\t\t\t\t\tdiscoverTopics[idx].path\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\treturn undefined\n\t\t\t\t})\n\t\t\t\t.filter((v) => typeof v !== \"undefined\")\n\n\t\t\t// Health Checks\n\t\t\tconst HCNames: string[] = []\n\t\t\tconst HCPromises = selectedFiles.healthChecks\n\t\t\t\t.map((val, idx) => {\n\t\t\t\t\tif (val) {\n\t\t\t\t\t\tconst data = healthChecks[idx]\n\t\t\t\t\t\tif (data) {\n\t\t\t\t\t\t\tconst pdfData: HealthCheckQuestionSet = {}\n\t\t\t\t\t\t\tquestions.forEach((q, i) => {\n\t\t\t\t\t\t\t\tconst { question } = q\n\t\t\t\t\t\t\t\tconst answer = data?.answers[i] || \"positive\"\n\t\t\t\t\t\t\t\tconst text = q.options[answer]\n\t\t\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\t\t\tpdfData[i] = { question, answer, text }\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\t\tHCNames.push(\n\t\t\t\t\t\t\t\t`Completed Health Check ${format(\n\t\t\t\t\t\t\t\t\tdata.createdAt!,\n\t\t\t\t\t\t\t\t\t\"dd/MM/yyyy\"\n\t\t\t\t\t\t\t\t)}.pdf`\n\t\t\t\t\t\t\t\t\t.replace(/ /g, \"-\")\n\t\t\t\t\t\t\t\t\t.replace(/\\//g, \"-\")\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\treturn HealthCheckPDF(currentClient?.name ?? \"Client\", pdfData)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn undefined\n\t\t\t\t})\n\t\t\t\t.filter((v) => typeof v !== \"undefined\")\n\n\t\t\t// CFC\n\t\t\tconst CFCNames: string[] = []\n\t\t\tconst CFCPromises = selectedFiles.cfc\n\t\t\t\t.map((val, idx) => {\n\t\t\t\t\tif (val) {\n\t\t\t\t\t\tconst data = cfc[idx]\n\t\t\t\t\t\tif (data) {\n\t\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\t\tCFCNames.push(\n\t\t\t\t\t\t\t\t`${canvasDisplayTitle(data)}.pdf`\n\t\t\t\t\t\t\t\t\t.replace(/ /g, \"-\")\n\t\t\t\t\t\t\t\t\t.replace(/\\//g, \"-\")\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\treturn CashFlowCanvasPDF(currentClient?.name ?? \"Client\", data)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn undefined\n\t\t\t\t})\n\t\t\t\t.filter((v) => typeof v !== \"undefined\")\n\n\t\t\tPromise.all([...HCPromises, ...CFCPromises])\n\t\t\t\t.then((res) => {\n\t\t\t\t\tconst names = [...HCNames, ...CFCNames]\n\n\t\t\t\t\tconst blobPromises = res\n\t\t\t\t\t\t.map((pdf, i) => {\n\t\t\t\t\t\t\tif (pdf) {\n\t\t\t\t\t\t\t\treturn pdfMakeBlobPromise(pdf, names[i])\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn undefined\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.filter((v) => typeof v !== \"undefined\")\n\n\t\t\t\t\tPromise.all([...DTPromises, ...blobPromises])\n\t\t\t\t\t\t.then((res1) => {\n\t\t\t\t\t\t\tres1.forEach((doc) => {\n\t\t\t\t\t\t\t\tif (hasProperty(doc, \"fileName\")) {\n\t\t\t\t\t\t\t\t\tzip.file(doc.fileName, doc.buffer)\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tzip.file(doc.filename, doc.blob)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\tzip.generateAsync({ type: \"blob\" }).then(function (content) {\n\t\t\t\t\t\t\t\t// see FileSaver.js\n\t\t\t\t\t\t\t\tsaveAs(content, `${currentClient.name.replace(/ /g, \"-\")}.zip`)\n\t\t\t\t\t\t\t\tsetExporting(false)\n\t\t\t\t\t\t\t\tshowSnackbar(\n\t\t\t\t\t\t\t\t\t\"The PDFs has been successfully exported\",\n\t\t\t\t\t\t\t\t\t\"success\"\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(() => {\n\t\t\t\t\t\t\tsetExporting(false)\n\t\t\t\t\t\t\tshowSnackbar(\"Something went wrong, please try again\", \"error\")\n\t\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tsetExporting(false)\n\t\t\t\t\tshowSnackbar(\"Something went wrong, please try again\", \"error\")\n\t\t\t\t})\n\t\t}\n\t}\n\n\tconst Nav = React.memo(() => {\n\t\treturn (\n\t\t\t<ExpandableNav>\n\t\t\t\t<List component=\"nav\" disablePadding>\n\t\t\t\t\t<ListItem button onClick={generateZip}>\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<GetAppIcon />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText>Download selected files</ListItemText>\n\t\t\t\t\t</ListItem>\n\t\t\t\t</List>\n\t\t\t</ExpandableNav>\n\t\t)\n\t})\n\n\tconst SingleDownloads = ({\n\t\ttitle,\n\t\tid,\n\t}: SingleDownloadProps): ReactElement => (\n\t\t<ExpandableNav title={title}>\n\t\t\t<List component=\"nav\" disablePadding>\n\t\t\t\t<CheckboxListItem\n\t\t\t\t\tonClick={changeSingleDownload(id)}\n\t\t\t\t\tchecked={selectedFiles[id]}\n\t\t\t\t\tlabel={staticTitles[id]}\n\t\t\t\t/>\n\t\t\t</List>\n\t\t</ExpandableNav>\n\t)\n\n\treturn (\n\t\t<>\n\t\t\t<PageContainer>\n\t\t\t\t<Grid container spacing={3}>\n\t\t\t\t\t<Grid item xs={12} md={9}>\n\t\t\t\t\t\t<Box className=\"content-area\">\n\t\t\t\t\t\t\t<SectionTitle>Downloads</SectionTitle>\n\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\tAll the activities you completed in your session are saved here.\n\t\t\t\t\t\t\t\tDownload and save the files to share and review.\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\tSelect the items you want to save and download them from the\n\t\t\t\t\t\t\t\tcontrol panel.\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box className={cls.dropdownWrapper}>\n\t\t\t\t\t\t\t<SingleDownloads title=\"Change Levers\" id=\"changeLevers\" />\n\t\t\t\t\t\t\t<SingleDownloads title=\"Action Checklist\" id=\"actionChecklist\" />\n\t\t\t\t\t\t\t<FileListing\n\t\t\t\t\t\t\t\ttitle=\"Discover Topics\"\n\t\t\t\t\t\t\t\tstate={selectedFiles.discoverTopics}\n\t\t\t\t\t\t\t\tsetState={setSelectedFiles}\n\t\t\t\t\t\t\t\tdata={discoverTopics}\n\t\t\t\t\t\t\t\tid=\"discoverTopics\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<FileListing\n\t\t\t\t\t\t\t\ttitle=\"Health Check\"\n\t\t\t\t\t\t\t\tstate={selectedFiles.healthChecks}\n\t\t\t\t\t\t\t\tsetState={setSelectedFiles}\n\t\t\t\t\t\t\t\tdata={HCListing}\n\t\t\t\t\t\t\t\tid=\"healthChecks\"\n\t\t\t\t\t\t\t\tloading={fetching}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<FileListing\n\t\t\t\t\t\t\t\ttitle=\"Cash Flow Canvas\"\n\t\t\t\t\t\t\t\tstate={selectedFiles.cfc}\n\t\t\t\t\t\t\t\tsetState={setSelectedFiles}\n\t\t\t\t\t\t\t\tdata={CFCListing}\n\t\t\t\t\t\t\t\tid=\"cfc\"\n\t\t\t\t\t\t\t\tloading={fetching}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} md={3}>\n\t\t\t\t\t\t<Nav />\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</PageContainer>\n\t\t\t<Backdrop className={classes.backdrop} open={exporting}>\n\t\t\t\t<CircularProgress color=\"inherit\" />\n\t\t\t</Backdrop>\n\t\t\t{/* eslint-disable-next-line react/jsx-props-no-spreading */}\n\t\t\t<SnackbarMsg {...snackbar} onClose={handleClose} />\n\t\t</>\n\t)\n}\n\nexport default SessionFiles\n","import { format } from \"date-fns\"\nimport { FileListingStruct } from \"./shape\"\nimport { HealthCheckDataStruct, CFCStruct } from \"../../../data/_config/shape\"\nimport { canvasDisplayTitle } from \"../../CFC/__config/utilities\"\n\nexport function healthCheckToData(): ReducerHOF<\n\tFileListingStruct[],\n\tHealthCheckDataStruct\n> {\n\treturn (acc, cur): FileListingStruct[] =>\n\t\tacc.concat({\n\t\t\tname: `Completed Health Check ${\n\t\t\t\tcur.createdAt && format(cur.createdAt, \"'-' dd/MM/yyyy hh:mm a\")\n\t\t\t}`,\n\t\t\tid: `${cur.id || -1}`,\n\t\t})\n}\n\nexport function cfcToData(): ReducerHOF<FileListingStruct[], CFCStruct> {\n\treturn (acc, cur): FileListingStruct[] =>\n\t\tacc.concat({\n\t\t\tname: canvasDisplayTitle(cur),\n\t\t\tid: `${cur.id || -1}`,\n\t\t})\n}\n"],"sourceRoot":""}