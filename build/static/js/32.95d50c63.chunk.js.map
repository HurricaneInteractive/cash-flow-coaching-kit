{"version":3,"sources":["components/SnackbarMsg/SnackbarMsg.tsx","content/tips lazy /^/.//.*$/ groupOptions: {} namespace object","components/PageTip/_config/style.ts","components/PageTip/_partials/AsyncTip.tsx","components/PageTip/PageTip.tsx","components/IfElseLoading/IfElseLoading.tsx","components/SnackbarMsg/index.ts","components/Forms/CFC/__config/styles.ts","components/CFC/EmployeeExpenses.tsx","components/LastSaved/LastSaved.tsx","components/Forms/CFC/CanvasForm.tsx","components/Forms/CFC/removeCashFlowItem.ts","pages/CashFlowCanvas/canvasEdit.tsx"],"names":["SnackbarMsg","open","msg","onClose","severity","autoHideDuration","anchorOrigin","vertical","horizontal","variant","action","size","aria-label","color","fontSize","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","usePageTipStyles","makeStyles","theme","root","position","left","spacing","bottom","icon","marginRight","drawer","padding","maxWidth","width","closeBox","display","justifyContent","marginBottom","paddingBottom","borderBottom","borderBottomColor","palette","grey","borderBottomStyle","AsyncTip","loadable","props","tip","fallback","Loading","PageTip","style","useState","drawerOpen","setDrawerOpen","toggleDrawer","event","KeyboardEvent","type","key","className","Fab","onClick","Drawer","anchor","classes","paper","Box","Typography","Button","startIcon","IfElseLoading","children","if","useStyles","box","alignItems","breakpoints","down","flexDirection","saveButton","up","marginLeft","EmployeeExpenses","payg","superAmount","super","onChange","cls","useInputWrapper","wrapper","highlightLeft","plain","PayG","value","Spacer","Super","LastSaved","date","getFormattedText","useCallback","formatDistance","Date","addSuffix","includeSeconds","setMsg","useEffect","setInterval","clearInterval","CanvasForm","initialValues","customTitle","styles","lastSaved","setLastSaved","canvasId","useParams","useCurrentClient","currentClient","useMachine","fetchMachine","stateMachine","updateMachine","useContext","CFCContext","duplicateError","invalidDateError","dispatch","copyCanvasActive","useFormik","onSubmit","setFieldValue","handleChange","values","setValues","previousValues","setPreviousValues","useCustomTitle","setUseCustomTitle","calculated","useMemo","calculateInitial","canvasTitle","canvasType","canvasTimeFrame","canvasStartDate","canvasEndDate","openingBalance","paygWithholding","incomeTax","cashToOwner","stock","creditors","debtors","assets","loans","cashInItems","cashOutItems","cashInTotal","calcCashFlowTotal","cashInGST","calcCashFlowGST","cashOutTotal","calcTotalCashOut","cashOutGST","CFCActionTypes","ChangeQuestionValues","payload","one","calcQuestionOne","two","calcQuestionTwo","incomeTaxPercentage","three","calcQuestionThree","four","undefined","fetchFormData","a","CFCUseCase","findById","data","snackbar","setSnackbar","disableSaving","handleFormSave","update","isEqual","changeDateValue","k","v","changeDate","start","end","inputChange","addCashFlowItem","items","concat","createCashFlowItem","removeItem","length","description","amount","gstApplicable","filter","filterById","removeCashflowItem","DataNotFound","timeframe","startDate","endDate","canvasTypeValue","canvasTimeframeValue","onDateChange","changeCheck","target","checked","showDuplicateError","Divider","space","name","total","gst","addItem","beforeTotalChild","cashSurplus","availableToSpend","closingBalance","totalNetAssets","preventDefault","disabled","reason","CanvasEdit","location","useLocation","qs","parse","search","ignoreQueryPrefix","questionValues","initial","title","timeFrame","toDate","parseInt","Grid","container","item","xs","md","use","useCustom","ControlPanel"],"mappings":"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","file":"static/js/32.95d50c63.chunk.js","sourcesContent":["import React, { ReactElement } from \"react\"\nimport Alert, { AlertProps } from \"@material-ui/lab/Alert\"\nimport { Snackbar, IconButton } from \"@material-ui/core\"\nimport CloseIcon from \"@material-ui/icons/Close\"\n\n// #region Interface Definitions\n/**\n * Data required for the snackbar\n * use this interface when defining the state\n *\n * @export\n * @interface SnackbarMsgData\n */\nexport interface SnackbarMsgData {\n\topen: boolean\n\tmsg: string\n\tseverity?: AlertProps[\"severity\"]\n}\n\n/**\n * Props required to be passed to the component\n *\n * @export\n * @interface SnackbarMsgProps\n * @extends {SnackbarMsgData}\n */\nexport interface SnackbarMsgProps extends SnackbarMsgData {\n\tonClose: (\n\t\tevent: React.SyntheticEvent | React.MouseEvent,\n\t\treason?: string\n\t) => void\n}\n// #endregion\n\n/**\n * Snackbar abstraction component, use this for a consistent\n * way to show messages to the user\n *\n * The component who uses this component will need to handle the\n * state of this component and pass down the props.\n *\n * See the README\n *\n * @export\n * @param {SnackbarMsgProps} {\n * \topen,\n * \tmsg,\n * \tonClose,\n * \tseverity = \"info\",\n * }\n * @returns {ReactElement}\n */\nexport default function SnackbarMsg({\n\topen,\n\tmsg,\n\tonClose,\n\tseverity = \"info\",\n}: SnackbarMsgProps): ReactElement {\n\treturn (\n\t\t<Snackbar\n\t\t\topen={open}\n\t\t\tautoHideDuration={2000}\n\t\t\tanchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n\t\t\tonClose={onClose}\n\t\t>\n\t\t\t<Alert\n\t\t\t\tseverity={severity}\n\t\t\t\tvariant=\"filled\"\n\t\t\t\taction={\n\t\t\t\t\t<IconButton size=\"small\" aria-label=\"close\" color=\"inherit\">\n\t\t\t\t\t\t<CloseIcon fontSize=\"small\" />\n\t\t\t\t\t</IconButton>\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t{msg}\n\t\t\t</Alert>\n\t\t</Snackbar>\n\t)\n}\n","var map = {\n\t\"./ActionChecklistTip\": [\n\t\t800,\n\t\t3\n\t],\n\t\"./ActionChecklistTip.tsx\": [\n\t\t800,\n\t\t3\n\t],\n\t\"./CFCanvasTip\": [\n\t\t801,\n\t\t4\n\t],\n\t\"./CFCanvasTip.tsx\": [\n\t\t801,\n\t\t4\n\t],\n\t\"./ChangeLevers\": [\n\t\t802,\n\t\t5\n\t],\n\t\"./ChangeLevers.tsx\": [\n\t\t802,\n\t\t5\n\t],\n\t\"./ClientListTips\": [\n\t\t803,\n\t\t6\n\t],\n\t\"./ClientListTips.tsx\": [\n\t\t803,\n\t\t6\n\t],\n\t\"./CoachingKitTips\": [\n\t\t804,\n\t\t7\n\t],\n\t\"./CoachingKitTips.tsx\": [\n\t\t804,\n\t\t7\n\t],\n\t\"./DiscoverTopicsTips\": [\n\t\t805,\n\t\t8\n\t],\n\t\"./DiscoverTopicsTips.tsx\": [\n\t\t805,\n\t\t8\n\t],\n\t\"./HCQuestionnaire\": [\n\t\t806,\n\t\t9\n\t],\n\t\"./HCQuestionnaire.tsx\": [\n\t\t806,\n\t\t9\n\t],\n\t\"./style\": [\n\t\t798,\n\t\t10\n\t],\n\t\"./style.ts\": [\n\t\t798,\n\t\t10\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 807;\nmodule.exports = webpackAsyncContext;","import { makeStyles } from \"@material-ui/core/styles\"\n\nconst usePageTipStyles = makeStyles((theme) => ({\n\troot: {\n\t\tposition: \"fixed\",\n\t\tleft: theme.spacing(2),\n\t\tbottom: theme.spacing(2),\n\t},\n\ticon: {\n\t\tmarginRight: theme.spacing(1),\n\t},\n\tdrawer: {\n\t\tpadding: theme.spacing(2),\n\t\tmaxWidth: \"350px\",\n\t\twidth: \"100%\",\n\t},\n\tcloseBox: {\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"space-between\",\n\t\tmarginBottom: theme.spacing(2),\n\t\tpaddingBottom: theme.spacing(2),\n\t\tborderBottom: 1,\n\t\tborderBottomColor: theme.palette.grey[500],\n\t\tborderBottomStyle: \"solid\",\n\t},\n}))\n\nexport default usePageTipStyles\n","import React from \"react\"\nimport loadable from \"@loadable/component\"\nimport Loading from \"../../Loading\"\n\n/**\n * Loadable component to dynamically render the tip content\n *\n */\nconst AsyncTip = loadable(\n\t(props: { tip: string }) => import(`../../../content/tips/${props.tip}`),\n\t{\n\t\tfallback: <Loading />,\n\t}\n)\n\nexport default AsyncTip\n","import React, { ReactElement, useState, MouseEvent } from \"react\"\nimport { Fab, Drawer, Button, Box, Typography } from \"@material-ui/core\"\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\"\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\"\nimport usePageTipStyles from \"./_config/style\"\nimport { IPageTip } from \"./_config/shape\"\nimport { AsyncTip } from \"./_partials\"\n\n/**\n * Renders a page tip tooltip at the bottom left of the page\n *\n * @param {string} {tip} File name (no extension) for the tip component\n * @returns ReactElement\n */\nconst PageTip = ({ tip }: IPageTip): ReactElement => {\n\tconst style = usePageTipStyles()\n\tconst [drawerOpen, setDrawerOpen] = useState<boolean>(false)\n\n\t/**\n\t * Toggles the state of the drawer\n\t *\n\t * @param {Boolean} open State to change the drawer to\n\t * @param {KeyboardEvent|MouseEvent<HTMLButtonElement>} event Event generated by a keypress|click\n\t */\n\tconst toggleDrawer = (open: boolean) => (\n\t\tevent: KeyboardEvent | MouseEvent<HTMLButtonElement>\n\t): void => {\n\t\tif (event instanceof KeyboardEvent) {\n\t\t\tif (\n\t\t\t\tevent.type === \"keydown\" &&\n\t\t\t\t(event.key === \"Tab\" || event.key === \"Shift\")\n\t\t\t) {\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\n\t\t// Change the state of the drawer\n\t\tsetDrawerOpen(open)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div className={style.root}>\n\t\t\t\t<Fab color=\"secondary\" onClick={toggleDrawer(true)} variant=\"extended\">\n\t\t\t\t\t<HelpOutlineIcon className={style.icon} />\n\t\t\t\t\tTips\n\t\t\t\t</Fab>\n\t\t\t</div>\n\t\t\t<Drawer\n\t\t\t\tanchor=\"left\"\n\t\t\t\topen={drawerOpen}\n\t\t\t\tonClose={toggleDrawer(false)}\n\t\t\t\tclasses={{\n\t\t\t\t\tpaper: style.drawer,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Box className={style.closeBox}>\n\t\t\t\t\t<Typography variant=\"h6\">Tips</Typography>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={toggleDrawer(false)}\n\t\t\t\t\t\tstartIcon={<HighlightOffIcon />}\n\t\t\t\t\t>\n\t\t\t\t\t\tClose\n\t\t\t\t\t</Button>\n\t\t\t\t</Box>\n\n\t\t\t\t<AsyncTip tip={tip} />\n\t\t\t</Drawer>\n\t\t</>\n\t)\n}\n\nexport default PageTip\n","import React, { ReactElement, ReactNode } from \"react\"\nimport Loading from \"../Loading\"\n\n/**\n * Prop defintion for the `IfElseLoading` component\n *\n * @interface IfElseLoadingProps\n */\ninterface IfElseLoadingProps {\n\tchildren: ReactNode\n\tif: boolean\n}\n\n/**\n * A component to render either the default Loading component\n * or its children based on a conditional\n *\n * @export\n * @param {IfElseLoadingProps} {\n * \tchildren,\n * \tif: check,\n * }\n * @returns {ReactElement}\n */\nexport default function IfElseLoading({\n\tchildren,\n\tif: check,\n}: IfElseLoadingProps): ReactElement {\n\treturn !check ? <Loading /> : <>{children}</>\n}\n","export { default } from \"./SnackbarMsg\"\n","import { makeStyles } from \"@material-ui/core\"\n\nconst useStyles = makeStyles((theme) => ({\n\tbox: {\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"flex-end\",\n\t\talignItems: \"center\",\n\t\t[theme.breakpoints.down(\"sm\")]: {\n\t\t\tflexDirection: \"column\",\n\t\t\talignItems: \"flex-start\",\n\t\t},\n\t},\n\tsaveButton: {\n\t\t[theme.breakpoints.up(\"md\")]: {\n\t\t\tmarginLeft: theme.spacing(1),\n\t\t},\n\t},\n}))\n\nexport default useStyles\n","import React, { ReactElement } from \"react\"\nimport { Box } from \"@material-ui/core\"\nimport PayG from \"./PayG\"\nimport Spacer from \"../Spacer/Spacer\"\nimport Super from \"./Super\"\nimport { useInputWrapper } from \"./__config/styles\"\n\n/**\n * Prop definition for the EmployeeExpenses component\n *\n * @interface EmployeeExpensesProps\n */\ninterface EmployeeExpensesProps {\n\tpayg: number\n\tsuper: number\n\tonChange: InputChange\n}\n\n/**\n * Panel to display the employee expenses fields\n *\n * @export\n * @param {EmployeeExpensesProps} {\n * \tpayg,\n * \tsuper: superAmount,\n * \tonChange,\n * }\n * @returns {ReactElement}\n */\nexport default function EmployeeExpenses({\n\tpayg,\n\tsuper: superAmount,\n\tonChange,\n}: EmployeeExpensesProps): ReactElement {\n\tconst cls = useInputWrapper()\n\n\treturn (\n\t\t<Box className={`${cls.wrapper} ${cls.highlightLeft} ${cls.plain}`}>\n\t\t\t<PayG value={payg} onChange={onChange} />\n\t\t\t<Spacer />\n\t\t\t<Super value={superAmount} onChange={onChange} />\n\t\t</Box>\n\t)\n}\n","import React, { ReactElement, useState, useEffect, useCallback } from \"react\"\nimport { Typography } from \"@material-ui/core\"\nimport { formatDistance } from \"date-fns\"\n\n/**\n * Last Saved component props\n *\n * @interface LastSavedProps\n */\ninterface LastSavedProps {\n\tdate: Date\n}\n\n/**\n * Displays a message for how long ago the data was saved\n *\n * @export\n * @param {LastSavedProps} { date }\n * @returns {ReactElement}\n */\nexport default function LastSaved({ date }: LastSavedProps): ReactElement {\n\tconst getFormattedText = useCallback((): string => {\n\t\treturn formatDistance(date, new Date(), {\n\t\t\taddSuffix: true,\n\t\t\tincludeSeconds: true,\n\t\t})\n\t}, [date])\n\n\tconst [msg, setMsg] = useState(getFormattedText())\n\n\tuseEffect(() => {\n\t\tconst id = setInterval(() => {\n\t\t\tsetMsg(getFormattedText())\n\t\t}, 1000)\n\n\t\treturn (): void => clearInterval(id)\n\t}, [getFormattedText])\n\n\treturn (\n\t\t<Typography variant=\"overline\" color=\"textSecondary\">\n\t\t\tLast saved {msg}\n\t\t</Typography>\n\t)\n}\n","import React, {\n\tReactElement,\n\tuseState,\n\tuseCallback,\n\tuseMemo,\n\tuseEffect,\n\tuseContext,\n} from \"react\"\nimport { useFormik } from \"formik\"\nimport { Box, Button, Divider, Typography } from \"@material-ui/core\"\nimport { useParams } from \"react-router-dom\"\nimport { isEqual } from \"lodash-es\"\nimport { useMachine } from \"@xstate/react\"\nimport { BaseCFCStruct, CashFlow } from \"../../../data/_config/shape\"\nimport { calculateInitial } from \".\"\nimport {\n\tConfigPanel,\n\tOpeningBalance,\n\tCanvasTitle,\n\tCashSurplus,\n\tAvailableToSpend,\n\tCashBalance,\n\tIncomeTax,\n\tFallingBehind,\n\tRepeaterForm,\n} from \"../../CFC\"\nimport Spacer from \"../../Spacer/Spacer\"\nimport EmployeeExpenses from \"../../CFC/EmployeeExpenses\"\nimport {\n\tcalcCashFlowGST,\n\tcalcTotalCashOut,\n\tcalcCashFlowTotal,\n} from \"../../../state/CFC/accumulators\"\nimport createCashFlowItem from \"../../../state/CFC/createCashFlow\"\nimport { useInputWrapper } from \"../../CFC/__config/styles\"\nimport removeCashflowItem from \"./removeCashFlowItem\"\nimport { CanvasFormProps } from \"./__config/shape\"\nimport IfElseLoading from \"../../IfElseLoading\"\nimport useCurrentClient from \"../../../state/client/useCurrentClient\"\nimport CFCUseCase from \"../../../data/CFC/CFCLogic\"\nimport LastSaved from \"../../LastSaved\"\nimport fetchMachine from \"./__config/machine\"\nimport DataNotFound from \"../../CFC/DataNotFound\"\nimport useStyles from \"./__config/styles\"\nimport { SnackbarMsgData } from \"../../SnackbarMsg/SnackbarMsg\"\nimport SnackbarMsg from \"../../SnackbarMsg\"\nimport changeDate, { CanvasDateKeys } from \"./changeDate\"\nimport CFCContext from \"../../../state/CFC/context\"\nimport { CFCActionTypes } from \"../../../state/CFC/shape\"\nimport {\n\tcalcQuestionOne,\n\tcalcQuestionTwo,\n\tcalcQuestionThree,\n} from \"../../CFC/__config/utilities\"\n\n/**\n * Form used to edit a CFC\n *\n * @export\n * @param {CanvasFormProps} {\n * \tinitialValues,\n * \tcustomTitle,\n * }\n * @returns {ReactElement}\n */\nexport default function CanvasForm({\n\tinitialValues,\n\tcustomTitle,\n}: CanvasFormProps): ReactElement {\n\t// Styling classes\n\tconst cls = useInputWrapper()\n\tconst styles = useStyles()\n\t// #region State management\n\tconst [lastSaved, setLastSaved] = useState(new Date())\n\tconst { id: canvasId } = useParams()\n\tconst [currentClient] = useCurrentClient()\n\tconst [stateMachine, updateMachine] = useMachine(fetchMachine)\n\tconst {\n\t\tduplicateError,\n\t\tinvalidDateError,\n\t\tdispatch,\n\t\tcopyCanvasActive,\n\t} = useContext(CFCContext)\n\n\tconst { setFieldValue, handleChange, values, setValues } = useFormik<\n\t\tBaseCFCStruct\n\t>({\n\t\tinitialValues,\n\t\t// Submit is not used for this form\n\t\tonSubmit: (): void => {},\n\t})\n\tconst [previousValues, setPreviousValues] = useState(initialValues)\n\tconst [useCustomTitle, setUseCustomTitle] = useState(customTitle)\n\tconst calculated = useMemo(() => calculateInitial(values), [values])\n\n\tconst {\n\t\tcanvasTitle,\n\t\tcanvasType,\n\t\tcanvasTimeFrame,\n\t\tcanvasStartDate,\n\t\tcanvasEndDate,\n\t\topeningBalance,\n\t\tpaygWithholding,\n\t\tsuperAmount,\n\t\tincomeTax,\n\t\tcashToOwner,\n\t\tstock,\n\t\tcreditors,\n\t\tdebtors,\n\t\tassets,\n\t\tloans,\n\t\tcashInItems,\n\t\tcashOutItems,\n\t} = values\n\n\tconst cashInTotal = useMemo(() => calcCashFlowTotal(cashInItems), [\n\t\tcashInItems,\n\t])\n\tconst cashInGST = useMemo(() => calcCashFlowGST(cashInItems), [cashInItems])\n\tconst cashOutTotal = useMemo(() => calcTotalCashOut(values), [values])\n\tconst cashOutGST = useMemo(() => calcCashFlowGST(cashOutItems), [\n\t\tcashOutItems,\n\t])\n\n\tuseEffect(() => {\n\t\tif (!useCustomTitle) {\n\t\t\tsetFieldValue(\"canvasTitle\", \"\")\n\t\t}\n\t}, [useCustomTitle, setFieldValue])\n\n\tuseEffect(() => {\n\t\tdispatch({\n\t\t\ttype: CFCActionTypes.ChangeQuestionValues,\n\t\t\tpayload: {\n\t\t\t\tone: calcQuestionOne(calculated),\n\t\t\t\ttwo: calcQuestionTwo(\n\t\t\t\t\tcalculated,\n\t\t\t\t\tpaygWithholding,\n\t\t\t\t\tsuperAmount,\n\t\t\t\t\tcalculated.incomeTaxPercentage\n\t\t\t\t),\n\t\t\t\tthree: calcQuestionThree(\n\t\t\t\t\topeningBalance,\n\t\t\t\t\tcalculated,\n\t\t\t\t\tcalculated.incomeTaxPercentage\n\t\t\t\t),\n\t\t\t\tfour: undefined,\n\t\t\t},\n\t\t})\n\t}, [\n\t\tcalculated,\n\t\tpaygWithholding,\n\t\tsuperAmount,\n\t\tincomeTax,\n\t\topeningBalance,\n\t\tdispatch,\n\t])\n\t// #endregion\n\n\t// #region Fetch data on load\n\tconst fetchFormData = useCallback(async () => {\n\t\tif (currentClient?.id) {\n\t\t\tconst data = await CFCUseCase.findById(canvasId)\n\t\t\tif (data) {\n\t\t\t\tsetValues(data, false)\n\t\t\t\tsetPreviousValues(data)\n\t\t\t\tif (data.canvasTitle !== \"\") {\n\t\t\t\t\tsetUseCustomTitle(true)\n\t\t\t\t}\n\t\t\t\tupdateMachine(\"RESOLVE\")\n\t\t\t} else {\n\t\t\t\tupdateMachine(\"REJECT\")\n\t\t\t}\n\t\t}\n\t}, [currentClient, canvasId, updateMachine, setValues])\n\n\tuseEffect(() => {\n\t\tfetchFormData()\n\t}, [fetchFormData])\n\t// #endregion\n\n\t// #region Snackbar Setup\n\tconst [snackbar, setSnackbar] = useState<SnackbarMsgData>({\n\t\topen: false,\n\t\tmsg: \"\",\n\t})\n\n\t/**\n\t * Opens the snackbar\n\t *\n\t * @param {SnackbarMsgData[\"msg\"]} msg\n\t * @param {SnackbarMsgData[\"severity\"]} severity\n\t */\n\tfunction showSnackbar(\n\t\tmsg: SnackbarMsgData[\"msg\"],\n\t\tseverity: SnackbarMsgData[\"severity\"]\n\t): void {\n\t\tsetSnackbar({ ...snackbar, msg, severity, open: true })\n\t}\n\n\t/**\n\t * Handles closing the snackbar\n\t *\n\t * @param {React.SyntheticEvent} [event]\n\t * @param {string} [reason]\n\t */\n\tfunction handleSnackbarClose(\n\t\tevent?: React.SyntheticEvent,\n\t\treason?: string\n\t): void {\n\t\tif (reason === \"clickaway\") {\n\t\t\treturn\n\t\t}\n\n\t\tsetSnackbar({ ...snackbar, open: false })\n\t}\n\t// #endregion\n\n\t// #region Save canvas data\n\tconst disableSaving = useCallback((): boolean => {\n\t\treturn (\n\t\t\tinvalidDateError ||\n\t\t\tduplicateError ||\n\t\t\t(useCustomTitle && canvasTitle === \"\")\n\t\t)\n\t}, [invalidDateError, duplicateError, useCustomTitle, canvasTitle])\n\n\tconst handleFormSave = useCallback(async () => {\n\t\tawait CFCUseCase.update(canvasId, values)\n\t\tsetPreviousValues(values)\n\t\tsetLastSaved(new Date())\n\t}, [canvasId, values])\n\n\tuseEffect(() => {\n\t\tconst id = setInterval(async () => {\n\t\t\tif (!isEqual(previousValues, values) && !disableSaving()) {\n\t\t\t\thandleFormSave()\n\t\t\t}\n\t\t}, 1000)\n\n\t\treturn (): void => clearInterval(id)\n\t}, [previousValues, values, handleFormSave, disableSaving])\n\n\t/**\n\t * Manually triggers a Canvas save\n\t *\n\t * @param {MouseButtonEvent} e\n\t */\n\tfunction handleManualSave(e: MouseButtonEvent): void {\n\t\te.preventDefault()\n\t\thandleFormSave()\n\t\tshowSnackbar(\"Canvas saved\", \"success\")\n\t}\n\t// #endregion\n\n\t// #region Form Change events\n\t/**\n\t * A custom change handler for the datepicker\n\t *\n\t * @template K\n\t * @param {K} k\n\t * @param {BaseCFCStruct[K]} v\n\t */\n\tconst changeDateValue = (k: CanvasDateKeys, v: Date): void => {\n\t\tconst { canvasStartDate: start, canvasEndDate: end } = changeDate<\n\t\t\tBaseCFCStruct\n\t\t>(k, v, values)\n\n\t\t// Sets the field value\n\t\tsetFieldValue(\"canvasStartDate\", start, false)\n\t\tsetFieldValue(\"canvasEndDate\", end, false)\n\t}\n\n\tuseEffect(() => {\n\t\tchangeDateValue(\"canvasStartDate\", canvasStartDate)\n\t}, [canvasTimeFrame, canvasStartDate])\n\n\tconst inputChange = useCallback(handleChange, [])\n\t// #endregion\n\n\t// #region Repeater form functionality\n\t/**\n\t * Appends a new item to the form\n\t *\n\t * @param {\"cashInItems\" | \"cashOutItems\"} key\n\t */\n\tconst addCashFlowItem = useCallback(\n\t\t(key: \"cashInItems\" | \"cashOutItems\") => (): void => {\n\t\t\tconst items = values[key]\n\t\t\tsetFieldValue(key, items.concat(createCashFlowItem()), false)\n\t\t},\n\t\t[setFieldValue, values]\n\t)\n\n\t/**\n\t * Removes an item from the form\n\t *\n\t * @param {\"cashInItems\" | \"cashOutItems\"} key\n\t * @param {CashFlow[\"id\"]} id\n\t */\n\tconst removeItem = useCallback(\n\t\t(key: \"cashInItems\" | \"cashOutItems\") => (id: CashFlow[\"id\"]): void => {\n\t\t\tsetFieldValue(key, removeCashflowItem(id, values[key]), false)\n\t\t},\n\t\t[values, setFieldValue]\n\t)\n\t// #endregion\n\n\t// Renders the no data found component when in the \"failure\" state\n\tif (stateMachine.value === \"failure\") {\n\t\treturn <DataNotFound />\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<CanvasTitle\n\t\t\t\ttype={canvasType}\n\t\t\t\ttimeframe={canvasTimeFrame}\n\t\t\t\tstartDate={canvasStartDate}\n\t\t\t\tendDate={canvasEndDate}\n\t\t\t\tcustomTitle={canvasTitle}\n\t\t\t\tuseCustomTitle={useCustomTitle}\n\t\t\t/>\n\t\t\t<ConfigPanel\n\t\t\t\tcanvasTypeValue={canvasType}\n\t\t\t\tcanvasTimeframeValue={canvasTimeFrame}\n\t\t\t\tonChange={inputChange}\n\t\t\t\tstartDate={canvasStartDate}\n\t\t\t\tendDate={canvasEndDate}\n\t\t\t\tonDateChange={changeDateValue}\n\t\t\t\tcustomTitle={canvasTitle}\n\t\t\t\tchangeCheck={(e: InputChange): void => {\n\t\t\t\t\tsetUseCustomTitle(e.target.checked)\n\t\t\t\t}}\n\t\t\t\tuseCustomTitle={useCustomTitle}\n\t\t\t\tshowDuplicateError={!copyCanvasActive}\n\t\t\t/>\n\t\t\t<IfElseLoading if={stateMachine.value !== \"loading\"}>\n\t\t\t\t<Spacer />\n\t\t\t\t<OpeningBalance value={openingBalance} onChange={inputChange} />\n\t\t\t\t<Spacer />\n\t\t\t\t<Box className={cls.wrapper}>\n\t\t\t\t\t<Typography variant=\"h6\">Cash IN</Typography>\n\t\t\t\t\t<Typography>\n\t\t\t\t\t\tCash received, or revenue, including GST (if applicable). This may\n\t\t\t\t\t\tbe for services or sales. See Change Levers for ideas on how to\n\t\t\t\t\t\timprove your Cash IN.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Spacer />\n\t\t\t\t\t<Divider />\n\t\t\t\t\t<Spacer space={3} />\n\t\t\t\t\t<RepeaterForm\n\t\t\t\t\t\tname=\"cashInItems\"\n\t\t\t\t\t\tvalues={cashInItems}\n\t\t\t\t\t\tonChange={inputChange}\n\t\t\t\t\t\ttotal={cashInTotal}\n\t\t\t\t\t\tgst={cashInGST}\n\t\t\t\t\t\taddItem={addCashFlowItem(\"cashInItems\")}\n\t\t\t\t\t\tremoveItem={removeItem(\"cashInItems\")}\n\t\t\t\t\t/>\n\t\t\t\t</Box>\n\t\t\t\t<Spacer />\n\t\t\t\t<Box className={cls.wrapper}>\n\t\t\t\t\t<Typography variant=\"h6\">Cash OUT</Typography>\n\t\t\t\t\t<Typography>\n\t\t\t\t\t\tAll expenses, including GST (if applicable). See Change Levers for\n\t\t\t\t\t\tideas on how to reduce your Cash OUT.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Spacer />\n\t\t\t\t\t<Divider />\n\t\t\t\t\t<Spacer space={3} />\n\t\t\t\t\t<RepeaterForm\n\t\t\t\t\t\tname=\"cashOutItems\"\n\t\t\t\t\t\tvalues={cashOutItems}\n\t\t\t\t\t\tonChange={inputChange}\n\t\t\t\t\t\ttotal={cashOutTotal}\n\t\t\t\t\t\tgst={cashOutGST}\n\t\t\t\t\t\taddItem={addCashFlowItem(\"cashOutItems\")}\n\t\t\t\t\t\tremoveItem={removeItem(\"cashOutItems\")}\n\t\t\t\t\t\tbeforeTotalChild={(): ReactElement => (\n\t\t\t\t\t\t\t<EmployeeExpenses\n\t\t\t\t\t\t\t\tpayg={paygWithholding}\n\t\t\t\t\t\t\t\tsuper={superAmount}\n\t\t\t\t\t\t\t\tonChange={inputChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t</Box>\n\t\t\t\t<Spacer />\n\t\t\t\t<Spacer />\n\t\t\t\t<CashSurplus value={`${calculated.cashSurplus}`} />\n\t\t\t\t<Spacer />\n\t\t\t\t<IncomeTax\n\t\t\t\t\tvalue={incomeTax}\n\t\t\t\t\tonChange={inputChange}\n\t\t\t\t\tcalculated={calculated.incomeTaxPercentage}\n\t\t\t\t/>\n\t\t\t\t<Spacer />\n\t\t\t\t<AvailableToSpend value={`${calculated.availableToSpend}`} />\n\t\t\t\t<Spacer />\n\t\t\t\t<CashBalance\n\t\t\t\t\tcashToOwner={cashToOwner}\n\t\t\t\t\tonChange={inputChange}\n\t\t\t\t\tclosingBalance={calculated.closingBalance}\n\t\t\t\t/>\n\t\t\t\t<Spacer />\n\t\t\t\t<FallingBehind\n\t\t\t\t\tstock={stock}\n\t\t\t\t\tcreditors={creditors}\n\t\t\t\t\tdebtors={debtors}\n\t\t\t\t\tassets={assets}\n\t\t\t\t\tloans={loans}\n\t\t\t\t\ttotalNetAssets={calculated.totalNetAssets}\n\t\t\t\t\tonChange={inputChange}\n\t\t\t\t/>\n\t\t\t\t<Spacer space={4} />\n\t\t\t\t<Divider />\n\t\t\t\t<Spacer />\n\t\t\t\t<Box className={styles.box}>\n\t\t\t\t\t<LastSaved date={lastSaved} />\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tonClick={handleManualSave}\n\t\t\t\t\t\tclassName={styles.saveButton}\n\t\t\t\t\t\tdisabled={disableSaving()}\n\t\t\t\t\t>\n\t\t\t\t\t\tSave canvas\n\t\t\t\t\t</Button>\n\t\t\t\t</Box>\n\t\t\t</IfElseLoading>\n\t\t\t{/* eslint-disable-next-line react/jsx-props-no-spreading */}\n\t\t\t<SnackbarMsg {...snackbar} onClose={handleSnackbarClose} />\n\t\t</>\n\t)\n}\n","import { CashFlow } from \"../../../data/_config/shape\"\nimport filterById from \"../../../util/filters/ById\"\n\n/**\n * Removes to resets a cash flow item\n *\n * @export\n * @param {CashFlow[\"id\"]} id\n * @param {CashFlow[]} values\n * @returns {CashFlow[]}\n */\nexport default function removeCashflowItem(\n\tid: CashFlow[\"id\"],\n\tvalues: CashFlow[]\n): CashFlow[] {\n\tif (values.length === 1) {\n\t\treturn [\n\t\t\t{\n\t\t\t\tid: values[0].id,\n\t\t\t\tdescription: \"\",\n\t\t\t\tamount: 0,\n\t\t\t\tgstApplicable: true,\n\t\t\t},\n\t\t]\n\t}\n\treturn values.filter(filterById(id, true))\n}\n","import React, { ReactElement, useContext } from \"react\"\nimport { Grid } from \"@material-ui/core\"\nimport { useLocation } from \"react-router-dom\"\nimport qs from \"qs\"\nimport { toDate } from \"date-fns\"\nimport { PageContainer } from \"../../components/Layouts\"\nimport CanvasForm from \"../../components/Forms/CFC/CanvasForm\"\nimport PageTip from \"../../components/PageTip\"\nimport {\n\tBaseCFCStruct,\n\tCanvasType,\n\tCFCTimeFrame,\n} from \"../../data/_config/shape\"\nimport { initialValues } from \"../../components/Forms/CFC\"\nimport ControlPanel from \"../../components/CFC/ControlPanel\"\nimport CFCContext from \"../../state/CFC/context\"\nimport { CFCFourQuestions } from \"../../components/CFC\"\n\ntype QueryParams = {\n\ttitle?: string\n\tuseCustom?: string\n\ttype?: CanvasType\n\ttimeFrame?: CFCTimeFrame\n\tstartDate?: string\n\tendDate?: string\n}\n\n/**\n * Edit a exisiting CFC\n *\n * @export\n * @returns {ReactElement}\n */\nexport default function CanvasEdit(): ReactElement {\n\tconst location = useLocation()\n\tconst v: QueryParams = qs.parse(location.search, { ignoreQueryPrefix: true })\n\tconst { questionValues } = useContext(CFCContext)\n\n\t// Construct the initial data based on the query string values\n\tconst initial: BaseCFCStruct = {\n\t\t...initialValues,\n\t\tcanvasTitle: v.title || initialValues.canvasTitle,\n\t\tcanvasType: v.type || initialValues.canvasType,\n\t\tcanvasTimeFrame: v.timeFrame || initialValues.canvasTimeFrame,\n\t\tcanvasStartDate: v.startDate\n\t\t\t? toDate(parseInt(v.startDate, 10))\n\t\t\t: initialValues.canvasStartDate,\n\t\tcanvasEndDate: v.endDate\n\t\t\t? toDate(parseInt(v.endDate, 10))\n\t\t\t: initialValues.canvasEndDate,\n\t}\n\n\t/**\n\t * Checks if the form is using a custom title or not\n\t *\n\t * @returns {boolean}\n\t */\n\tfunction useCustom(): boolean {\n\t\tconst use = v.useCustom\n\t\tif (typeof use === \"undefined\") {\n\t\t\tif (typeof v.title === \"undefined\" || v.title === \"\") {\n\t\t\t\treturn false\n\t\t\t\t// eslint-disable-next-line no-else-return\n\t\t\t} else {\n\t\t\t\treturn true\n\t\t\t}\n\t\t}\n\n\t\treturn use !== \"0\"\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<PageContainer maxWidth=\"lg\">\n\t\t\t\t<Grid container spacing={3}>\n\t\t\t\t\t<Grid item xs={12} md={9}>\n\t\t\t\t\t\t<CanvasForm initialValues={initial} customTitle={useCustom()} />\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} md={3}>\n\t\t\t\t\t\t<CFCFourQuestions values={questionValues} />\n\t\t\t\t\t\t<ControlPanel />\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</PageContainer>\n\t\t\t<PageTip tip=\"CFCanvasTip\" />\n\t\t</>\n\t)\n}\n"],"sourceRoot":""}