{"version":3,"sources":["components/ClientListing/_config/styles.ts","components/ClientListing/_partials/NoClients.tsx","components/ClientListing/_config/utilities.ts","components/ClientListing/_partials/ClientList.tsx","components/ClientListing/_partials/ImportClient.tsx","components/ClientListing/_config/machine.ts","modules/save-blob/index.ts","modules/export-client/index.ts","components/ClientListing/_partials/ExportClient.tsx","components/ClientListing/ClientListing.tsx","content/CoachingConversation/styles.ts","content/CoachingConversation/Prepare.tsx","content/CoachingConversation/Coaching.tsx","content/CoachingConversation/HealthCheck.tsx","content/CoachingConversation/DiscoverTopics.tsx","content/CoachingConversation/CFC.tsx","content/CoachingConversation/ChangeLevers.tsx","content/CoachingConversation/ActionChecklist.tsx","pages/client-list.tsx","components/SnackbarMsg/SnackbarMsg.tsx","content/tips lazy /^/.//.*$/ groupOptions: {} namespace object","components/PageTip/_config/style.ts","components/PageTip/_partials/AsyncTip.tsx","components/PageTip/PageTip.tsx","components/SectionTitle/_config/styles.ts","components/SectionTitle/SectionTitle.tsx","data/healthChecks/HealthCheckLogic.ts","components/IconDeleteButton/IconDeleteButtonwDialog.tsx"],"names":["useCLStyles","makeStyles","theme","button","breakpoints","up","marginLeft","spacing","down","marginTop","actions","display","justifyContent","flexDirection","NoClients","CardContent","Typography","variant","to","PublicRoutes","Home","deleteClientRelatedData","client","a","ClientUseCase","delete","HealthCheckUseCase","deleteByClient","ActionChecklistUseCase","ActionPriorityUseCase","ActionNotesUseCase","CFCUseCase","ClientList","store","state","clients","currentClient","dispatch","showSnackbar","useState","generateKey","key","ACDispatch","useContext","ActionChecklistContext","handleChange","console","log","id","type","ClientActionTypes","ChangeCurrentClient","payload","name","handleDelete","e","preventDefault","clientsCopy","clone","databaseDataDeleted","Error","message","length","removeStorageClient","emptyClientValue","syncClientsWithDb","syncWithDatabase","checklists","priority","notes","ActionChecklistActionTypes","UpdateDatabaseSync","data","List","map","idx","ListItem","constructKey","className","ListItemText","primary","ListItemSecondaryAction","isClientSelected","Tooltip","title","IconButton","onClick","IconDeleteButtonwDialog","ImportClient","dialogOpen","setDialogOpen","Button","startIcon","open","onClose","ClientListingMachine","Machine","initial","states","loading","on","IS_EMPTY","HAS_DATA","empty","saveBlob","blob","filename","navigator","msSaveBlob","blobUrl","URL","createObjectURL","link","document","createElement","setAttribute","body","appendChild","dispatchEvent","MouseEvent","bubbles","cancelable","view","window","removeChild","exportFilter","table","value","hasProperty","clientId","exportData","db","exportDB","filter","getDataAsJSON","readFile","text","json","JSON","parse","constructExportPayload","ClientDB","clientData","HealthCheckDB","healthData","ActionChecklistDB","checklistData","CFCDB","cfcData","res","ClientDatabase","HealthCheckDatabase","ActionChecklistDatabase","CFCDatabase","ExportClient","findById","dbClient","Blob","stringify","replace","toLowerCase","useStyles","box","alignItems","btn","marginRight","width","ExportClientButton","processing","setProcessing","cls","exportClient","useCallback","Box","disabled","color","ClientListing","clientStore","ClientContext","clientSynced","useMachine","send","styles","msg","snackbar","setSnackbar","severity","handleClose","event","reason","useEffect","renderWithMachine","Divider","SnackbarMsg","Loading","SectionTitle","component","Card","Spacer","space","triggerText","size","padding","list","listStyle","paddingLeft","paddingTop","paddingBottom","embed","minHeight","border","Prepare","ExpandableNav","defaultExpanded","Coaching","CardHeader","CardMedia","src","CardActions","href","aria-label","target","rel","HealthCheck","DiscoverTopics","CFC","ChangeLevers","ActionChecklist","Grid","container","item","xs","sm","md","PageTip","tip","autoHideDuration","anchorOrigin","vertical","horizontal","action","fontSize","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","code","ids","keys","Object","module","exports","usePageTipStyles","root","position","left","bottom","icon","drawer","maxWidth","closeBox","marginBottom","borderBottom","borderBottomColor","palette","grey","borderBottomStyle","AsyncTip","loadable","props","fallback","style","drawerOpen","setDrawerOpen","toggleDrawer","KeyboardEvent","Fab","Drawer","anchor","classes","paper","useSTStyles","fontWeight","typography","h5","children","healthChecks","this","database","transaction","where","first","equals","toArray","ILogicLayer","onDialogClose","onCancel","onConfirm"],"mappings":"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","file":"static/js/34.f86d2a61.chunk.js","sourcesContent":["/* eslint-disable import/prefer-default-export */\nimport { makeStyles } from \"@material-ui/core\"\n\n// Client listing styles\nexport const useCLStyles = makeStyles((theme) => ({\n\tbutton: {\n\t\t[theme.breakpoints.up(\"sm\")]: {\n\t\t\tmarginLeft: theme.spacing(2),\n\t\t},\n\t\t[theme.breakpoints.down(\"sm\")]: {\n\t\t\tmarginLeft: 0,\n\t\t\tmarginTop: theme.spacing(2),\n\t\t},\n\t},\n\tactions: {\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"flex-end\",\n\t\t[theme.breakpoints.down(\"sm\")]: {\n\t\t\tflexDirection: \"column\",\n\t\t},\n\t},\n}))\n","import React, { ReactElement } from \"react\"\nimport { CardContent, Typography } from \"@material-ui/core\"\nimport { Link } from \"react-router-dom\"\nimport { PublicRoutes } from \"../../../util/routes/routes\"\n\nconst NoClients = (): ReactElement => {\n\treturn (\n\t\t<CardContent>\n\t\t\t<Typography variant=\"h6\">No clients found</Typography>\n\t\t\t<Typography>\n\t\t\t\tYou are able to import previously exported clients or go{\" \"}\n\t\t\t\t<Link to={PublicRoutes.Home}>Home</Link> to read additional information\n\t\t\t</Typography>\n\t\t</CardContent>\n\t)\n}\n\nexport default NoClients\n","import { IClientState } from \"../../../state/client/client-outline\"\nimport { ClientDataStruct, ClientId } from \"../../../data/_config/shape\"\nimport ClientUseCase from \"../../../data/client/ClientLogic\"\nimport HealthCheckUseCase from \"../../../data/healthChecks/HealthCheckLogic\"\nimport ActionChecklistUseCase from \"../../../data/ActionChecklist/ChecklistLogic\"\nimport ActionPriorityUseCase from \"../../../data/ActionChecklist/PriorityLogic\"\nimport ActionNotesUseCase from \"../../../data/ActionChecklist/NotesLogic\"\nimport CFCUseCase from \"../../../data/CFC/CFCLogic\"\n\n/**\n * Checks if the store contains any clients\n *\n * @param {IClientState} store\n * @returns boolean\n */\nexport const hasClients = ({ state: { clients } }: IClientState): boolean => {\n\treturn clients.length !== 0\n}\n\n/**\n * Checks if the current client is selected\n *\n * @param {ClientDataStruct|undefined} currentClient currently selected client\n * @param {number} id client id to compare to the current client\n * @returns {boolean}\n */\nexport const isClientSelected = (\n\tcurrentClient: ClientDataStruct | undefined,\n\tid = \"\"\n): boolean => {\n\treturn (currentClient && currentClient.id === id) || false\n}\n\nexport const deleteClientRelatedData = async (\n\tclient: ClientId\n): Promise<boolean | Error> => {\n\ttry {\n\t\t// delete client data from ClientDB\n\t\tawait ClientUseCase.delete(client)\n\t\t// delete client data from HealthCheckDB\n\t\tawait HealthCheckUseCase.deleteByClient(client)\n\t\t// delete client data from ActionChecklistDB\n\t\tawait ActionChecklistUseCase.deleteByClient(client)\n\t\tawait ActionPriorityUseCase.deleteByClient(client)\n\t\tawait ActionNotesUseCase.deleteByClient(client)\n\t\t// delete client data from CFCDB\n\t\tawait CFCUseCase.deleteByClient(client)\n\n\t\treturn true\n\t} catch (e) {\n\t\treturn e\n\t}\n}\n","import React, { ReactElement, useState, MouseEvent, useContext } from \"react\"\nimport {\n\tList,\n\tListItem,\n\tListItemText,\n\tListItemSecondaryAction,\n\tIconButton,\n\tTooltip,\n} from \"@material-ui/core\"\nimport { clone } from \"lodash-es\"\nimport VisibilityIcon from \"@material-ui/icons/Visibility\"\nimport { generateKey, constructKey } from \"../../../util/lists/key\"\nimport { ClientActionTypes } from \"../../../state/client/client-outline\"\nimport { IClientListProps } from \"../_config/shape\"\nimport { isClientSelected, deleteClientRelatedData } from \"../_config/utilities\"\nimport { ClientDataStruct, ClientId } from \"../../../data/_config/shape\"\nimport IconDeleteButtonwDialog from \"../../IconDeleteButton/IconDeleteButtonwDialog\"\nimport syncClientsWithDb from \"../../../data/client/syncWithDB\"\nimport {\n\tremoveStorageClient,\n\temptyClientValue,\n} from \"../../../util/localStorage/client\"\nimport ActionChecklistUseCase from \"../../../data/ActionChecklist/ChecklistLogic\"\nimport ActionPriorityUseCase from \"../../../data/ActionChecklist/PriorityLogic\"\nimport ActionNotesUseCase from \"../../../data/ActionChecklist/NotesLogic\"\nimport { ActionChecklistContext } from \"../../../state/action-checklist\"\nimport { ActionChecklistActionTypes } from \"../../../state/action-checklist/shape\"\n\n/**\n * Renders a list of current clients with the ability to change\n * which client is being edited\n *\n * @returns ReactElement\n */\nconst ClientList = ({\n\tstore: {\n\t\tstate: { clients, currentClient },\n\t\tdispatch,\n\t},\n\tshowSnackbar,\n}: IClientListProps): ReactElement => {\n\tconst [key] = useState(generateKey())\n\tconst { dispatch: ACDispatch } = useContext(ActionChecklistContext)\n\n\t/**\n\t * Changes the current client selected for editing\n\t *\n\t * @param {ChangeEvent<HTMLInputElement>} event Event created by the radio change\n\t * @returns void\n\t */\n\tconst handleChange = (client: ClientDataStruct) => (): void => {\n\t\tconsole.log(client)\n\t\tif (client?.id) {\n\t\t\tdispatch({\n\t\t\t\ttype: ClientActionTypes.ChangeCurrentClient,\n\t\t\t\tpayload: client.id,\n\t\t\t})\n\n\t\t\tshowSnackbar(`You are now managing ${client.name}`, \"success\")\n\t\t}\n\t}\n\n\t/**\n\t * Deletes all the clients data\n\t *\n\t * @param {ClientId|undefined} client\n\t * @returns Promise<void>\n\t */\n\tconst handleDelete = (client: ClientId | undefined) => async (\n\t\te: MouseEvent<HTMLButtonElement>\n\t): Promise<void> => {\n\t\te.preventDefault()\n\t\tif (client) {\n\t\t\tconst clientsCopy = clone(clients)\n\t\t\t// Deletes the client data across the various databases\n\t\t\tconst databaseDataDeleted = await deleteClientRelatedData(client)\n\n\t\t\tif (databaseDataDeleted instanceof Error) {\n\t\t\t\tshowSnackbar(databaseDataDeleted.message, \"error\")\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\t// Update current client if it is being deleted\n\t\t\tif (client === currentClient?.id || clientsCopy.length === 1) {\n\t\t\t\tremoveStorageClient()\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: ClientActionTypes.ChangeCurrentClient,\n\t\t\t\t\tpayload: emptyClientValue,\n\t\t\t\t})\n\t\t\t}\n\n\t\t\t// Update client context store\n\t\t\tawait syncClientsWithDb(dispatch)\n\n\t\t\t// ---\n\t\t\t// Update action checklist context store\n\t\t\tconst checklists = await ActionChecklistUseCase.syncWithDatabase()\n\t\t\tconst priority = await ActionPriorityUseCase.syncWithDatabase()\n\t\t\tconst notes = await ActionNotesUseCase.syncWithDatabase()\n\n\t\t\tACDispatch({\n\t\t\t\ttype: ActionChecklistActionTypes.UpdateDatabaseSync,\n\t\t\t\tpayload: {\n\t\t\t\t\tdata: checklists,\n\t\t\t\t\tpriority,\n\t\t\t\t\tnotes,\n\t\t\t\t},\n\t\t\t})\n\n\t\t\tshowSnackbar(\"Client data has been deleted\", \"success\")\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<List>\n\t\t\t\t{clients.map((client, idx) => (\n\t\t\t\t\t<ListItem key={constructKey(key, idx)} className=\"list-item-padded\">\n\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\tclassName=\"truncate list-item\"\n\t\t\t\t\t\t\tprimary={client.name}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ListItemSecondaryAction>\n\t\t\t\t\t\t\t{!isClientSelected(currentClient, client.id) && (\n\t\t\t\t\t\t\t\t<Tooltip title=\"Manage client\">\n\t\t\t\t\t\t\t\t\t<IconButton onClick={handleChange(client)}>\n\t\t\t\t\t\t\t\t\t\t<VisibilityIcon />\n\t\t\t\t\t\t\t\t\t\t<span className=\"MuiTypography-srOnly\">Manage client</span>\n\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<IconDeleteButtonwDialog onClick={handleDelete(client.id)} />\n\t\t\t\t\t\t</ListItemSecondaryAction>\n\t\t\t\t\t</ListItem>\n\t\t\t\t))}\n\t\t\t</List>\n\t\t</>\n\t)\n}\n\nexport default ClientList\n","import React, { ReactElement, useState } from \"react\"\nimport GetAppIcon from \"@material-ui/icons/GetApp\"\nimport { Button } from \"@material-ui/core\"\nimport { ImportClientDialog } from \"../../../content/dialog\"\n\n/**\n * Handles the functionality to import a client\n *\n * @returns ReactElement\n */\nexport default function ImportClient(): ReactElement {\n\tconst [dialogOpen, setDialogOpen] = useState(false)\n\tconst onDialogClose = (): void => setDialogOpen(false)\n\tconst onDialogOpen = (): void => setDialogOpen(true)\n\n\treturn (\n\t\t<>\n\t\t\t<Button\n\t\t\t\tvariant=\"outlined\"\n\t\t\t\tstartIcon={<GetAppIcon />}\n\t\t\t\tonClick={onDialogOpen}\n\t\t\t>\n\t\t\t\tImport data\n\t\t\t</Button>\n\t\t\t<ImportClientDialog open={dialogOpen} onClose={onDialogClose} />\n\t\t</>\n\t)\n}\n","import { Machine } from \"xstate\"\nimport { IClientListingSchema, ClientListingEvents } from \"./shape\"\n\n/**\n * Defines the state machine used for the\n * Client listing component\n *\n */\nconst ClientListingMachine = Machine<\n\tnull,\n\tIClientListingSchema,\n\tClientListingEvents\n>({\n\tkey: \"client_listing_machine\",\n\tinitial: \"loading\",\n\tstates: {\n\t\tloading: {\n\t\t\ton: {\n\t\t\t\tIS_EMPTY: \"empty\",\n\t\t\t\tHAS_DATA: \"data\",\n\t\t\t},\n\t\t},\n\t\tempty: {\n\t\t\ton: {\n\t\t\t\tHAS_DATA: \"data\",\n\t\t\t},\n\t\t},\n\t\tdata: {\n\t\t\ton: {\n\t\t\t\tIS_EMPTY: \"empty\",\n\t\t\t},\n\t\t},\n\t},\n})\n\nexport default ClientListingMachine\n","/**\n * Download a blob to the file system by creating a ghost button to trigger\n * a click\n *\n * @export\n * @param {Blob} blob\n * @param {string} filename\n */\nexport default function saveBlob(blob: Blob, filename: string): void {\n\tif (navigator.msSaveBlob) {\n\t\tnavigator.msSaveBlob(blob, filename)\n\t\treturn\n\t}\n\n\t// Convert your blob into a Blob URL (a special url that points to an object in the browser's memory)\n\tconst blobUrl = URL.createObjectURL(blob)\n\n\t// Create a link element\n\tconst link: HTMLAnchorElement = document.createElement(\"a\")\n\n\t// Set link's href to point to the Blob URL\n\tlink.setAttribute(\"href\", blobUrl)\n\tlink.setAttribute(\"download\", filename)\n\n\t// Append link to the body\n\tdocument.body.appendChild(link)\n\n\t// Dispatch click event on the link\n\t// This is necessary as link.click() does not work on the latest firefox\n\tlink.dispatchEvent(\n\t\tnew MouseEvent(\"click\", {\n\t\t\tbubbles: true,\n\t\t\tcancelable: true,\n\t\t\tview: window,\n\t\t})\n\t)\n\n\t// Remove link from body\n\tdocument.body.removeChild(link)\n}\n","import Dexie from \"dexie\"\nimport { exportDB, ExportOptions } from \"dexie-export-import\"\nimport { DexieExportJsonStructure } from \"dexie-export-import/dist/json-structure\"\nimport { ClientId } from \"../../data/_config/shape\"\nimport hasProperty from \"../../util/object/hasProperty\"\nimport readFile from \"../../util/readFile\"\nimport ClientDB from \"../../data/client/ClientDatabase\"\nimport HealthCheckDB from \"../../data/healthChecks/HealthCheckDatabase\"\nimport ActionChecklistDB from \"../../data/ActionChecklist/ActionChecklistDatabase\"\nimport CFCDB from \"../../data/CFC/CFCDatabase\"\nimport saveBlob from \"../save-blob\"\nimport ClientUseCase from \"../../data/client/ClientLogic\"\nimport { JSONDataResult, ExportClientResult } from \"../__config/shape\"\n\n/**\n * Filters out records based on the client and returns a method that is used\n * within the export options\n *\n * @param {ClientId} client\n * @returns {ExportOptions[\"filter\"]}\n */\nexport function exportFilter(client: ClientId): ExportOptions[\"filter\"] {\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\treturn (table: string, value: any): boolean => {\n\t\tif (!value) return false\n\t\t// if we're looking at the clients table, filter by the record id\n\t\tif (table === \"clients\") return value.id === client\n\t\t// Otherwise look at the clientId key\n\t\treturn hasProperty(value, \"clientId\") ? value.clientId === client : false\n\t}\n}\n\n/**\n * Exports the database data into a blob\n *\n * @export\n * @param {Dexie} db\n * @returns {Promise<Blob>}\n */\nexport async function exportData(db: Dexie, client: ClientId): Promise<Blob> {\n\tconst blob: Blob = await exportDB(db, {\n\t\tfilter: exportFilter(client),\n\t})\n\treturn blob\n}\n\n/**\n * Exports the data for a client and returns the results as json\n *\n * @export\n * @param {Dexie} db\n * @param {ClientId} client\n * @returns {(Promise<JSONDataResult>)}\n */\nexport async function getDataAsJSON(\n\tdb: Dexie,\n\tclient: ClientId\n): Promise<JSONDataResult> {\n\t// Get the exported data from the database\n\tconst blob = await exportData(db, client)\n\t// Convert the blob to raw text\n\tconst text = await readFile(blob)\n\t// return an empty array if the text is invalid\n\tif (!text || typeof text !== \"string\") return null\n\n\t// Parse and return the data\n\tconst json: DexieExportJsonStructure = JSON.parse(text)\n\treturn json\n}\n\n/**\n * Extracts all the data from the different databases and constructs the payload\n * used in the json file\n *\n * @export\n * @param {ClientId} client\n * @returns {Promise<ExportClientResult>}\n */\nexport async function constructExportPayload(\n\tclient: ClientId\n): Promise<ExportClientResult> {\n\tconst clientData = await getDataAsJSON(ClientDB, client)\n\tconst healthData = await getDataAsJSON(HealthCheckDB, client)\n\tconst checklistData = await getDataAsJSON(ActionChecklistDB, client)\n\tconst cfcData = await getDataAsJSON(CFCDB, client)\n\n\tconst res: ExportClientResult = {\n\t\tClientDatabase: clientData,\n\t\tHealthCheckDatabase: healthData,\n\t\tActionChecklistDatabase: checklistData,\n\t\tCFCDatabase: cfcData,\n\t}\n\n\treturn res\n}\n\n/**\n * Constructs and downloads the export json file\n *\n * @export\n * @param {ClientId} client\n * @returns {(Promise<true | Error>)}\n */\nexport default async function ExportClient(\n\tclient: ClientId\n): Promise<true | Error> {\n\t// Ensures that the requested client does exist in the database\n\tconst dbClient = await ClientUseCase.findById(client)\n\tif (!dbClient) {\n\t\t// eslint-disable-next-line\n\t\tthrow new Error(\"Requested client could not be found\")\n\t}\n\n\t// Get the payload and create the file blob\n\tconst payload = await constructExportPayload(client)\n\tconst blob = new Blob([JSON.stringify(payload)], {\n\t\ttype: \"application/json\",\n\t})\n\n\t// Downloads the file\n\tsaveBlob(\n\t\tblob,\n\t\t`${dbClient.name.replace(/ /g, \"-\").toLowerCase()}--exported-data.json`\n\t)\n\treturn true\n}\n","import React, { ReactElement, useCallback, useState } from \"react\"\nimport { Tooltip, Button, Box, makeStyles } from \"@material-ui/core\"\nimport PublishIcon from \"@material-ui/icons/Publish\"\nimport InfoIcon from \"@material-ui/icons/Info\"\nimport { ClientId } from \"../../../data/_config/shape\"\nimport { SnackbarMsgData } from \"../../SnackbarMsg/SnackbarMsg\"\nimport ExportClient from \"../../../modules/export-client\"\n\ntype ExportClientProps = {\n\tclient: ClientId\n\tshowSnackbar: (\n\t\tmsg: SnackbarMsgData[\"msg\"],\n\t\tseverity: SnackbarMsgData[\"severity\"]\n\t) => void\n}\n\nconst useStyles = makeStyles((theme) => ({\n\tbox: {\n\t\tdisplay: \"flex\",\n\t\talignItems: \"center\",\n\t},\n\tbtn: {\n\t\tmarginRight: theme.spacing(1),\n\t\twidth: \"100%\",\n\t},\n}))\n\n/**\n * Component used to handle exporting a clients data\n *\n * @export\n * @param {ExportClientProps} {\n * \tclient,\n * }\n * @returns {ReactElement}\n */\nexport default function ExportClientButton({\n\tclient,\n\tshowSnackbar,\n}: ExportClientProps): ReactElement {\n\tconst [processing, setProcessing] = useState(false)\n\tconst cls = useStyles()\n\n\tconst exportClient = useCallback(async () => {\n\t\tif (client !== \"\") {\n\t\t\ttry {\n\t\t\t\tsetProcessing(true)\n\t\t\t\tawait ExportClient(client)\n\t\t\t\tshowSnackbar(\"Client data has been exported\", \"success\")\n\t\t\t} catch (e) {\n\t\t\t\tshowSnackbar(e.message, \"error\")\n\t\t\t} finally {\n\t\t\t\tsetProcessing(false)\n\t\t\t}\n\t\t}\n\t}, [client, setProcessing, showSnackbar])\n\n\treturn (\n\t\t<Box className={cls.box}>\n\t\t\t<Button\n\t\t\t\tstartIcon={<PublishIcon />}\n\t\t\t\tonClick={exportClient}\n\t\t\t\tvariant=\"outlined\"\n\t\t\t\tdisabled={processing}\n\t\t\t\tclassName={cls.btn}\n\t\t\t>\n\t\t\t\tExport data\n\t\t\t</Button>\n\t\t\t<Tooltip title=\"Your file will save to your browser's automatic download location.\">\n\t\t\t\t<InfoIcon color=\"primary\" />\n\t\t\t</Tooltip>\n\t\t</Box>\n\t)\n}\n","import React, { useContext, ReactElement, useEffect, useState } from \"react\"\nimport {\n\tBox,\n\tCard,\n\tDivider,\n\tCardContent,\n\tList,\n\tListItem,\n\tListItemText,\n} from \"@material-ui/core\"\n\nimport AddIcon from \"@material-ui/icons/Add\"\nimport { useMachine } from \"@xstate/react\"\nimport { ClientContext } from \"../../state/client\"\nimport { NewClientDialog } from \"../../content/dialog\"\nimport { useCLStyles } from \"./_config/styles\"\nimport { NoClients, ClientList, ImportClient } from \"./_partials\"\nimport { IClientState } from \"../../state/client/client-outline\"\nimport ClientListingMachine from \"./_config/machine\"\nimport Loading from \"../Loading\"\nimport SectionTitle from \"../SectionTitle\"\nimport SnackbarMsg, { SnackbarMsgData } from \"../SnackbarMsg/SnackbarMsg\"\nimport Spacer from \"../Spacer\"\nimport ExportClientButton from \"./_partials/ExportClient\"\n\n/**\n * Component to render the whole Client Listing component\n * with section title, controls and the Client List\n *\n * @returns ReactElement\n */\nconst ClientListing = (): ReactElement => {\n\tconst clientStore: IClientState = useContext(ClientContext)\n\tconst {\n\t\tstate: { clientSynced, clients, currentClient },\n\t} = clientStore\n\tconst [state, send] = useMachine(ClientListingMachine)\n\tconst styles = useCLStyles()\n\tconst [snackbar, setSnackbar] = useState<SnackbarMsgData>({\n\t\topen: false,\n\t\tmsg: \"\",\n\t})\n\n\tfunction showSnackbar(\n\t\tmsg: SnackbarMsgData[\"msg\"],\n\t\tseverity: SnackbarMsgData[\"severity\"]\n\t): void {\n\t\tsetSnackbar({ ...snackbar, msg, severity, open: true })\n\t}\n\n\tfunction handleClose(\n\t\tevent: React.SyntheticEvent | React.MouseEvent,\n\t\treason?: string\n\t): void {\n\t\tif (reason && reason === \"clickaway\") {\n\t\t\treturn\n\t\t}\n\n\t\tsetSnackbar({ ...snackbar, open: false })\n\t}\n\n\t// Change the state of the component once clients are synced\n\tuseEffect(() => {\n\t\tif (clientSynced) {\n\t\t\tif (clients.length > 0) {\n\t\t\t\tsend(\"HAS_DATA\")\n\t\t\t} else {\n\t\t\t\tsend(\"IS_EMPTY\")\n\t\t\t}\n\t\t}\n\t}, [clientSynced, clients, send])\n\n\t/**\n\t * Renders components based on the component state\n\t *\n\t * @returns ReactElement\n\t */\n\tconst renderWithMachine = (type: \"list\" | \"current\"): ReactElement => {\n\t\tswitch (state.value) {\n\t\t\tcase \"data\":\n\t\t\t\tif (type === \"list\") {\n\t\t\t\t\treturn <ClientList store={clientStore} showSnackbar={showSnackbar} />\n\t\t\t\t}\n\n\t\t\t\tif (type === \"current\") {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<List>\n\t\t\t\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t\t\t\t<ListItemText className=\"truncate list-item\">\n\t\t\t\t\t\t\t\t\t\t{currentClient?.name}\n\t\t\t\t\t\t\t\t\t</ListItemText>\n\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t\t{currentClient?.id && (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<CardContent className={styles.actions}>\n\t\t\t\t\t\t\t\t\t\t<ExportClientButton\n\t\t\t\t\t\t\t\t\t\t\tclient={currentClient.id}\n\t\t\t\t\t\t\t\t\t\t\tshowSnackbar={showSnackbar}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t\t\t\t<SnackbarMsg\n\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t\t\t\t\t\t\t\t{...snackbar}\n\t\t\t\t\t\t\t\t\t\tonClose={handleClose}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</>\n\t\t\t\t\t)\n\t\t\t\t}\n\n\t\t\t\treturn <></>\n\t\t\tcase \"empty\":\n\t\t\t\treturn <NoClients />\n\t\t\tcase \"loading\":\n\t\t\tdefault:\n\t\t\t\treturn <Loading />\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Box>\n\t\t\t\t<SectionTitle component=\"h2\">Current Client</SectionTitle>\n\t\t\t\t<Card>{renderWithMachine(\"current\")}</Card>\n\t\t\t\t<Spacer space={4} />\n\t\t\t\t<SectionTitle component=\"h2\">Client List</SectionTitle>\n\t\t\t\t<Card>\n\t\t\t\t\t{renderWithMachine(\"list\")}\n\t\t\t\t\t<Divider />\n\t\t\t\t\t<CardContent className={styles.actions}>\n\t\t\t\t\t\t<ImportClient />\n\t\t\t\t\t\t<NewClientDialog\n\t\t\t\t\t\t\ttriggerText=\"Add new client\"\n\t\t\t\t\t\t\tstartIcon={<AddIcon />}\n\t\t\t\t\t\t\tclassName={styles.button}\n\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Card>\n\t\t\t</Box>\n\t\t\t{/* eslint-disable-next-line react/jsx-props-no-spreading */}\n\t\t\t<SnackbarMsg {...snackbar} onClose={handleClose} />\n\t\t</>\n\t)\n}\n\nexport default ClientListing\n","import { makeStyles } from \"@material-ui/core\"\n\nconst useStyles = makeStyles((theme) => ({\n\tbox: {\n\t\tpadding: `0 ${theme.spacing(2)}px`,\n\t},\n\tlist: {\n\t\tlistStyle: \"disc\",\n\t\tpaddingLeft: theme.spacing(2),\n\t\tpaddingTop: 0,\n\t\tpaddingBottom: 0,\n\t\t\"& ul\": {\n\t\t\tpaddingLeft: theme.spacing(3),\n\t\t},\n\t},\n\tembed: {\n\t\tminHeight: \"300px\",\n\t\tborder: \"none\",\n\t},\n}))\n\nexport default useStyles\n","import React, { ReactElement } from \"react\"\nimport { Typography, List, Box } from \"@material-ui/core\"\nimport ExpandableNav from \"../../components/ExpandableNav\"\nimport useStyles from \"./styles\"\n\nexport default function Prepare(): ReactElement {\n\tconst cls = useStyles()\n\n\treturn (\n\t\t<ExpandableNav\n\t\t\ttitle=\"Prepare for your client meeting\"\n\t\t\tdefaultExpanded={false}\n\t\t>\n\t\t\t<Box className={cls.box}>\n\t\t\t\t<List className={cls.list}>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tFamiliarise yourself with the tools in this kit.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tIdentify the tools that will be most suitable to your client.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">Ask your client to:</Typography>\n\t\t\t\t\t<List className={cls.list}>\n\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\tprepare a list of questions to ask\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\tbring the financial projections or reports for their business\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</List>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tFor an existing client, review their previous action checklist,\n\t\t\t\t\t\tcanvasses and financials.\n\t\t\t\t\t</Typography>\n\t\t\t\t</List>\n\t\t\t</Box>\n\t\t</ExpandableNav>\n\t)\n}\n","import React, { ReactElement } from \"react\"\nimport {\n\tTypography,\n\tBox,\n\tList,\n\tCard,\n\tCardHeader,\n\tCardMedia,\n\tCardActions,\n\tButton,\n} from \"@material-ui/core\"\nimport ExpandableNav from \"../../components/ExpandableNav\"\nimport useStyles from \"./styles\"\nimport Spacer from \"../../components/Spacer\"\n\nexport default function Coaching(): ReactElement {\n\tconst cls = useStyles()\n\n\treturn (\n\t\t<ExpandableNav title=\"The cash flow kit overview\" defaultExpanded={false}>\n\t\t\t<Box className={cls.box}>\n\t\t\t\t<List className={cls.list}>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tExplain the coaching steps (Discover, Apply, Plan & Action) and\n\t\t\t\t\t\ttools.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tExplain why the Four Key Questions are fundamental success factors\n\t\t\t\t\t\tfor cash flow. Refer to these questions in every step.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tUse the Health Check or review your client’s Action Checklist tasks\n\t\t\t\t\t\tto help start a conversation.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tIt isn’t necessary to complete the entire coaching kit in every\n\t\t\t\t\t\tsession.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tAs you explore the kit with your client, consider questions such as:\n\t\t\t\t\t\t<List className={cls.list}>\n\t\t\t\t\t\t\t<Typography component=\"li\">Why are you in business?</Typography>\n\t\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\t\tWhere do you see your business in 12 months?\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\t\tWhere do you see your business in 5 years?\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</Typography>\n\t\t\t\t</List>\n\n\t\t\t\t<Spacer space={4} />\n\n\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t<CardHeader title=\"What advisors think of the kit\" />\n\t\t\t\t\t<CardMedia\n\t\t\t\t\t\tclassName={cls.embed}\n\t\t\t\t\t\tcomponent=\"iframe\"\n\t\t\t\t\t\ttitle=\"What advisors think of the kit\"\n\t\t\t\t\t\tsrc=\"https://www.youtube.com/embed/z64Bc5K2TKo\"\n\t\t\t\t\t/>\n\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\thref=\"/transcripts/What-advisors-think-of-the-kit.docx\"\n\t\t\t\t\t\t\taria-label=\"Download transcript: What advisors think of the kit\"\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tDownload Transcript\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</CardActions>\n\t\t\t\t</Card>\n\t\t\t</Box>\n\t\t</ExpandableNav>\n\t)\n}\n","import React, { ReactElement } from \"react\"\nimport {\n\tTypography,\n\tBox,\n\tList,\n\tCard,\n\tCardHeader,\n\tCardMedia,\n\tCardActions,\n\tButton,\n} from \"@material-ui/core\"\nimport ExpandableNav from \"../../components/ExpandableNav\"\nimport useStyles from \"./styles\"\nimport Spacer from \"../../components/Spacer\"\n\nexport default function HealthCheck(): ReactElement {\n\tconst cls = useStyles()\n\n\treturn (\n\t\t<ExpandableNav title=\"Health Check\" defaultExpanded={false}>\n\t\t\t<Box className={cls.box}>\n\t\t\t\t<List className={cls.list}>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tThe Health Check helps you understand your clients business and\n\t\t\t\t\t\tcashflow knowledge.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tIntroduce the Health Check to your client as an opportunity to\n\t\t\t\t\t\tunderstand where they are at.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tConsider questions such as:\n\t\t\t\t\t\t<List className={cls.list}>\n\t\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\t\tAre there areas of your business that are causing you concern?\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\t\tHow have you been trying to deal with this up to now?\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\t\tWhat could you do to improve in these areas?\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tIf your client is unsure about their results, they can learn more by\n\t\t\t\t\t\tusing the Discover Topics.\n\t\t\t\t\t</Typography>\n\t\t\t\t</List>\n\n\t\t\t\t<Spacer space={4} />\n\n\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t<CardHeader title=\"Health Check coaching tips\" />\n\t\t\t\t\t<CardMedia\n\t\t\t\t\t\tclassName={cls.embed}\n\t\t\t\t\t\tcomponent=\"iframe\"\n\t\t\t\t\t\ttitle=\"Health Check coaching tips\"\n\t\t\t\t\t\tsrc=\"https://www.youtube.com/embed/C6Gduin0fJg\"\n\t\t\t\t\t/>\n\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\thref=\"/transcripts/Health Check coaching tips.docx\"\n\t\t\t\t\t\t\taria-label=\"Download transcript: Health Check coaching tips\"\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tDownload Transcript\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</CardActions>\n\t\t\t\t</Card>\n\t\t\t</Box>\n\t\t</ExpandableNav>\n\t)\n}\n","import React, { ReactElement } from \"react\"\nimport { Typography, List, Box } from \"@material-ui/core\"\nimport ExpandableNav from \"../../components/ExpandableNav\"\nimport useStyles from \"./styles\"\n\nexport default function DiscoverTopics(): ReactElement {\n\tconst cls = useStyles()\n\n\treturn (\n\t\t<ExpandableNav title=\"Discover Topics\" defaultExpanded={false}>\n\t\t\t<Box className={cls.box}>\n\t\t\t\t<List className={cls.list}>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tIntroduce Discover Topics to your client as a way to understand cash\n\t\t\t\t\t\tflow management.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tIdentify the relevant topics and add them to the Action Checklist by\n\t\t\t\t\t\tusing the Task Builder.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tUse the activities to build practical knowledge. Focus on making it\n\t\t\t\t\t\treal and relevant to your client.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tAs you explore the Discover Topics with your client, consider\n\t\t\t\t\t\tquestions such as:\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<List className={cls.list}>\n\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\tWhy do you think this topic area is relevant for your business?\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\tWhat else would you like to know about this topic area?\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\tHow are you handling this aspect of your business now?\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\tWhat could you do to change this in the future?\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</List>\n\t\t\t\t</List>\n\t\t\t</Box>\n\t\t</ExpandableNav>\n\t)\n}\n","import React, { ReactElement } from \"react\"\nimport {\n\tTypography,\n\tBox,\n\tList,\n\tCard,\n\tCardHeader,\n\tCardMedia,\n\tCardActions,\n\tButton,\n} from \"@material-ui/core\"\nimport ExpandableNav from \"../../components/ExpandableNav\"\nimport useStyles from \"./styles\"\nimport Spacer from \"../../components/Spacer\"\n\nexport default function CFC(): ReactElement {\n\tconst cls = useStyles()\n\n\treturn (\n\t\t<ExpandableNav title=\"Cash Flow Canvas\" defaultExpanded={false}>\n\t\t\t<Box className={cls.box}>\n\t\t\t\t<List className={cls.list}>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tIntroduce the Cash Flow Canvas as an opportunity to understand their\n\t\t\t\t\t\tcashflow. Use the Four Key Questions to discuss this.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tWork through regular financial commitments and other important items\n\t\t\t\t\t\tin their cash flow.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tThe canvas should draw out how their business is performing and\n\t\t\t\t\t\tidentify where they want to go.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tConsider asking questions such as:\n\t\t\t\t\t\t<List className={cls.list}>\n\t\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\t\tWhat does the Cash Flow Canvas tell you about your business?\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\t\tWhat are the items in your Cash IN or your Cash OUT that have\n\t\t\t\t\t\t\t\tthe most impact on your cash flow?\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\t\tHave you set aside an amount for your regular financial\n\t\t\t\t\t\t\t\tcommitments?\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\t\tDo you think you can take more or less out of your business\n\t\t\t\t\t\t\t\tgiven your current cash flow position?\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\t\tHow do you think you can improve your cash flow position?\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</Typography>\n\t\t\t\t</List>\n\n\t\t\t\t<Spacer space={4} />\n\n\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t<CardHeader title=\"Cash Flow Canvas coaching tips\" />\n\t\t\t\t\t<CardMedia\n\t\t\t\t\t\tclassName={cls.embed}\n\t\t\t\t\t\tcomponent=\"iframe\"\n\t\t\t\t\t\ttitle=\"Cash Flow Canvas coaching tips\"\n\t\t\t\t\t\tsrc=\"https://www.youtube.com/embed/Q8_r35mb6YU\"\n\t\t\t\t\t/>\n\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\thref=\"/transcripts/Cash Flow Canvas coaching tips.docx\"\n\t\t\t\t\t\t\taria-label=\"Download transcript: Cash Flow Canvas coaching tips\"\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tDownload Transcript\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</CardActions>\n\t\t\t\t</Card>\n\t\t\t</Box>\n\t\t</ExpandableNav>\n\t)\n}\n","import React, { ReactElement } from \"react\"\nimport {\n\tTypography,\n\tBox,\n\tList,\n\tCard,\n\tCardHeader,\n\tCardMedia,\n\tCardActions,\n\tButton,\n} from \"@material-ui/core\"\nimport ExpandableNav from \"../../components/ExpandableNav\"\nimport useStyles from \"./styles\"\nimport Spacer from \"../../components/Spacer\"\n\nexport default function ChangeLevers(): ReactElement {\n\tconst cls = useStyles()\n\n\treturn (\n\t\t<ExpandableNav title=\"Change Levers\" defaultExpanded={false}>\n\t\t\t<Box className={cls.box}>\n\t\t\t\t<List className={cls.list}>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tThe Change Levers highlight different options that improve business\n\t\t\t\t\t\tperformance\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tKeep the conversation action focused and positive.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tConsider asking questions such as:\n\t\t\t\t\t\t<List className={cls.list}>\n\t\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\t\tWhich of these actions stand out to you?\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\t\tHow do you feel about completing these actions?\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\t\tWhat do these actions look like for your business?\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\t\tHow do you think completing these actions will impact your cash\n\t\t\t\t\t\t\t\tflow?\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</Typography>\n\t\t\t\t</List>\n\n\t\t\t\t<Spacer space={4} />\n\n\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t<CardHeader title=\"Change Levers coaching tips\" />\n\t\t\t\t\t<CardMedia\n\t\t\t\t\t\tclassName={cls.embed}\n\t\t\t\t\t\tcomponent=\"iframe\"\n\t\t\t\t\t\ttitle=\"Change Levers coaching tips\"\n\t\t\t\t\t\tsrc=\"https://www.youtube.com/embed/_xYdO-STzYI\"\n\t\t\t\t\t/>\n\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\thref=\"/transcripts/Change Levers coaching tips.docx\"\n\t\t\t\t\t\t\taria-label=\"Download transcript: Change Levers coaching tips\"\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tDownload Transcript\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</CardActions>\n\t\t\t\t</Card>\n\t\t\t</Box>\n\t\t</ExpandableNav>\n\t)\n}\n","import React, { ReactElement } from \"react\"\nimport {\n\tTypography,\n\tBox,\n\tList,\n\tCard,\n\tCardHeader,\n\tCardMedia,\n\tCardActions,\n\tButton,\n} from \"@material-ui/core\"\nimport ExpandableNav from \"../../components/ExpandableNav\"\nimport useStyles from \"./styles\"\nimport Spacer from \"../../components/Spacer\"\n\nexport default function ActionChecklist(): ReactElement {\n\tconst cls = useStyles()\n\n\treturn (\n\t\t<ExpandableNav title=\"Action Checklist\" defaultExpanded={false}>\n\t\t\t<Box className={cls.box}>\n\t\t\t\t<List className={cls.list}>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tIntroduce the Action Checklist as a set of steps to improve business\n\t\t\t\t\t\tcash flow.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tExplain that putting their knowledge into action requires a clear\n\t\t\t\t\t\tplan and timeframes.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tFocus your conversation on practical actions your client can take to\n\t\t\t\t\t\tcreate change.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tStart prioritising tasks based on your client's needs.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tThe most important part of this whole process is keeping your client\n\t\t\t\t\t\taccountable for completing their actions.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tSet a follow-up date to have another conversation to review the\n\t\t\t\t\t\ttasks.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tConsider questions such as:\n\t\t\t\t\t\t<List className={cls.list}>\n\t\t\t\t\t\t\t<Typography component=\"li\">What did we discuss?</Typography>\n\t\t\t\t\t\t\t<Typography component=\"li\">What did we agree to do?</Typography>\n\t\t\t\t\t\t\t<Typography component=\"li\">Who will do what by when?</Typography>\n\t\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\t\tWho is accountable for these actions?\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\t\tHow is the Action Checklist going?\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography component=\"li\">Are you making progress?</Typography>\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</Typography>\n\t\t\t\t</List>\n\n\t\t\t\t<Spacer space={4} />\n\n\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t<CardHeader title=\"Action Checklist coaching tips\" />\n\t\t\t\t\t<CardMedia\n\t\t\t\t\t\tclassName={cls.embed}\n\t\t\t\t\t\tcomponent=\"iframe\"\n\t\t\t\t\t\ttitle=\"Action Checklist coaching tips\"\n\t\t\t\t\t\tsrc=\"https://www.youtube.com/embed/td4ReSc9Eos\"\n\t\t\t\t\t/>\n\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\thref=\"/transcripts/Action Checklist coaching tips.docx\"\n\t\t\t\t\t\t\taria-label=\"Download transcript: Action Checklist coaching tips\"\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tDownload Transcript\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</CardActions>\n\t\t\t\t</Card>\n\t\t\t</Box>\n\t\t</ExpandableNav>\n\t)\n}\n","import React, { ReactElement } from \"react\"\nimport { Typography, Grid, makeStyles, Box } from \"@material-ui/core\"\nimport { PageContainer } from \"../components/Layouts\"\nimport PageTip from \"../components/PageTip\"\nimport ClientListing from \"../components/ClientListing\"\nimport SectionTitle from \"../components/SectionTitle\"\nimport {\n\tPrepare,\n\tCoaching,\n\tCFC,\n\tHealthCheck,\n\tDiscoverTopics,\n\tChangeLevers,\n\tActionChecklist,\n} from \"../content/CoachingConversation\"\n\n/**\n * Client listing page\n *\n * @returns ReactElement\n */\nconst ClientList = (): ReactElement => {\n\treturn (\n\t\t<>\n\t\t\t<PageContainer>\n\t\t\t\t<Grid container spacing={3}>\n\t\t\t\t\t<Grid item xs={12} sm={8}>\n\t\t\t\t\t\t<SectionTitle component=\"h1\">Clients and Coaching</SectionTitle>\n\t\t\t\t\t\t<Box className=\"content-area\">\n\t\t\t\t\t\t\t<Typography>Manage and prepare your coaching.</Typography>\n\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\tRead our coaching guidance to prepare for your client. These\n\t\t\t\t\t\t\t\tmaterials will help you and your client get the most value from\n\t\t\t\t\t\t\t\tthe kit.\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\tYou can also import and export client data in your client list.\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t\t<ClientListing />\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t\t<SectionTitle component=\"h2\">Coaching Conversation</SectionTitle>\n\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t<Prepare />\n\t\t\t\t\t\t\t<Coaching />\n\t\t\t\t\t\t\t<HealthCheck />\n\t\t\t\t\t\t\t<DiscoverTopics />\n\t\t\t\t\t\t\t<CFC />\n\t\t\t\t\t\t\t<ChangeLevers />\n\t\t\t\t\t\t\t<ActionChecklist />\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</PageContainer>\n\n\t\t\t<PageTip tip=\"ClientListTips\" />\n\t\t</>\n\t)\n}\n\nexport default ClientList\n","import React, { ReactElement } from \"react\"\nimport Alert, { AlertProps } from \"@material-ui/lab/Alert\"\nimport { Snackbar, IconButton } from \"@material-ui/core\"\nimport CloseIcon from \"@material-ui/icons/Close\"\n\n// #region Interface Definitions\n/**\n * Data required for the snackbar\n * use this interface when defining the state\n *\n * @export\n * @interface SnackbarMsgData\n */\nexport interface SnackbarMsgData {\n\topen: boolean\n\tmsg: string\n\tseverity?: AlertProps[\"severity\"]\n}\n\n/**\n * Props required to be passed to the component\n *\n * @export\n * @interface SnackbarMsgProps\n * @extends {SnackbarMsgData}\n */\nexport interface SnackbarMsgProps extends SnackbarMsgData {\n\tonClose: (\n\t\tevent: React.SyntheticEvent | React.MouseEvent,\n\t\treason?: string\n\t) => void\n}\n// #endregion\n\n/**\n * Snackbar abstraction component, use this for a consistent\n * way to show messages to the user\n *\n * The component who uses this component will need to handle the\n * state of this component and pass down the props.\n *\n * See the README\n *\n * @export\n * @param {SnackbarMsgProps} {\n * \topen,\n * \tmsg,\n * \tonClose,\n * \tseverity = \"info\",\n * }\n * @returns {ReactElement}\n */\nexport default function SnackbarMsg({\n\topen,\n\tmsg,\n\tonClose,\n\tseverity = \"info\",\n}: SnackbarMsgProps): ReactElement {\n\treturn (\n\t\t<Snackbar\n\t\t\topen={open}\n\t\t\tautoHideDuration={2000}\n\t\t\tanchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n\t\t\tonClose={onClose}\n\t\t>\n\t\t\t<Alert\n\t\t\t\tseverity={severity}\n\t\t\t\tvariant=\"filled\"\n\t\t\t\taction={\n\t\t\t\t\t<IconButton size=\"small\" aria-label=\"close\" color=\"inherit\">\n\t\t\t\t\t\t<CloseIcon fontSize=\"small\" />\n\t\t\t\t\t</IconButton>\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t{msg}\n\t\t\t</Alert>\n\t\t</Snackbar>\n\t)\n}\n","var map = {\n\t\"./ActionChecklistTip\": [\n\t\t813,\n\t\t4\n\t],\n\t\"./ActionChecklistTip.tsx\": [\n\t\t813,\n\t\t4\n\t],\n\t\"./CFCanvasTip\": [\n\t\t814,\n\t\t5\n\t],\n\t\"./CFCanvasTip.tsx\": [\n\t\t814,\n\t\t5\n\t],\n\t\"./ChangeLevers\": [\n\t\t815,\n\t\t6\n\t],\n\t\"./ChangeLevers.tsx\": [\n\t\t815,\n\t\t6\n\t],\n\t\"./ClientListTips\": [\n\t\t816,\n\t\t7\n\t],\n\t\"./ClientListTips.tsx\": [\n\t\t816,\n\t\t7\n\t],\n\t\"./CoachingKitTips\": [\n\t\t817,\n\t\t8\n\t],\n\t\"./CoachingKitTips.tsx\": [\n\t\t817,\n\t\t8\n\t],\n\t\"./DiscoverTopicsTips\": [\n\t\t818,\n\t\t9\n\t],\n\t\"./DiscoverTopicsTips.tsx\": [\n\t\t818,\n\t\t9\n\t],\n\t\"./HCQuestionnaire\": [\n\t\t819,\n\t\t10\n\t],\n\t\"./HCQuestionnaire.tsx\": [\n\t\t819,\n\t\t10\n\t],\n\t\"./style\": [\n\t\t809,\n\t\t11\n\t],\n\t\"./style.ts\": [\n\t\t809,\n\t\t11\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 820;\nmodule.exports = webpackAsyncContext;","import { makeStyles } from \"@material-ui/core/styles\"\n\nconst usePageTipStyles = makeStyles((theme) => ({\n\troot: {\n\t\tposition: \"fixed\",\n\t\tleft: theme.spacing(2),\n\t\tbottom: theme.spacing(2),\n\t},\n\ticon: {\n\t\tmarginRight: theme.spacing(1),\n\t},\n\tdrawer: {\n\t\tpadding: theme.spacing(2),\n\t\tmaxWidth: \"350px\",\n\t\twidth: \"100%\",\n\t},\n\tcloseBox: {\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"space-between\",\n\t\tmarginBottom: theme.spacing(2),\n\t\tpaddingBottom: theme.spacing(2),\n\t\tborderBottom: 1,\n\t\tborderBottomColor: theme.palette.grey[500],\n\t\tborderBottomStyle: \"solid\",\n\t},\n}))\n\nexport default usePageTipStyles\n","import React from \"react\"\nimport loadable from \"@loadable/component\"\nimport Loading from \"../../Loading\"\n\n/**\n * Loadable component to dynamically render the tip content\n *\n */\nconst AsyncTip = loadable(\n\t(props: { tip: string }) => import(`../../../content/tips/${props.tip}`),\n\t{\n\t\tfallback: <Loading />,\n\t}\n)\n\nexport default AsyncTip\n","import React, { ReactElement, useState, MouseEvent } from \"react\"\nimport { Fab, Drawer, Button, Box, Typography } from \"@material-ui/core\"\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\"\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\"\nimport usePageTipStyles from \"./_config/style\"\nimport { IPageTip } from \"./_config/shape\"\nimport { AsyncTip } from \"./_partials\"\n\n/**\n * Renders a page tip tooltip at the bottom left of the page\n *\n * @param {string} {tip} File name (no extension) for the tip component\n * @returns ReactElement\n */\nconst PageTip = ({ tip }: IPageTip): ReactElement => {\n\tconst style = usePageTipStyles()\n\tconst [drawerOpen, setDrawerOpen] = useState<boolean>(false)\n\n\t/**\n\t * Toggles the state of the drawer\n\t *\n\t * @param {Boolean} open State to change the drawer to\n\t * @param {KeyboardEvent|MouseEvent<HTMLButtonElement>} event Event generated by a keypress|click\n\t */\n\tconst toggleDrawer = (open: boolean) => (\n\t\tevent: KeyboardEvent | MouseEvent<HTMLButtonElement>\n\t): void => {\n\t\tif (event instanceof KeyboardEvent) {\n\t\t\tif (\n\t\t\t\tevent.type === \"keydown\" &&\n\t\t\t\t(event.key === \"Tab\" || event.key === \"Shift\")\n\t\t\t) {\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\n\t\t// Change the state of the drawer\n\t\tsetDrawerOpen(open)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div className={style.root}>\n\t\t\t\t<Fab color=\"secondary\" onClick={toggleDrawer(true)} variant=\"extended\">\n\t\t\t\t\t<HelpOutlineIcon className={style.icon} />\n\t\t\t\t\tTips\n\t\t\t\t</Fab>\n\t\t\t</div>\n\t\t\t<Drawer\n\t\t\t\tanchor=\"left\"\n\t\t\t\topen={drawerOpen}\n\t\t\t\tonClose={toggleDrawer(false)}\n\t\t\t\tclasses={{\n\t\t\t\t\tpaper: style.drawer,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Box className={style.closeBox}>\n\t\t\t\t\t<Typography variant=\"h6\">Tips</Typography>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={toggleDrawer(false)}\n\t\t\t\t\t\tstartIcon={<HighlightOffIcon />}\n\t\t\t\t\t>\n\t\t\t\t\t\tClose\n\t\t\t\t\t</Button>\n\t\t\t\t</Box>\n\n\t\t\t\t<AsyncTip tip={tip} />\n\t\t\t</Drawer>\n\t\t</>\n\t)\n}\n\nexport default PageTip\n","import { makeStyles } from \"@material-ui/core\"\n\n// Section title styles\nconst useSTStyles = makeStyles((theme) => ({\n\ttitle: {\n\t\tfontWeight: 500,\n\t\tmarginBottom: theme.spacing(2),\n\t\t[theme.breakpoints.down(\"sm\")]: {\n\t\t\tfontSize: theme.typography.h5.fontSize,\n\t\t},\n\t},\n}))\n\nexport default useSTStyles\n","import React, { ReactElement } from \"react\"\nimport { Typography } from \"@material-ui/core\"\nimport { SectionTitleProps } from \"./_config/shape\"\nimport useSTStyles from \"./_config/styles\"\n\n/**\n * Abstraction for the Typography for a consistent heading for sections\n *\n * @param {SectionTitleProps} props Mimics the props for `<Typography>`\n * @returns ReactElement\n */\nconst SectionTitle = ({\n\tchildren,\n\tclassName,\n\t...props\n}: SectionTitleProps): ReactElement => {\n\tconst styles = useSTStyles()\n\treturn (\n\t\t<Typography\n\t\t\tvariant=\"h4\"\n\t\t\tcolor=\"textPrimary\"\n\t\t\tclassName={`${styles.title} ${className}`}\n\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t{...props}\n\t\t>\n\t\t\t{children}\n\t\t</Typography>\n\t)\n}\n\nexport default SectionTitle\n","import ILogicLayer from \"../_config/logicLayer\"\nimport HealthCheckDB from \"./HealthCheckDatabase\"\nimport {\n\tHealthCheckDataStruct,\n\tBaseHealthCheckStruct,\n\tHealthCheckId,\n\tClientId,\n} from \"../_config/shape\"\n\n/**\n * Logic implementation for the Health check database\n *\n * @class HealthCheckLogic\n * @extends {ILogicLayer<HealthCheckDataStruct, BaseHealthCheckStruct>}\n */\nclass HealthCheckLogic extends ILogicLayer<\n\tHealthCheckDataStruct,\n\tBaseHealthCheckStruct\n> {\n\t/**\n\t * Creates an instance of HealthCheckLogic.\n\t *\n\t * @memberof HealthCheckLogic\n\t */\n\tconstructor() {\n\t\tsuper(HealthCheckDB, HealthCheckDB.healthChecks)\n\t}\n\n\t/**\n\t * Finds a health check by the id and clientId\n\t *\n\t * @param {HealthCheckId} id\n\t * @param {ClientId} clientId\n\t * @returns {Promise<HealthCheckDataStruct>}\n\t * @memberof HealthCheckLogic\n\t */\n\tpublic findByClientId(\n\t\tid: HealthCheckId,\n\t\tclientId: ClientId\n\t): Promise<HealthCheckDataStruct | undefined> {\n\t\treturn this.database.transaction(\"r\", this.table.name, () => {\n\t\t\treturn this.table.where({ id, clientId }).first()\n\t\t})\n\t}\n\n\t/**\n\t * Finds all the health checks for a given client\n\t *\n\t * @param {ClientId} clientId\n\t * @returns {Promise<HealthCheckDataStruct[]>}\n\t * @memberof HealthCheckLogic\n\t */\n\tpublic findClientHealthChecks(\n\t\tclientId: ClientId\n\t): Promise<HealthCheckDataStruct[]> {\n\t\treturn this.database.transaction(\"r\", this.table.name, () => {\n\t\t\treturn this.table.where(\"clientId\").equals(clientId).toArray()\n\t\t})\n\t}\n}\n\n// Creates a instance of the logic class and exports the instance\nconst HealthCheckUseCase = new HealthCheckLogic()\n\nexport default HealthCheckUseCase\n","import React, { ReactElement, MouseEvent, useState } from \"react\"\nimport { ButtonProps } from \"./IconDeleteButton\"\nimport IconDeleteButton from \".\"\nimport ConfirmDialogue from \"../ConfirmDialogue\"\n\n/**\n * Icon delete button with a confirm dialog component\n *\n * @export\n * @param {ButtonProps} {\n * \tonClick,\n * }\n * @returns {ReactElement}\n */\nexport default function IconDeleteButtonwDialog({\n\tonClick,\n}: ButtonProps): ReactElement {\n\tconst [dialogOpen, setDialogOpen] = useState<boolean>(false)\n\n\t/**\n\t * Closes the dialog\n\t *\n\t */\n\tfunction onDialogClose(): void {\n\t\tsetDialogOpen(false)\n\t}\n\n\t/**\n\t * Performs onClick prop function\n\t *\n\t * @param {MouseEvent<HTMLButtonElement>} e\n\t */\n\tfunction onDialogConfirm(e: MouseEvent<HTMLButtonElement>): void {\n\t\tonClick(e)\n\t\tonDialogClose()\n\t}\n\n\t/**\n\t * Opens the dialog\n\t *\n\t * @param {MouseEvent<HTMLButtonElement>} e\n\t */\n\tfunction triggerDialog(e: MouseEvent<HTMLButtonElement>): void {\n\t\te.preventDefault()\n\t\tsetDialogOpen(true)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<IconDeleteButton onClick={triggerDialog} />\n\t\t\t<ConfirmDialogue\n\t\t\t\topen={dialogOpen}\n\t\t\t\tonClose={onDialogClose}\n\t\t\t\tonCancel={onDialogClose}\n\t\t\t\tonConfirm={onDialogConfirm}\n\t\t\t>\n\t\t\t\tAre you sure you want to remove this item?\n\t\t\t</ConfirmDialogue>\n\t\t</>\n\t)\n}\n"],"sourceRoot":""}