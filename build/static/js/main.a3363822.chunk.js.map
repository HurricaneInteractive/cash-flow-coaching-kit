{"version":3,"sources":["data/ActionChecklist/_config/utilities.ts","state/client/useCurrentClient.tsx","data/_config/logicLayer.ts","util/routes/routes.ts","components/Navbar/_config/style.ts","util/localStorage/client.ts","state/CFC/shape.ts","state/client/client-context.tsx","data/client/ClientDatabase.ts","data/CFC/CFCDatabase.ts","data/ActionChecklist/PriorityLogic.ts","components/Loading/_config/styles.ts","components/Loading/Loading.tsx","state/CFC/context.tsx","data/client/ClientLogic.ts","components/DescriptiveMoneyInput/__config/styles.ts","components/Logo/Logo.tsx","util/reduce/math.ts","data/CFC/CFCLogic.ts","data/ActionChecklist/ChecklistLogic.ts","data/healthChecks/HealthCheckDatabase.ts","util/strings/concatStr.ts","components/Navbar/_partials/NavigationLinks.tsx","components/Navbar/Primary/PrimaryNavbar.tsx","components/Navbar/Secondary/SecondaryNavbar.tsx","components/Navbar/Public/_config/data.ts","components/Navbar/Public/PublicNavbar.tsx","components/ExpandableNav/_config/styles.ts","components/ExpandableNav/ExpandableNav.tsx","util/lists/key.ts","util/dates/index.ts","util/object/hasProperty.ts","util/strings/upperCaseFirst.ts","components/SelectField/SelectField.tsx","components/CFC/CanvasType.tsx","components/CFC/CanvasTimeFrame.tsx","data/client/syncWithDB.ts","components/DateRange/__partials/SinglePicker.tsx","components/DateRange/DateRange.tsx","components/CFC/UseCustomTitle.tsx","components/CFC/ConfigPanel.tsx","components/Navbar/Primary/_config/styles.ts","components/Navbar/Primary/_config/data.ts","components/Navbar/Secondary/_config/data.ts","components/Logout/Logout.tsx","components/ShowMeHow/ShowMeHow.tsx","components/MoneyInput/MoneyInput.tsx","util/routes/checkIfPublic.ts","components/Navbar/Mobile/MobileNavbar.tsx","theme/mui/themes.ts","util/routes/routeTheming.ts","components/Layouts/PrivatePage/PrivatePage.tsx","components/Layouts/PageContainer/_config/styles.ts","components/Layouts/PageContainer/PageContainer.tsx","components/CFC/OpeningBalance.tsx","components/ComputedPanels/ComputedPanels.tsx","components/CFC/CashSurplus.tsx","components/CFC/AvailableToSpend.tsx","components/CFC/CanvasTitle.tsx","components/CFC/CashToOwner.tsx","components/CFC/ClosingBalance.tsx","components/CFC/CashBalance.tsx","components/CFC/IncomeTax.tsx","components/CFC/FallingBehind.tsx","components/CFC/Debtors.tsx","components/CFC/Creditors.tsx","components/CFC/Assets.tsx","components/CFC/Loans.tsx","components/CFC/Stock.tsx","components/CFC/FormHeader.tsx","components/CFC/FormActions.tsx","components/CFC/FormItem.tsx","components/CFC/RepeaterForm.tsx","components/CFC/CFCFourQuestions.tsx","util/money/formatting.ts","util/filters/ByGSTApplicable.ts","util/money/gst.ts","state/CFC/accumulators.ts","components/HealthCheck/_config/data.ts","state/action-checklist/context.tsx","state/action-checklist/actions/changeHideCompleted.ts","state/action-checklist/actions/updateDatabaseSync.ts","state/action-checklist/actions/addNewActionItem.ts","state/action-checklist/actions/updateActionItem.ts","state/action-checklist/actions/updatePriorityOrder.ts","util/filters/ByEquals.ts","state/action-checklist/actions/removeActionItem.ts","state/action-checklist/actions/addNote.ts","state/action-checklist/actions/updateNote.ts","state/action-checklist/actions/removeNote.ts","state/action-checklist/actions/bulkAddActionItems.ts","state/action-checklist/reducer.ts","state/action-checklist/provider.tsx","data/ActionChecklist/NotesLogic.ts","components/HealthCheck/_config/utilities.ts","util/filters/ByActionContainer.ts","components/IconDeleteButton/IconDeleteButton.tsx","components/Forms/CFC/__config/machine.ts","data/client/addClient.ts","components/Forms/NewClient/NewClientForm.tsx","content/dialog/NewClientDialog.tsx","components/Forms/CFC/inPlanOrForecast.ts","content/dialog/CopyCanvasDialog.tsx","modules/import-client/index.ts","content/dialog/ImportClientDialog.tsx","components/ConfirmDialogue/ConfirmDialogue.tsx","components/HealthCheck/FourQuestions/_config/styles.ts","components/CFC/Super.tsx","components/CFC/PayG.tsx","components/Forms/CFC/changeDate.ts","components/CFC/__config/utilities.ts","components/CFC/DataNotFound.tsx","util/array/findObjectIndexByValue.ts","components/Forms/CFC/createURLParams.ts","util/readFile/index.ts","components/DescriptiveMoneyInput/DescriptiveMoneyInput.tsx","util/filters/ById.ts","pages/index.tsx","components/Routing/Public/PublicRoutesWrapper.tsx","state/CFC/reducer.tsx","state/CFC/actions/setDuplicateError.ts","state/CFC/actions/setInvalidDateError.ts","state/CFC/actions/setQuestionValues.ts","state/CFC/actions/setCompareCanvases.ts","state/CFC/actions/setCopyCanvasActive.ts","state/CFC/provider.tsx","components/Routing/Private/PrivateRoutesWrapper.tsx","components/SkipToContent/SkipToContent.tsx","components/Routing/Router.tsx","App.tsx","serviceWorker.ts","index.tsx","components/Spacer/index.ts","state/client/client-outline.ts","state/client/actions/addClient.ts","state/client/actions/bulkAdd.ts","state/client/actions/changeCurrentClient.ts","state/client/actions/updateClientSynced.ts","state/client/actions/removeClient.ts","state/client/actions/changeLastViewedHC.ts","state/client/client-reducer.ts","state/client/client-provider.tsx","components/CFC/__config/styles.ts","data/ActionChecklist/ActionChecklistDatabase.ts","state/action-checklist/shape.ts","components/Spacer/Spacer.tsx"],"names":["findByClientAndContainer","actionContainer","clientId","db","table","transaction","where","toArray","newChecklistItem","container","description","completed","reviewBy","Date","newPriorityItem","order","newNotesItem","notes","bulkAddChecklists","items","priorityId","a","ActionPriorityUseCase","findById","priority","ActionChecklistUseCase","bulkPut","ids","newOrder","concat","console","log","uniq","update","completedItems","map","item","idx","id","useCurrentClient","useContext","ClientContext","state","currentClient","clientSynced","ILogicLayer","database","data","this","name","add","uuidv4","equals","delete","defaultCreate","defaultSync","defaultDelete","defaultUpdate","addItems","reduce","acc","cur","bulkAdd","allKeys","putItems","hasProperty","get","toCollection","last","PrivateRoutes","PublicRoutes","routeVarReplacement","route","replacements","s","rep","replace","toString","useSharedNavStyles","makeStyles","root","flexGrow","box","display","justifyContent","button","textTransform","logoBox","small","publicLogo","color","emptyClientValue","setStorageClient","window","localStorage","setItem","getStorageClient","getItem","removeStorageClient","removeItem","CFCActionTypes","defaultClientState","clients","lastViewedHC","dispatch","createContext","ClientDB","applyMigrations","replaceIdsWithStrings","version","stores","modify","client","Dexie","CFCDB","canvases","canvas","ActionChecklistDB","useLoadingStyles","theme","paddingTop","spacing","paddingBottom","Loading","styles","Box","className","CircularProgress","defaultCFCState","duplicateError","invalidDateError","copyCanvasActive","questionValues","one","two","three","four","undefined","canvasItemUpdater","setCanvasItemUpdater","CFCContext","ClientUseCase","useStyles","props","flexDirection","stacked","height","fullHeight","breakpoints","down","alignItem","type","paddingRight","marginBottom","fontWeight","typography","fontWeightRegular","fontSize","mini","body1","h6","palette","grey","moneyInput","up","maxWidth","marginTop","alignItems","img","marginRight","link","textDecoration","text","primary","pxToRem","position","width","padding","margin","overflow","clip","whiteSpace","borderWidth","Logo","to","cls","src","alt","Typography","variant","component","numOrZero","val","num","parseInt","isNaN","sum","x","minusBy","divideBy","pipe","fns","v","f","CFCUseCase","count","timeframe","canvasType","canvasTimeFrame","actionItems","HealthCheckDB","healthChecks","healthCheck","concatStr","RouteWithChildren","childRoutes","buttonProps","React","useState","anchorEl","setAnchorEl","handleClose","Button","aria-controls","aria-haspopup","RouterLink","onClick","event","preventDefault","currentTarget","endIcon","title","Menu","keepMounted","open","Boolean","onClose","MenuItem","subMenuTitle","Divider","child","key","NavigationRoutes","routes","generateKey","useTheme","children","constructKey","startIcon","Icon","activeStyle","fontWeightBold","PrimaryNavbar","sharedStyle","usePrimaryStyles","AppBar","Toolbar","Grid","sm","md","lg","clientGridItem","clientCaption","clientName","Home","Logout","SecondaryNavbar","navRoutes","useMemo","HealthCheckSummary","ShowMeHow","ClientList","RecentActorsIcon","PublicNavbar","hasClients","useExpandableNavStyles","details","paddingLeft","summary","subHeading","caption","memo","defaultExpanded","reactourLabel","ExpansionPanel","TransitionProps","unmountOnExit","data-reactour","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","getTime","newTimestamp","calculatedEndDate","start","addWeeks","addMonths","addYears","obj","prop","Object","prototype","hasOwnProperty","call","upperFirst","lower","c","toUpperCase","label","value","onChange","options","FormControl","fullWidth","InputLabel","Select","labelId","opt","canvasTypeOptions","canvasTimeFrameOptions","syncClientsWithDb","syncWithDatabase","ClientActionTypes","BulkAdd","payload","currentStorageClient","filtered","filter","filterById","ChangeCurrentClient","UpdateClientSynced","dateHighlight","borderColor","main","borderStyle","compare","onOpen","compareDay","minDate","curStyles","useDayStyles","customCls","disableToolbar","inputVariant","date","format","renderDay","day","selectedDate","isInCurrentMonth","dayComponent","isSameDay","cloneElement","aria-label","KeyboardButtonProps","inputProps","separator","lineHeight","DateRange","startDate","endDate","end","setOpen","classes","openStart","useCallback","openEnd","onDateChange","useEffect","utils","DateFnsUtils","UseCustomTitle","useCustom","changeCheck","useCustomTitleStyles","TextField","textField","InputLabelProps","htmlFor","checkboxRoot","FormControlLabel","control","Checkbox","checked","Tooltip","divider","DuplicateCanvasError","Alert","severity","Panel","canvasTimeframeValue","canvasTypeValue","customTitle","useCustomTitle","useParams","fetchPossibleDups","performDupFind","canvasEndDate","canvasStartDate","canvasTitle","dup","ChangeDuplicateError","ChangeInvalidDateError","isValid","xs","CanvasType","CanvasTimeFrame","wrapped","showDuplicateError","wrapperCls","useInputWrapper","wrapper","Spacer","SessionFiles","DescriptionIcon","CoachingKit","HealthCheckQuiz","DiscoverTopics","CFC","ChangeLevers","ActionChecklist","createStyles","backdrop","zIndex","drawer","loading","setLoading","exitApplication","close","location","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","disabled","autoFocus","Backdrop","triggerCallback","useLocation","show","setShow","defer","elem","document","getElementById","triggerTour","click","useMimic","setUseMimic","error","setError","input","useRef","InputProps","startAdornment","InputAdornment","endAdornment","min","max","step","ref","placeholder","e","inputVal","target","startsWith","length","match","onBlur","onFocus","current","setSelectionRange","onMouseUp","formatNumber","helperText","checkIfPublic","values","indexOf","pathname","toolbar","logo","clientBox","minWidth","childList","marginLeft","borderBottom","MobileNavbar","primaryStyle","closeDrawer","renderRoutes","ListItem","NavLink","ListItemIcon","ListItemText","List","IconButton","edge","orientation","flexItem","Drawer","anchor","paper","secondaryRoutes","primaryRoutes","style","defaultTheme","createMuiTheme","indigo","secondary","applyTheme","green","discoverTheme","purple","planActionTheme","lightBlue","settingsTheme","deepOrange","A700","applyThemeRoutes","CFCCompare","CFCEdit","CFCListing","discoverThemeRoutes","DTTrackingPerformance","DTSellingClosingSuccession","DTRecordKeeping","DTPlanningFinanicalCommitments","DTPlanningBusiness","DTManagingCashFlow","DTFundingBusiness","HealthCheckList","planActionThemeRoutes","settingsThemeRoutes","determineTheme","path","desktop","mobile","PrivatePage","history","useHistory","push","ThemeProvider","usePCStyles","PageContainer","rest","tabIndex","Container","OpeningBalance","DescriptiveMoneyInput","useComputedStyles","dmiCls","computedCls","CashSurplus","addDollarSign","noTitle","comp","setComp","AddTitle","generateTitle","CashToOwner","ClosingBalance","CashBalance","cashToOwner","closingBalance","useCustomStyles","textfield","calculated","cusCls","highlight","trim","total","stock","creditors","debtors","assets","loans","totalNetAssets","ExpandableNav","Debtors","Creditors","Loans","Stock","fontWeightMedium","DescriptionSize","AmountSize","ApplyGSTSize","ActionsSize","FormActions","addItem","addDisabled","actionGridItem","index","dialogOpen","setDialogOpen","onDialogClose","MoneyInput","amount","gstApplicable","IconDeleteButton","ConfirmDialogue","onCancel","onConfirm","gst","beforeTotalChild","removeFormItem","isAddDisabled","findIndex","body","mobileNotice","fontStyle","form","formInner","tooltipContent","valueText","questionTwo","content","background","orange","top","left","CFCFourQuestions","useFourQsStyles","list","fourQuestionsContent","listItem","listItemFirst","listItemText","vals","getValueText","toTwoDecimal","Number","parseFloat","toFixed","removeTrailingZeros","re","RegExp","n","GSTApplicable","reject","res","calculateGST","getKeyValue","k","calcCashFlowGST","Math","round","calcCashFlowGSTTotal","removeGST","calcCashFlowTotal","calcCashFlowNonGSTTotal","calcTotalCashOut","paygWithholding","superAmount","cashOutItems","calcCashSurplus","cashInItems","calcIncomeTaxPer","incomeTax","calcAvailableToSpend","openingBalance","calcClosingBalance","calcTotalNetAssets","additionalQuestionsOptions","positive","negative","neutral","questions","questionOptionsMap","question","learnMore","answerTheming","EmojiEmotionsOutlinedIcon","answer","SentimentVeryDissatisfiedIcon","red","SentimentDissatisfiedIcon","defaultActionChecklistState","hideCompleted","databaseSyced","checklistCollection","ActionChecklistContext","changeHideCompleted","updateDatabaseSync","addNewActionItem","checklist","pID","newPriority","collection","updateActionItem","newChecklist","checklists","updatePriorityOrder","filterByEquals","removeActionItem","targetId","addNote","updateNote","newNotes","removeNote","filteredNotes","bulkAddActionItem","additionalOrders","arr","priorities","find","appendOrCreatePriority","ActionChecklistReducer","action","ActionChecklistActionTypes","ChangeHideCompleted","UpdateDatabaseSync","AddNewActionItem","UpdateActionItem","UpdatePriorityOrder","RemoveActionItem","AddNotes","UpdateNotes","RemoveNote","BulkAddActionItems","createChecklistIfNeeded","curData","curPriority","curNotes","filterByActionContainer","newItem","create","priorityWithItem","dataWithItem","ActionChecklistProvider","useReducer","Promise","all","findByClient","ActionNotesUseCase","then","response","CIA","COA","completeSyncing","Provider","put","getOptionByAnswer","findObjectIndexByValue","q","fetchMachine","Machine","initial","states","on","RESOLVE","REJECT","success","failure","RETRY","addClient","newclient","AddClient","NewClientForm","closeDialog","characters","setCharacters","useFormik","initialValues","businessName","validate","errors","onSubmit","resetForm","hasError","noValidate","autoComplete","handleSubmit","setFieldValue","useNCDStyles","NewClientDialog","triggerText","size","aria-labelledby","cb","inPlanOrForecast","CopyCanvasDialog","useMachine","stateMachine","changeState","setUseCustomTitle","canvasData","setCanvasData","isDuplicate","setIsDuplicate","formValues","oldType","createdAt","cleaned","omit","newCanvasId","query","createURLParams","setValues","handleChange","fetchCanvasData","isDup","checkDuplicate","changeDateValue","changeDate","DataNotFound","renderForStateMachine","loadBlobAsJSON","blob","readFile","file","Error","json","JSON","parse","message","validateJSONData","keys","isEqual","i","formatName","importToDatabase","Blob","stringify","importInto","overwriteValues","overwriteClientIds","newId","set","newPriorityIds","cashInActions","cashOutActions","planningBusiness","planningCommitments","funding","recordKeeping","managing","tracking","transition","forEach","dataArr","dIdx","rows","row","rIdx","tableName","ImportClient","overwrite","promises","ClientDatabase","resolve","HealthCheckDatabase","ActionChecklistDatabase","CFCDatabase","filename","fileactions","result","importClientMachine","idle","FETCH","databaseConfig","successContent","isfalse","icon","RemoveCircleOutlineIcon","istrue","CheckCircleOutlineIcon","iserror","HighlightOffIcon","ImportClientDialog","machine","send","errorMsg","setErrorMsg","setResponse","setFile","dupClient","setDupClient","setOverwrite","checkForExistingClient","possibleClient","startImporting","RetryButton","FileUpload","accept","files","FileActions","ShowFailure","ShowSuccess","config","space","overwriteOnChange","DialogBody","Switch","confirmText","cancelText","Children","borderTop","border","answerIconRoot","Super","PayG","reduceToOptions","canvasDisplayTitle","identifyIfDuplicate","dups","usingCustom","canvasId","withoutCurrentCanvas","slice","findPossibleDuplicates","calcQuestionOne","cashSurplus","calcQuestionTwo","payg","gstOnPurchases","gstOnSales","calcQuestionThree","calcQuestionFour","right","URLSearchParams","append","fr","FileReader","onerror","onloadend","readAsText","textfieldProps","useHomepageStyles","grid","buttonBox","embed","minHeight","containerIndigo","backgroundColor","containerGrey","contentText","alignJustifyContent","flexWrap","alignContent","getContrastText","blue","MainHeading","SectionTitle","Homepage","role","align","Avatar","justify","Card","CardHeader","CardMedia","CardActions","href","rel","PublicRoutesWrapper","exact","CFCReducer","setDuplicateError","setInvalidDateError","ChangeQuestionValues","setQuestionValues","ChangeCompare","leftCompare","rightCompare","setCompareCanvases","ChangeCopyCanvasActive","setCopyCanvasActive","CFCProvider","LoadableFallback","loadable","fallback","HCQuestionnaire","DTListing","CFCCanvas","HCListing","HCSummary","CanvasEdit","PrivateRoutesWrapper","SkipToContent","querySelector","focus","ScrollToTop","scrollTo","AppRouter","App","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","onbeforeunload","returnValue","newClients","changeCurrentClient","updateClientSynced","removeClient","changeLastViewedHC","ClientReducer","RemoveClient","UpdateLastViewedHC","ClientProvider","borderRadius","shape","boxShadow","shadows","highlightLeft","borderLeft","plain","useRepeaterStyles","overflowX","note","prior","o"],"mappings":"wVAuBaA,EAA2B,SACvCC,EACAC,EACAC,EACAC,GAEA,OAAOD,EAAGE,YAAY,IAAKD,GAAO,WACjC,OAAOA,EAAME,MAAM,CAAEL,kBAAiBC,aAAYK,cAWvCC,EAAmB,SAC/BN,EACAO,GAF+B,MAGH,CAC5BP,WACAD,gBAAiBQ,EACjBC,YAAa,GACbC,WAAW,EACXC,SAAU,IAAIC,OAUFC,EAAkB,SAC9BZ,EACAO,GAF8B,MAGM,CACpCP,WACAD,gBAAiBQ,EACjBM,MAAO,KAUKC,EAAe,SAC3Bd,EACAO,GAF2B,MAGM,CACjCP,WACAD,gBAAiBQ,EACjBQ,MAAO,KAaD,SAAeC,EAAtB,oC,4CAAO,WACNC,EACAC,GAFM,qBAAAC,EAAA,sEAIiBC,IAAsBC,SAASH,GAJhD,UAIAI,EAJA,gDAKgB,CAACL,GAAO,IALxB,uBAOYM,IAAuBC,QAAQP,GAP3C,cAOAQ,EAPA,OASAC,EATA,OASWJ,QATX,IASWA,OATX,EASWA,EAAUT,MAAMc,OAAOF,GACxCG,QAAQC,IAAIC,YAAKJ,IAVX,UAWAN,IAAsBW,OAAOb,EAA7B,2BACFI,GADE,IAELT,MAAOiB,YAAKJ,MAbP,eAgBAM,EAAiBf,EAAMgB,KAAI,SAACC,EAAMC,GAAP,mBAAC,eAC9BD,GAD6B,IAEhCE,GAAIX,EAAIU,QAlBH,kBAqBC,CAACH,GAAgB,IArBlB,6C,yDC9FP,oBAiBeK,IARU,WAAgD,IAAD,EAGnEC,qBAAWC,KADdC,MAGD,MAAO,CALgE,EAE7DC,cAF6D,EAE9CC,gB,8ECGXC,E,WAQd,WAAsBC,EAA2B1C,GAA2B,yBAAtD0C,WAAqD,KAA1B1C,Q,0DAazB2C,GAAsB,IAAD,OAC5C,OAAOC,KAAKF,SAASzC,YAAY,KAAM2C,KAAK5C,MAAM6C,MAAM,WACvD,OAAO,EAAK7C,MAAM8C,IAAX,aACNZ,GAAIa,eACDJ,S,oCAeiC,IAAD,OACrC,OAAOC,KAAKF,SAASzC,YAAY,IAAK2C,KAAK5C,MAAM6C,MAAM,WACtD,OAAO,EAAK7C,MAAMG,e,oCAgB6B+B,GAAyB,IAAD,OACxE,OAAOU,KAAKF,SAASzC,YAAY,KAAM2C,KAAK5C,MAAM6C,MAAM,WACvD,OAAO,EAAK7C,MAAME,MAAM,MAAM8C,OAAOd,GAAIe,c,oCAgBnBf,EAAOS,GAA2B,IAAD,OACxD,OAAOC,KAAKF,SAASzC,YAAY,KAAM2C,KAAK5C,MAAM6C,MAAM,WACvD,OAAO,EAAK7C,MAAM6B,OAAOK,EAAIS,Q,6BAajBA,GACb,OAAOC,KAAKM,cAAcP,K,yCAY1B,OAAOC,KAAKO,gB,6BAa0BjB,GACtC,OAAOU,KAAKQ,cAAclB,K,6BAabA,EAAOS,GACpB,OAAOC,KAAKS,cAAcnB,EAAIS,K,mCAUX7C,GAAmC,IAAD,OACrD,OAAO8C,KAAKF,SAASzC,YAAY,IAAK2C,KAAK5C,MAAM6C,MAAM,WACtD,OAAO,EAAK7C,MAAME,MAAM,CAAEJ,aAAYK,e,8BAYzBY,GAA2B,IAAD,OAClCuC,EAAgBvC,EAAMwC,QAAO,SAACC,EAAUC,GAC7C,OAAOD,EAAI/B,OAAJ,2BAAgBgC,GAAhB,IAAqBvB,GAAIa,mBAC9B,IAEH,OAAOH,KAAKF,SAASzC,YAAY,KAAM2C,KAAK5C,MAAM6C,MAAM,WACvD,OAAO,EAAK7C,MAAM0D,QAAcJ,EAAU,CAAEK,SAAS,S,8BAIxC5C,GAA2B,IAAD,OAClC6C,EAAgB7C,EAAMwC,QAAO,SAACC,EAAUC,GAC7C,OAAOD,EAAI/B,OAAOoC,YAAYJ,EAAK,MAAQA,EAAzB,2BAAoCA,GAApC,IAAyCvB,GAAIa,mBAC7D,IAEH,OAAOH,KAAKF,SAASzC,YAAY,KAAM2C,KAAK5C,MAAM6C,MAAM,WACvD,OAAO,EAAK7C,MAAMsB,QAAcsC,EAAU,CAAED,SAAS,S,+BAWvCzB,GAAgC,IAAD,OAC9C,OAAOU,KAAKF,SAASzC,YAAY,KAAM2C,KAAK5C,MAAM6C,MAAM,WACvD,OAAO,EAAK7C,MAAM8D,IAAI5B,Q,qCAWFpC,GAAsC,IAAD,OAC1D,OAAO8C,KAAKF,SAASzC,YAAY,KAAM2C,KAAK5C,MAAM6C,MAAM,WACvD,OAAO,EAAK7C,MAAME,MAAM,YAAY8C,OAAOlD,GAAUmD,c,6BAKtD,OAAOL,KAAK5C,MAAM+D,eAAeC,W,KAIpBvB,O,gCCvNR,IAAKwB,EA6BAC,EAnCZ,sG,SAMYD,K,4BAAAA,E,0BAAAA,E,8BAAAA,E,0CAAAA,E,wCAAAA,E,+CAAAA,E,kCAAAA,E,wBAAAA,E,gCAAAA,E,0BAAAA,E,0BAAAA,E,8BAAAA,E,oCAAAA,E,sCAAAA,E,yCAAAA,E,wCAAAA,E,iEAAAA,E,kCAAAA,E,yDAAAA,E,+CAAAA,M,cA6BAC,K,UAAAA,M,KAaL,IAAMC,EAAsB,SAClCC,EACAC,GAMA,OAJUA,EAAad,QAAO,SAACe,EAAGC,GACjC,OAAOD,EAAEE,QAAQD,EAAI,GAAIA,EAAI,MAC3BH,EAAMK,c,iCCtDV,+CAGaC,EAAqBC,aAAW,iBAAO,CACnDC,KAAM,CACLC,SAAU,GAEXC,IAAK,CACJC,QAAS,OACTF,SAAU,EACVG,eAAgB,YAEjBC,OAAQ,CACPC,cAAe,cAEhBC,QAAS,CACRJ,QAAS,OACTC,eAAgB,SAChBH,SAAU,GAEXO,MAAO,CACNP,SAAU,GAEXQ,WAAY,CACXL,eAAgB,aAChB,SAAU,CACTM,MAAO,e,iCCxBV,4IACaC,EAAmB,GAEzB,SAASC,EAAiBtD,GAChCuD,OAAOC,aAAaC,QAJF,kBAIlB,UAA2CzD,IAGrC,SAAS0D,IACf,IAAM1D,EAAKuD,OAAOC,aAAaG,QARb,mBASlB,GAAI3D,EACH,OAAOA,EAMF,SAAS4D,IACfL,OAAOC,aAAaK,WAjBF,qB,iCCoCZ,IAAKC,EA5BZ,kC,SA4BYA,K,8CAAAA,E,mDAAAA,E,8CAAAA,E,+BAAAA,E,oDAAAA,M,uCCtCZ,6CAOaC,EAAmC,CAC/C3D,MAAO,CACN4D,QAAS,GACT1D,cAAc,EACd2D,aAAc,MAEfC,SAAU,kBAAM,OAIX/D,EAAgBgE,wBAAcJ,GAErB5D,O,qECwCTiE,EAAW,I,kDApChB,aAAe,IAAD,8BACb,cAAM,mBARPJ,aAOc,EAEb,EAAKK,kBAEL,EAAKL,QAAU,EAAKlG,MAAM,WAE1B,EAAKwG,wBANQ,E,8DAkBb5D,KAAK6D,QAAQ,KAAKC,OAAO,CACxBR,QAAS,cAGVtD,KAAK6D,QAAQ,GAAGC,OAAO,CACtBR,QAAS,4B,8CAKVtD,KAAKsD,QAAQnC,eAAe4C,QAAO,SAACC,GACV,kBAAdA,EAAO1E,KACjB0E,EAAO1E,GAAP,UAAe0E,EAAO1E,Y,UA5CG2E,IAoDdP,O,qECkDTQ,EAAQ,I,kDAxFb,aAAe,IAAD,8BACb,cAAM,gBARPC,cAOc,EAEb,EAAKR,kBAGL,EAAKQ,SAAW,EAAK/G,MAAM,YAE3B,EAAKwG,wBAPQ,E,8DAkBb5D,KAAK6D,QAAQ,GAAGC,OAAO,CACtBK,SAAS,qfA2BVnE,KAAK6D,QAAQ,KAAKC,OAAO,CACxBK,SAAS,uiB,8CA8BVnE,KAAKmE,SAAShD,eAAe4C,QAAO,SAACK,GACX,kBAAdA,EAAO9E,KACjB8E,EAAO9E,GAAP,UAAe8E,EAAO9E,KAEQ,kBAApB8E,EAAOlH,WACjBkH,EAAOlH,SAAP,UAAqBkH,EAAOlH,kB,UAhGN+G,IAwGXC,O,+FC7DT5F,EAAwB,I,kDA1B7B,aAAe,uCACR+F,IAAmBA,IAAkB7F,U,qEAY3Cf,EACAP,GAEA,OAAOF,YACNS,EACAP,EACA8C,KAAKF,SACLE,KAAK5C,W,GA7BmCyC,MAqC5BvB,O,kHC1CAgG,EATUvC,aAAW,SAACwC,GAAD,MAAY,CAC/CvC,KAAM,CACLG,QAAS,OACTC,eAAgB,SAChBoC,WAAYD,EAAME,QAAQ,GAC1BC,cAAeH,EAAME,QAAQ,QCWhBE,EAVC,WACf,IAAMC,EAASN,IAEf,OACC,kBAACO,EAAA,EAAD,CAAKC,UAAWF,EAAO5C,MACtB,kBAAC+C,EAAA,EAAD,S,iCCdH,6CAGaC,EAA6B,CACzCxB,SAAU,kBAAM,MAChByB,gBAAgB,EAChBC,kBAAkB,EAClBC,kBAAkB,EAClBC,eAAgB,CACfC,IAAK,EACLC,IAAK,EACLC,MAAO,EACPC,UAAMC,GAEPC,kBAAmB,GACnBC,qBAAsB,kBAAM,OAGvBC,EAAanC,wBAAcuB,GAElBY,O,+ECETC,EAAgB,I,kDANrB,aAAe,uCACRnC,IAAUA,IAASJ,S,UAPDzD,MAcXgG,O,sDCfTC,EAAY/D,aAAW,SAACwC,GAAD,MAAY,CACxCvC,KAAM,SAAC+D,GAAD,oBACLC,cAAeD,EAAME,QAAU,SAAW,MAC1C9D,QAAS,OACT+D,OAAQH,EAAMI,WAAa,OAAS,QACnC5B,EAAM6B,YAAYC,KAAK,MAAQ,CAC/BL,cAAe,SACfM,UAAW,gBAGbC,KAAM,SAACR,GAAD,oBACL9D,SAAU,EACVuE,aAAcT,EAAME,QAAU,EAAI1B,EAAME,QAAQ,GAChDgC,aAAeV,EAAME,QAAc1B,EAAME,QAAQ,GAAlB,EAC/B,MAAO,CACNiC,WAAYnC,EAAMoC,WAAWC,kBAC7BC,SAAUd,EAAMe,KACbvC,EAAMoC,WAAWI,MAAMF,SACvBtC,EAAMoC,WAAWK,GAAGH,UAExB,SAAU,CACT1E,QAAS,QACTO,MAAO6B,EAAM0C,QAAQC,KAAK,OAE1B3C,EAAM6B,YAAYC,KAAK,MAAQ,CAC/BI,aAAc,EACdD,aAAc,KAGhBW,WAAY,SAACpB,GAAD,gCACVxB,EAAM6B,YAAYgB,GAAG,MAAQ,CAC7BC,SAAUtB,EAAME,QAAU,OAAS,QAFzB,cAIV1B,EAAM6B,YAAYC,KAAK,MAAQ,CAC/BiB,UAAW/C,EAAME,QAAQ,KALf,OAUEqB,O,iIC5CTA,EAAY/D,aAAW,SAACwC,GAAD,MAAY,CACxCvC,KAAM,CACLG,QAAS,OACToF,WAAY,UAEbC,IAAI,aACHH,SAAU,OACVlF,QAAS,QACT+D,OAAQ,OACRuB,YAAalD,EAAME,QAAQ,IAC1BF,EAAM6B,YAAYC,KAAK,MAAQ,CAC/BgB,SAAU,SAGZK,KAAM,CACLC,eAAgB,QAEjBpB,KAAK,aACJ7D,MAAO6B,EAAM0C,QAAQW,KAAKC,SACzBtD,EAAM6B,YAAYC,KAAK,MAAQ,CAC/BQ,SAAUtC,EAAMoC,WAAWmB,QAAQ,IACnCC,SAAU,WACVC,MAAO,MACP9B,OAAQ,MACR+B,QAAS,EACTC,OAAQ,OACRC,SAAU,SACVC,KAAM,mBACNC,WAAY,SACZC,YAAa,QAiBD,SAASC,EAAT,GAAgE,IAAhDC,EAA+C,EAA/CA,GAA+C,IAA3C1D,iBAA2C,MAA/B,GAA+B,EACvE2D,EAAM3C,IAEZ,OACC,kBAAC,IAAD,CAAM0C,GAAIA,EAAI1D,UAAW2D,EAAIf,MAC5B,kBAAC7C,EAAA,EAAD,CAAKC,UAAS,UAAK2D,EAAIzG,KAAT,YAAiB8C,IAC9B,yBAAK4D,IAAI,mBAAmBC,IAAI,GAAG7D,UAAW2D,EAAIjB,MAClD,kBAACoB,EAAA,EAAD,CAAY9D,UAAW2D,EAAIlC,KAAMsC,QAAQ,KAAKC,UAAU,QAAxD,8B,gCCxDJ,SAASC,EAAUC,GAClB,IAAMC,EAAMC,SAASF,EAAK,IAE1B,MAAmB,kBAARC,GAAqBE,MAAMF,GAC/B,EAD4CA,EASpD,SAASG,IACR,OAAO,SAACxI,EAAKC,GAAN,OAAsBkI,EAAUnI,GAAOmI,EAAUlI,IASzD,SAASX,EAAI8I,GACZ,OAAO,SAACK,GACP,OAAON,EAAUM,GAAKN,EAAUC,IAUlC,SAASM,EAAQN,GAChB,OAAO,SAACK,GACP,OAAON,EAAUM,GAAKN,EAAUC,IAUlC,SAASO,EAASP,GACjB,OAAO,SAACK,GACP,OAA0B,IAAnBN,EAAUC,GAAa,EAAID,EAAUM,GAAKN,EAAUC,IAjD7D,4MA0DA,IAAMQ,EAAO,sCAETC,EAFS,yBAETA,EAFS,uBAGR,SAACJ,GAAD,OAAsBI,EAAI9I,QAAO,SAAC+I,EAAGC,GAAJ,OAAUA,EAAED,KAAIL,M,uFCKhDO,EAAa,I,kDA5ClB,aAAe,uCACR1F,IAAOA,IAAMC,U,+DAUDjH,GAAsC,IAAD,OACvD,OAAO8C,KAAKF,SAASzC,YAAY,IAAK2C,KAAK5C,MAAM6C,MAAM,WACtD,OAAO,EAAK7C,MAAME,MAAM,CAAEJ,aAAY2M,a,6CAcvCtD,EACAuD,EACA5M,GACwB,IAAD,OACvB,OAAO8C,KAAKF,SAASzC,YAAY,IAAK2C,KAAK5C,MAAM6C,MAAM,WACtD,OAAO,EAAK7C,MACVE,MAAM,CACNyM,WAAYxD,EACZyD,gBAAiBF,EACjB5M,aAEAK,iB,GA5CkBsC,MAoDR+J,O,+FCFTnL,EAAyB,I,kDAvC9B,aAAe,uCACR4F,IAAmBA,IAAkB4F,a,uDAUjC9L,GAA6D,IAAD,OACtE,OAAO6B,KAAKF,SAASzC,YAAY,KAAM2C,KAAK5C,OAAO,WAClD,OAAO,EAAKA,MAAMsB,QAAQP,Q,+CAa3BV,EACAP,GAEA,OAAOF,YACNS,EACAP,EACA8C,KAAKF,SACLE,KAAK5C,W,GA1C2ByC,MAkDpBpB,O,qECPTyL,EAAgB,I,kDAtCrB,aAAe,IAAD,8BACb,cAAM,wBARPC,kBAOc,EAEb,EAAKxG,kBAEL,EAAKwG,aAAe,EAAK/M,MAAM,gBAE/B,EAAKwG,wBANQ,E,8DAkBb5D,KAAK6D,QAAQ,GAAGC,OAAO,CACtBqG,aAAc,wCAEfnK,KAAK6D,QAAQ,KAAKC,OAAO,CACxBqG,aAAc,yD,8CAKfnK,KAAKmK,aAAahJ,eAAe4C,QAAO,SAACqG,GACV,kBAAnBA,EAAY9K,KACtB8K,EAAY9K,GAAZ,UAAoB8K,EAAY9K,KAEG,kBAAzB8K,EAAYlN,WACtBkN,EAAYlN,SAAZ,UAA0BkN,EAAYlN,kB,UA9CR+G,IAsDnBiG,O,iCCrDAG,IAJf,SAAmB3I,GAClB,OAAO,SAAC2H,GAAD,OAAuBA,EAAExK,OAAO6C,M,yTCqBxC,SAAS4I,EAAT,GAK4B,IAJ3B9I,EAI0B,EAJ1BA,MACA+I,EAG0B,EAH1BA,YAEGC,EACuB,yCACMC,IAAMC,SAA6B,MADzC,mBACnBC,EADmB,KACTC,EADS,KAQpBC,EAAc,WACnBD,EAAY,OAGb,OACC,oCACC,kBAACE,EAAA,EAAD,eACCC,gBAAevJ,EAAMA,MACrBwJ,gBAAc,OACdlC,UAAWmC,IACXzC,GAAIhH,EAAMA,MACV0J,QAhBiB,SAACC,GACpBA,EAAMC,iBACNR,EAAYO,EAAME,gBAehBC,QAAS,kBAAC,IAAD,OAELd,GAEHhJ,EAAM+J,OAER,kBAACC,EAAA,EAAD,CACClM,GAAIkC,EAAMA,MACVmJ,SAAUA,EACVc,aAAW,EACXC,KAAMC,QAAQhB,GACdiB,QAASf,GAET,kBAACgB,EAAA,EAAD,CAAU/C,UAAWmC,IAAYzC,GAAIhH,EAAMA,MAAO0J,QAASL,GACzDrJ,EAAMsK,cAAgBtK,EAAM+J,OAE9B,kBAACQ,EAAA,EAAD,MACCxB,EAAYpL,KAAI,SAAC6M,GAAD,OAChB,kBAACH,EAAA,EAAD,CACC/C,UAAWmC,IACXzC,GAAIwD,EAAMxK,MACVyK,IAAG,UAAKzK,EAAM+J,MAAX,mBAA2BS,EAAMxK,OACpC0J,QAASL,GAERmB,EAAMT,YAcb,IA6CeW,EA7CU,SAAC,GAImB,IAH5CC,EAG2C,EAH3CA,OAEG3B,EACwC,4BAC7BE,mBAAS0B,eAAhBH,EADoC,oBAErC1H,EAAQ8H,cAEd,OACC,oCACEF,EAAOhN,KACP,SAACqC,EAAmBnC,GACnB,OAAImC,EAAM8K,SAER,kBAAChC,EAAD,eACC9I,MAAOA,EACP+I,YAAa/I,EAAM8K,UAEf9B,EAJL,CAKCyB,IAAKM,YAAaN,EAAK5M,MAMzB,kBAACyL,EAAA,EAAD,eACC0B,UAAWhL,EAAMiL,KAAO,kBAACjL,EAAMiL,KAAP,MAAiB,KACzC3D,UAAWmC,IACXyB,YAAa,CACZhG,WAAYnC,EAAMoC,WAAWgG,gBAE9BnE,GAAIhH,EAAMA,OAENgJ,EARL,CASCyB,IAAKM,YAAaN,EAAK5M,KAEtBmC,EAAM+J,Y,qDC7CCqB,EAjEO,WACrB,IAAMC,EAAc/K,cACd8C,EAASkI,cAF0B,EAGjBvN,cAAjBI,EAHkC,oBAKzC,OACC,yBAAKmF,UAAW+H,EAAY7K,MAC3B,kBAAC+K,EAAA,EAAD,CAAQhF,SAAS,SAASrF,MAAM,WAC/B,kBAACsK,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAMxP,WAAS,EAACgH,QAAS,GACvB9E,EACA,kBAACsN,EAAA,EAAD,CAAM7N,MAAI,EAAC8N,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGtI,UAAWF,EAAOyI,gBACjD,kBAACzE,EAAA,EAAD,CAAY9D,UAAWF,EAAO0I,cAAezE,QAAQ,WAArD,UAGA,kBAACD,EAAA,EAAD,CACC9D,UAAS,UAAKF,EAAO2I,WAAZ,aACT1E,QAAQ,KACRC,UAAU,KAEV,8BAAOnJ,EAAcM,QAIvB,kBAACgN,EAAA,EAAD,CAAM7N,MAAI,EAAC+N,GAAI,EAAGC,GAAI,IAEvB,kBAACH,EAAA,EAAD,CACC7N,MAAI,EACJ8N,GAAI,EACJC,GAAI,EACJC,GAAI,EACJtI,UAAS,UAAK+H,EAAYtK,UAE1B,kBAACgG,EAAA,EAAD,CAAMC,GAAIlH,IAAakM,QAExB,kBAACP,EAAA,EAAD,CACC7N,MAAI,EACJ8N,GAAI,EACJC,GAAI,EACJC,GAAI,EACJtI,UAAS,UAAK+H,EAAY3K,IAAjB,YAAwB2K,EAAYrK,QAE7C,kBAAC,EAAD,CACC2J,OAAQA,IACRzJ,MAAM,UACNoC,UAAW+H,EAAYxK,SAIxB,kBAACyI,EAAA,EAAD,CACChG,UAAW+H,EAAYxK,OACvBK,MAAM,UACN8J,UAAW,kBAAC,IAAD,OAHZ,QAOA,kBAACiB,EAAA,EAAD,Y,mCCjBQC,EAzCS,WACvB,IAAMb,EAAc/K,cAEVyB,EACN/D,qBAAWC,KADdC,MAAS6D,aAEJoK,EAAYC,mBAAQ,WACzB,OAAOzB,IAAOhN,KAAI,SAACqC,GAClB,MAAoB,iBAAhBA,EAAM+J,MACF,CACNA,MAAO/J,EAAM+J,MACb/J,MACkB,OAAjB+B,EACGhC,YAAoBF,IAAcwM,mBAAoB,CACtD,CAAC,MAAD,UAAWtK,MAEX/B,EAAMA,OAGLA,OAEN,CAAC+B,IAEJ,OACC,yBAAKuB,UAAW+H,EAAY7K,MAC3B,kBAAC+K,EAAA,EAAD,CAAQhF,SAAS,UAChB,kBAACiF,EAAA,EAAD,KACC,kBAACc,EAAA,EAAD,MAEA,kBAACjJ,EAAA,EAAD,CAAKC,UAAW+H,EAAY3K,KAC3B,kBAAC,EAAD,CACCiK,OAAQwB,EACRjL,MAAM,UACNoC,UAAW+H,EAAYxK,c,kBCzCjB8J,EAAuB,CACnC,CACC3K,MAAOH,IAAc0M,WACrBxC,MAAO,cACPkB,KAAMuB,MCyCOC,EApCM,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,WACjBrB,EAAc/K,cAEpB,OACC,yBAAKgD,UAAW+H,EAAY7K,MAC3B,kBAAC+K,EAAA,EAAD,CAAQhF,SAAS,UAChB,kBAACiF,EAAA,EAAD,KACC,kBAACnI,EAAA,EAAD,CAAKC,UAAS,UAAK+H,EAAYtK,QAAjB,YAA4BsK,EAAYpK,aACrD,kBAAC8F,EAAA,EAAD,CAAMC,GAAIlH,IAAakM,QAExB,kBAAC3I,EAAA,EAAD,CAAKC,UAAW+H,EAAY3K,OAE1BgM,GACA,kBAAC,EAAD,CACC/B,OAAQA,EACRzJ,MAAM,UACNoC,UAAW+H,EAAYxK,SAMzB,kBAACyI,EAAA,EAAD,CACChG,UAAW+H,EAAYxK,OACvBK,MAAM,UACN8J,UAAW,kBAAC,IAAD,OAHZ,c,qJCfS2B,EAnBgBpM,aAAW,SAACwC,GAAD,MAAY,CACrD6J,QAAS,CACRC,YAAa,EACb7H,aAAc,EACdR,cAAe,UAEhBsI,QAAS,CACR,sCAAuC,CACtCtI,cAAe,WAGjBuI,WAAY,CACX7L,MAAO6B,EAAM0C,QAAQC,KAAK,KAC1BL,SAAUtC,EAAMoC,WAAW6H,QAAQ3H,SACnCH,WAAYnC,EAAMoC,WAAWC,kBAC7BzE,QAAS,aCqCIsI,MAAMgE,MAnCC,SAAC,GAMmB,IALzCF,EAKwC,EALxCA,WACAjC,EAIwC,EAJxCA,SAIwC,IAHxCf,aAGwC,MAHhC,gBAGgC,MAFxCmD,uBAEwC,aADxCC,qBACwC,MADxB,GACwB,EAClC/J,EAASuJ,IAEf,OACC,kBAACS,EAAA,EAAD,CACCF,gBAAiBA,EACjBG,gBAAiB,CAAEC,eAAe,GAClCC,gBAAeJ,GAEf,kBAACK,EAAA,EAAD,CACCC,WAAY,kBAAC,IAAD,MACZnK,UAAWF,EAAO0J,SAElB,kBAAC1F,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,MACjCyC,GAEDgD,GACA,kBAAC3F,EAAA,EAAD,CAAY9D,UAAWF,EAAO2J,WAAY1F,QAAQ,KAAKC,UAAU,MAC/DyF,IAIJ,kBAACW,EAAA,EAAD,CAAuBpK,UAAWF,EAAOwJ,SACvC9B,Q,iCCjDL,oEAOO,IAAMC,EAAe,SAACN,EAAa5M,GACzC,MAAM,GAAN,OAAU4M,EAAV,YAAiB5M,IAQL+M,EAAc,WAK1B,MAAM,GAAN,QAAU,IAAIvO,MAAOsR,a,iCCrBtB,0GAQaC,EAAe,kBAAc,IAAIvR,MAAOsR,WAc9C,SAASE,EAAkBC,EAAaxF,GAC9C,OAAQA,GACP,IAAK,SACJ,OAAOyF,YAASD,EAAO,GACxB,IAAK,cACJ,OAAOC,YAASD,EAAO,GACxB,IAAK,UACJ,OAAOE,YAAUF,EAAO,GACzB,IAAK,WACJ,OAAOE,YAAUF,EAAO,GACzB,IAAK,aACJ,OAAOE,YAAUF,EAAO,GACzB,IAAK,SACJ,OAAOG,YAASH,EAAO,GACxB,IAAK,QACL,QACC,OAAOA,K,iCC5BKrO,IAHK,SAACyO,EAAUC,GAAX,OACnBC,OAAOC,UAAUC,eAAeC,KAAKL,EAAKC,K,iCCC5BK,IAHI,SAACC,GAAD,OAClBA,EAAMrO,QAAQ,OAAO,SAACsO,GAAD,OAAOA,EAAEC,mB,2HC4BhB1F,MAAMgE,MAAK,YAMU,IALnCxO,EAKkC,EALlCA,KACAmQ,EAIkC,EAJlCA,MACAC,EAGkC,EAHlCA,MACAC,EAEkC,EAFlCA,SACAC,EACkC,EADlCA,QAEA,OACC,kBAACC,EAAA,EAAD,CAAa3H,QAAQ,WAAW4H,WAAS,GACxC,kBAACC,EAAA,EAAD,CAAYpR,GAAE,UAAKW,EAAL,YAAqBmQ,GACnC,kBAACO,EAAA,EAAD,CACCC,QAAO,UAAK3Q,EAAL,WACPX,GAAIW,EACJA,KAAMA,EACNoQ,MAAOA,EACPC,SAAUA,EACVF,MAAOA,GAENG,EAAQpR,KAAI,SAAC0R,GAAD,OACZ,kBAAChF,EAAA,EAAD,CAAUwE,MAAOQ,EAAIR,MAAOpE,IAAG,UAAKhM,EAAL,aAAc4Q,EAAIT,QAC/CS,EAAIT,gB,iCCvDX,qCAgBe3F,QAAMgE,MAAK,YAGkB,IAF3C6B,EAE0C,EAF1CA,SACAD,EAC0C,EAD1CA,MAEA,OACC,kBAAC,IAAD,CACCpQ,KAAK,aACLoQ,MAAOA,EACPD,MAAM,cACNE,SAAUA,EACVC,QAASO,oB,iCC1BZ,qCAgBerG,QAAMgE,MAAK,YAGoB,IAF7C6B,EAE4C,EAF5CA,SACAD,EAC4C,EAD5CA,MAEA,OACC,kBAAC,IAAD,CACCpQ,KAAK,kBACLoQ,MAAOA,EACPD,MAAM,oBACNE,SAAUA,EACVC,QAASQ,oB,gGCPNC,EAAiB,uCAAG,WACzBxN,GADyB,uBAAAnF,EAAA,sEAGHwH,IAAcoL,mBAHX,OAGnB3N,EAHmB,OAKzBE,EAAS,CACR+C,KAAM2K,IAAkBC,QACxBC,QAAS9N,KAGJ+N,EAAuBrO,gBAEAqO,IAAyB1O,KAQ/C2O,EAAWhO,EAAQiO,OAAOC,YAAWH,KAC3C,UAAIC,EAAS,UAAb,aAAI,EAAahS,KAChBkE,EAAS,CACR+C,KAAM2K,IAAkBO,oBACxBL,QAASE,EAAS,GAAGhS,OAXvB,UAAIgE,EAAQ,UAAZ,aAAI,EAAYhE,KACfkE,EAAS,CACR+C,KAAM2K,IAAkBO,oBACxBL,QAAS9N,EAAQ,GAAGhE,KAavBkE,EAAS,CACR+C,KAAM2K,IAAkBQ,mBACxBN,SAAS,IA/Be,2CAAH,sDAmCRJ,O,mQC/CTlL,EAAY/D,aAAW,SAACwC,GAAD,MAAY,CACxCoN,cAAe,CACdrJ,YAAY,MACZsJ,YAAarN,EAAM0C,QAAQY,QAAQgK,KACnCC,YAAa,cAuFArD,sBAlEf,YAUqC,IAUjBsD,EAnBnB1B,EASmC,EATnCA,MACAC,EAQmC,EARnCA,SACA5E,EAOmC,EAPnCA,KACAsG,EAMmC,EANnCA,OACApG,EAKmC,EALnCA,QACAwE,EAImC,EAJnCA,MACA6B,EAGmC,EAHnCA,WACA3S,EAEmC,EAFnCA,GACA4S,EACmC,EADnCA,QAEMC,EAAYC,sBACZC,EAAYvM,IA4BlB,OACC,kBAAC,IAAD,CACCuK,MAAOA,EACPiC,gBAAc,EACdzJ,QAAQ,SACR0J,aAAa,WACbjC,SAVF,SAAsBkC,GACrBlC,EAASkC,EAAMlT,IAUd4S,QAASA,EACTxG,KAAMA,EACN+G,OAAO,aACPT,OAAQA,EACRpG,QAASA,EACTwE,MAAOA,EACPsC,WAjCiBX,EAiCIE,EAhCf,SACNU,EACAC,EACAC,EACAC,GAEA,OAAIH,GAAOI,YAAUJ,EAAKZ,GAClBiB,uBAAaF,EAAc,CACjChO,UAAU,GAAD,OAAKqN,EAAUQ,IAAf,YAAsBN,EAAUV,iBAGpCmB,IAsBPrC,WAAS,EACTwC,aAAY7C,EACZ8C,oBAAqB,CACpB,aAAc,iBAEfC,WAAY,CACX,aAAc/C,QC/EZtK,EAAY/D,aAAW,SAACwC,GAAD,MAAY,CACxCvC,KAAK,aACJG,QAAS,OACT6D,cAAe,MACfuB,WAAY,cACXhD,EAAM6B,YAAYC,KAAK,MAAQ,CAC/BL,cAAe,SACfuB,WAAY,WAGd6L,UAAU,aACT5M,aAAcjC,EAAME,QAAQ,GAC5B4J,YAAa9J,EAAME,QAAQ,GAC3B/B,MAAO6B,EAAM0C,QAAQC,KAAK,KAC1B5E,cAAe,YACfuE,SAAUtC,EAAMoC,WAAWE,SAC3BwM,WAAY,QACX9O,EAAM6B,YAAYC,KAAK,MAAQ,CAC/BgN,WAAY,aAgHAC,EAhGG7E,gBAAK,YAIW,IAHjC8E,EAGgC,EAHhCA,UACAC,EAEgC,EAFhCA,QACAlD,EACgC,EADhCA,SACgC,EACR5F,mBAAoB,CAAE4E,OAAO,EAAOmE,KAAK,IADjC,mBACzB/H,EADyB,KACnBgI,EADmB,KAE1BC,EAAU7N,IAOhB,SAASkM,EAAO/F,GACfyH,EAAQ,aACPpE,OAAO,EACPmE,KAAK,GACJxH,GAAM,IAIT,IAAM2H,EAAYC,uBAAY,kBAAM7B,EAAO,WAAU,IAC/C8B,EAAUD,uBAAY,kBAAM7B,EAAO,SAAQ,IAM3CpG,EAAUiI,uBAAY,WAC3BH,EAAQ,CACPpE,OAAO,EACPmE,KAAK,MAEJ,IAQGM,EAAeF,uBACpB,SAACrB,EAAmBvG,GACfuG,IACS,UAARvG,EACHqE,EAAS,kBAAmBkC,IAE5BlC,EAAS,gBAAiBkC,GAC1B5G,QAIH,CAAC0E,EAAU1E,IAYZ,OAPAoI,qBAAU,WACLtI,EAAK4D,OACR0C,EAAO,SAGN,CAACuB,IAGH,kBAAC,IAAD,CAAyBU,MAAOC,KAC/B,kBAACrP,EAAA,EAAD,CAAKC,UAAW6O,EAAQ3R,MACvB,kBAAC,EAAD,CACCqO,MAAOkD,EACPjD,SAAUyD,EACVrI,KAAMA,EAAK4D,MACX0C,OAAQ4B,EACRhI,QAASA,EACTwE,MAAM,aACN6B,WAAYuB,EACZlU,GAAG,UAEJ,kBAACsJ,EAAA,EAAD,CAAYE,UAAU,OAAOhE,UAAW6O,EAAQP,WAAhD,MAGA,kBAAC,EAAD,CACC/C,MAAOmD,EACPlD,SAAUyD,EACVrI,KAAMA,EAAK+H,IACXzB,OAAQ8B,EACRlI,QAASA,EACTwE,MAAM,WACN6B,WAAYsB,EACZjU,GAAG,MACH4S,QAASqB,S,+DChGC,SAASY,EAAT,GAKwB,IAJtCC,EAIqC,EAJrCA,UACA9D,EAGqC,EAHrCA,SACA+D,EAEqC,EAFrCA,YACA9I,EACqC,EADrCA,MAEM9C,EAAM6L,cAEZ,OACC,kBAACzP,EAAA,EAAD,KACEuP,GACA,kBAACG,EAAA,EAAD,CACCjV,GAAG,cACHW,KAAK,cACLmQ,MAAM,sBACNvH,QAAQ,WACRwH,MAAO9E,EACP+E,SAAUA,EACVG,WAAS,EACT3L,UAAW2D,EAAI+L,UACfC,gBAAiB,CAChBC,QAAS,iBAIZ,kBAAC7P,EAAA,EAAD,CAAKC,UAAW2D,EAAIkM,cACnB,kBAACC,EAAA,EAAD,CACCC,QACC,kBAACC,EAAA,EAAD,CACC7U,KAAK,mBACLqQ,SAAU+D,EACVU,QAASX,IAGXhE,MAAM,uBAEP,kBAAC4E,EAAA,EAAD,CAASzJ,MAnDZ,wLAoDI,kBAAC,IAAD,CAAU7I,MAAM,cAGlB,kBAACqJ,EAAA,EAAD,CAASjH,UAAW2D,EAAIwM,W,+CC9CdC,EAAuB,kBACnC,kBAACC,EAAA,EAAD,CAAOC,SAAS,SAAhB,mGAWKC,EAAQ5G,gBAAK,YASH,IARf6G,EAQc,EARdA,qBACAC,EAOc,EAPdA,gBACAhC,EAMc,EANdA,UACAC,EAKc,EALdA,QACAlD,EAIc,EAJdA,SACAyD,EAGc,EAHdA,aACAyB,EAEc,EAFdA,YACAC,EACc,EADdA,eACc,EACwBlW,cADxB,mBACPI,EADO,KACQC,EADR,KAENN,EAAOoW,cAAPpW,GACAkE,EAAahE,qBAAWoG,KAAxBpC,SACFmS,EAAoB9B,sBAAW,sBAAC,4BAAAxV,EAAA,kEACjCsB,QADiC,IACjCA,OADiC,EACjCA,EAAeL,IADkB,gCAElBsW,YACjB,CACCC,cAAerC,EACfsC,gBAAiBvC,EACjBwC,YAAaP,EACbxL,gBAAiBsL,EACjBvL,WAAYwL,GAEb5V,EAAcL,GACdmW,EACAnW,QAAMmG,GAZ6B,OAE9BuQ,EAF8B,OAepCxS,EAAS,CACR+C,KAAMnD,IAAe6S,qBACrB7E,SAAiB,IAAR4E,IAjB0B,2CAoBnC,CACFT,EACAD,EACA3V,EACA6T,EACAD,EACAiC,EACAlW,EACAkE,EACAiS,IAiBD,OAdAzB,qBAAU,WACLpU,GACH+V,MAEC,CAACA,EAAmB/V,EAAcN,IAGrC0U,qBAAU,WACTxQ,EAAS,CACR+C,KAAMnD,IAAe8S,uBACrB9E,SAAU+E,YAAQ5C,KAAe4C,YAAQ3C,OAExC,CAACD,EAAWC,EAAShQ,IAGvB,oCACC,kBAACyJ,EAAA,EAAD,CAAMxP,WAAS,EAACgH,QAAS,GACxB,kBAACwI,EAAA,EAAD,CAAM7N,MAAI,EAACgX,GAAI,GAAIjJ,GAAI,GACtB,kBAACkJ,EAAA,EAAD,CAAkBhG,MAAOkF,EAAiBjF,SAAUA,KAErD,kBAACrD,EAAA,EAAD,CAAM7N,MAAI,EAACgX,GAAI,GAAIjJ,GAAI,GACtB,kBAACmJ,EAAA,EAAD,CACCjG,MAAOiF,EACPhF,SAAUA,KAGZ,kBAACrD,EAAA,EAAD,CAAM7N,MAAI,EAACgX,GAAI,GAAIjJ,GAAI,GACtB,kBAAC,EAAD,CACCoG,UAAWA,EACXC,QAASA,EACTlD,SAAUyD,UAqEDtF,oBA5Cf,YAYoC,IAXnC6G,EAWkC,EAXlCA,qBACAC,EAUkC,EAVlCA,gBACAhC,EASkC,EATlCA,UACAC,EAQkC,EARlCA,QACAlD,EAOkC,EAPlCA,SACAyD,EAMkC,EANlCA,aACAyB,EAKkC,EALlCA,YACAnB,EAIkC,EAJlCA,YACAoB,EAGkC,EAHlCA,eAGkC,IAFlCc,eAEkC,aADlCC,0BACkC,SAC5BC,EAAaC,cACXzR,EAAmBzF,qBAAWoG,KAA9BX,eAER,OACC,kBAACJ,EAAA,EAAD,CAAKC,UAAS,UAAKyR,EAAUE,EAAWE,QAAU,KACjD,kBAACxC,EAAD,CACC5I,MAAOiK,EACPlF,SAAUA,EACV8D,UAAWqB,EACXpB,YAAaA,IAEd,kBAAC,EAAD,CACCkB,gBAAiBA,EACjBD,qBAAsBA,EACtB/B,UAAWA,EACXC,QAASA,EACTO,aAAcA,EACdzD,SAAUA,EACVkF,YAAaA,EACbC,eAAgBA,IAEhBe,GAAsBvR,GACtB,oCACC,kBAAC2R,EAAA,EAAD,MACA,kBAAC,EAAD,Y,sDCrLC9J,EAAmB/K,aAAW,SAACwC,GAAD,MAAY,CAC/C+I,cAAe,CACdhL,cAAe,YACf+Q,WAAY,EACZlR,QAAS,SAEVoL,WAAW,aACV8F,WAAY,GACX9O,EAAM6B,YAAYC,KAAK,MAAQ,CAC/BQ,SAAUtC,EAAMoC,WAAWmB,QAAQ,MAGrCuF,eAAgB,CACflL,QAAS,OACT6D,cAAe,SACf5D,eAAgB,cAIH0K,O,iCCrBf,kFAOaX,EAAuB,CACnC,CACC3K,MAAOH,IAAc0M,WACrBxC,MAAO,cACPkB,KAAMuB,KAEP,CACCxM,MAAOH,IAAcwV,aACrBtL,MAAO,YACPkB,KAAMqK,O,iCChBR,8CAQa3K,EAAuB,CACnC,CACC3K,MAAOH,IAAc0V,YACrBxL,MAAO,eAER,CACC/J,MAAOD,YAAoBF,IAAc2V,gBAAiB,CAAC,CAAC,OAAQ,MACpEzL,MAAO,gBAER,CACC/J,MAAOH,IAAc4V,eACrB1L,MAAO,mBAER,CACC/J,MAAOH,IAAc6V,IACrB3L,MAAO,oBAER,CACC/J,MAAOH,IAAc8V,aACrB5L,MAAO,iBAER,CACC/J,MAAOH,IAAc+V,gBACrB7L,MAAO,sB,gRCVHzF,EAAY/D,aAAW,SAACwC,GAAD,OAC5B8S,YAAa,CACZC,SAAU,CACTC,OAAQhT,EAAMgT,OAAOC,OAAS,EAC9B9U,MAAO,aAUK,SAAS+K,EAAT,GAGgB,IAAD,IAF7B/K,aAE6B,MAFrB,UAEqB,MAD7BmG,eAC6B,MADnB,OACmB,EACvBgE,EAAc/K,cACd6R,EAAU7N,IAFa,EAGL4E,oBAAS,GAHJ,mBAGtBgB,EAHsB,KAGhBgI,EAHgB,OAIChJ,oBAAS,GAJV,mBAItB+M,EAJsB,KAIbC,EAJa,KAOvB7M,EAAc,kBAAY6I,GAAQ,IAElCiE,EAAe,uCAAG,sBAAAtZ,EAAA,6DACvBqZ,GAAW,GACXhU,IAASkU,QACT1N,IAAc0N,QACdvT,IAAkBuT,QAClB1T,IAAM0T,QALiB,SAOjBlU,IAASrD,SAPQ,uBAQjB6J,IAAc7J,SARG,wBASjBgE,IAAkBhE,SATD,yBAUjB6D,IAAM7D,SAVW,QAYvBwC,OAAOgV,SAASjW,QAAQ,KAZD,4CAAH,qDAerB,OACC,oCACC,kBAACkJ,EAAA,EAAD,CACChG,UAAW+H,EAAYxK,OACvBK,MAAOA,EACP8J,UAAW,kBAAC,IAAD,MACXtB,QAxBgB,kBAAYwI,GAAQ,IAyBpC7K,QAASA,GALV,QASA,kBAACiP,EAAA,EAAD,CAAQpM,KAAMA,EAAME,QAASf,EAAa4F,WAAS,EAACpJ,SAAS,MAC5D,kBAAC0Q,EAAA,EAAD,uCACA,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,uGAKD,kBAACC,EAAA,EAAD,KACC,kBAACpN,EAAA,EAAD,CAAQI,QAASL,EAAasN,SAAUV,GAAxC,UAGA,kBAAC3M,EAAA,EAAD,CACCI,QAASyM,EACTjV,MAAM,UACNmG,QAAQ,YACRuP,WAAS,EACTD,SAAUV,GALX,SAUD,kBAACY,EAAA,EAAD,CAAUvT,UAAW6O,EAAQ2D,SAAU5L,KAAM+L,GAC5C,kBAAC1S,EAAA,EAAD,CAAkBrC,MAAM,iB,kIChFd,SAASoL,EAAT,GAEmB,IADjCwK,EACgC,EADhCA,gBAEMzL,EAAc/K,cACd+V,EAAWU,cAFe,EAGR7N,oBAAS,GAHD,mBAGzB8N,EAHyB,KAGnBC,EAHmB,KAOhCzE,qBAAU,WACT0E,aAAM,WACL,IAAMC,EAAOC,SAASC,eAAe,gBACrC,OAAOJ,EAAQ9M,QAAQgN,SAEtB,CAACd,IAGJ,IAAMiB,EAAcjF,uBAAY,WAC/B,IAAM8E,EAAOC,SAASC,eAAe,gBACjCF,IACHA,EAAKI,QAC0B,qBAApBT,GACVA,OAGA,CAACA,IAEJ,OAAOE,EACN,kBAAC1N,EAAA,EAAD,CACChG,UAAW+H,EAAYxK,OACvBK,MAAM,UACNmG,QAAQ,WACRqC,QAAS4N,GAJV,eASA,uC,kIC/BarK,kBAAK,YAKsB,IAJzC6B,EAIwC,EAJxCA,SACAD,EAGwC,EAHxCA,MAEGtK,EACqC,sCACR2E,oBAAS,GADD,mBACjCsO,EADiC,KACvBC,EADuB,OAEdvO,mBAAS,IAFK,mBAEjCwO,EAFiC,KAE1BC,EAF0B,KAGlCC,EAAQC,mBAmDd,OACC,kBAAC9E,EAAA,EAAD,eACC9D,WAAS,EACT6I,WAAY,CACXC,eAAgB,kBAACC,EAAA,EAAD,CAAgBzR,SAAS,SAAzB,KAChB0R,aAAc,kBAACD,EAAA,EAAD,CAAgBzR,SAAS,OAAzB,OACdoL,WAAY,CACXuG,IAAK,EACLC,IAAK,UACLC,KAAM,EACNC,IAAKT,IAGPhJ,MAAM,SACNqE,gBAAiB,CAChBC,QAAS3O,EAAM9F,MAEhBX,GAAIyG,EAAM9F,KACV6Z,YAAY,IACZxJ,SA/DF,SAA0ByJ,GACzB,IAAMC,EAAsC,KAAnBD,EAAEE,OAAO5J,MAAe,IAAM0J,EAAEE,OAAO5J,MAChE,GACC,UAAG2J,GAAWE,WAAW,OACxB,UAAG7J,GAAQ6J,WAAW,MAAQ,UAAGF,GAAWG,OAAS,EAEtDhB,EAAS,uCAIV,GAAIa,EAASI,MAAM,OAClBjB,EAAS,sCADV,CAKA,IAAMnQ,EAAME,SAAS8Q,EAAU,IAE3B7Q,MAAMH,IAAQA,EAAM,UACvBmQ,EAAS,0DAGVA,EAAS,IAEe,qBAAb7I,GACVA,EAASyJ,MAwCTM,OApCF,WACCpB,GAAY,IAoCXqB,QAjCF,WACCrB,GAAY,GACE,IAAV5I,GAAe+I,EAAMmB,SAExBnB,EAAMmB,QAAQC,kBAAkB,EAAG,OA8BnCC,UA1BF,SAAmBV,GAClBA,EAAE3O,kBA0BDiF,MAAO2I,EAAW0B,YAAa,GAAD,OAAIrK,IAAWA,EAC7C6I,MAAiB,KAAVA,EACPyB,WAAYzB,GAERnT,Q,+LCxFQ6U,EAXO,SAAC/C,GACtB,QAAIA,IAGD,IADAjI,OAAOiL,OAAOvZ,KAA2BwZ,QAAQjD,EAASkD,W,0LCgBxDjV,EAAY/D,aAAW,SAACwC,GAAD,MAAY,CACxCiT,OAAQ,CACPnQ,SAAU,QACVW,MAAO,QAERgT,QAAS,CACR3T,SAAU,OACVc,SAAU,UAEX8S,KAAM,CACL,OAAQ,CACPvY,MAAO,UAGTuS,QAAS,CACR/M,OAAO,KAAD,OAAO3D,EAAME,QAAQ,GAArB,gBAA+BF,EAAME,QAAQ,GAA7C,OAEPyW,UAAW,CACVjZ,SAAU,EACVkZ,SAAU,GAEXC,UAAW,CACVC,WAAY9W,EAAME,QAAQ,GAC1BgC,aAAclC,EAAME,QAAQ,GAC5BD,WAAY,EACZ8W,aAAa,aAAD,OAAe/W,EAAM0C,QAAQgO,UAE1C7V,KAAM,CACLsD,MAAO,UACP,WAAY,CACXgE,WAAYnC,EAAMoC,WAAWgG,eAC7B,MAAO,CACNjG,WAAY,iBAYD,SAAS6U,IAA8B,IAAD,EAC5Bhc,cAAjBI,EAD6C,sBAE5B+K,oBAAS,GAFmB,mBAE7CgB,EAF6C,KAEvCgI,EAFuC,KAG9CjL,EAAM3C,IACN0V,EAAe1O,cACf+K,EAAWU,cAGXkD,EAAc,kBAAY/H,GAAQ,IAExCM,qBAAU,WACTyH,MACE,CAAC5D,EAASkD,WAEb,IAAMW,EAAe,SAAfA,EAAgBla,GACrB,OACC,kBAAC,WAAD,CAAUyK,IAAKzK,EAAMA,OACpB,kBAACma,EAAA,EAAD,CAAU7S,UAAW8S,IAASpT,GAAIhH,EAAMA,MAAOsD,UAAW2D,EAAIrJ,MAC5DoC,EAAMiL,MACN,kBAACoP,EAAA,EAAD,KACC,kBAACra,EAAMiL,KAAP,OAGF,kBAACqP,EAAA,EAAD,CAAcjU,QAASrG,EAAM+J,SAG7B/J,EAAM8K,SACN,oCACC,kBAACyP,EAAA,EAAD,CAAMjX,UAAW2D,EAAI2S,WACnB5Z,EAAM8K,SAASnN,IAAIuc,KAItB,uCAMJ,OACC,oCACC,kBAAC3O,EAAA,EAAD,CAAQhF,SAAS,UAChB,kBAACiF,EAAA,EAAD,CAASlI,UAAW2D,EAAIuS,SACvB,kBAACgB,EAAA,EAAD,CACCtZ,MAAM,UACNuQ,aAAW,cACXgJ,KAAK,QACL/Q,QAxCc,kBAAYwI,GAAQ,KA0ClC,kBAAC,IAAD,OAED,kBAAC7O,EAAA,EAAD,CAAKC,UAAW2D,EAAIwS,MACnB,kBAAC1S,EAAA,EAAD,CAAMC,GAAIlH,IAAakM,QAExB,kBAACzB,EAAA,EAAD,CAASmQ,YAAY,WAAWC,UAAQ,EAACrX,UAAW2D,EAAIwM,UACxD,kBAACpQ,EAAA,EAAD,CAAKC,UAAW2D,EAAIyS,WAClBvb,GACA,oCACC,kBAACiJ,EAAA,EAAD,CACC9D,UAAW0W,EAAalO,cACxBzE,QAAQ,WAFT,UAMA,kBAACD,EAAA,EAAD,CACC9D,UAAS,UAAK0W,EAAajO,WAAlB,aACT1E,QAAQ,MAER,+BAAoB,OAAblJ,QAAa,IAAbA,OAAA,EAAAA,EAAeM,OAAQ,SAOpC,kBAACmc,EAAA,EAAD,CACCC,OAAO,OACP3Q,KAAMA,EACNE,QAAS6P,EACT9H,QAAS,CAAE2I,MAAO7T,EAAI+O,SAEtB,kBAACuE,EAAA,EAAD,CAAMjT,UAAU,MAAMhE,UAAU,uBAC/B,kBAACgJ,EAAA,EAAD,CAAWwK,gBAAiBmD,KAE7B,kBAAC1P,EAAA,EAAD,MACA,kBAACgQ,EAAA,EAAD,KAAOQ,IAAgBpd,IAAIuc,IAC3B,kBAAC3P,EAAA,EAAD,MACA,kBAACgQ,EAAA,EAAD,KAAOS,IAAcrd,IAAIuc,IACzB,kBAAC3P,EAAA,EAAD,MACA,kBAAC6K,EAAA,EAAD,MACA,kBAAC/R,EAAA,EAAD,CAAK4X,MAAO,CAAExU,QAAS,WACtB,kBAACwF,EAAA,EAAD,CAAQ/K,MAAM,UAAUmG,QAAQ,iB,iEC1JxB6T,EAA0B,2BACnCC,eADmC,IAEtC1V,QAAS,CACRY,QAAS,CACRgK,KAAM+K,IAAO,MAEdC,UAAW,CACVhL,KAAM+K,IAAO,SAKHE,EAAwB,2BACjCJ,GADiC,IAEpCzV,QAAS,CACRY,QAAS,CACRgK,KAAMkL,IAAM,MAEbF,UAAW,CACVhL,KAAMkL,IAAM,SAKFC,EAA2B,2BACpCN,GADoC,IAEvCzV,QAAS,CACRY,QAAS,CACRgK,KAAMoL,IAAO,MAEdJ,UAAW,CACVhL,KAAMoL,IAAO,SAKHC,EAA6B,2BACtCR,GADsC,IAEzCzV,QAAS,CACRY,QAAS,CACRgK,KAAMsL,IAAU,MAEjBN,UAAW,CACVhL,KAAMsL,IAAU,SAKNC,EAA2B,2BACpCV,GADoC,IAEvCzV,QAAS,CACRY,QAAS,CACRgK,KAAMwL,IAAWC,MAElBT,UAAW,CACVhL,KAAMwL,IAAW,SCtDdE,EAA6B,CAClClc,IAAc6V,IACd7V,IAAcmc,WACdjc,YAAoBF,IAAcoc,QAAS,CAAC,CAAC,MAAO,MACpDpc,IAAcqc,WACdrc,IAAc8V,cAETwG,EAAgC,CACrCtc,IAAc0M,WACd1M,IAAc4V,eACd5V,IAAcuc,sBACdvc,IAAcwc,2BACdxc,IAAcyc,gBACdzc,IAAc0c,+BACd1c,IAAc2c,mBACd3c,IAAc4c,mBACd5c,IAAc6c,kBACd7c,IAAc8c,gBACd5c,YAAoBF,IAAc2V,gBAAiB,CAAC,CAAC,OAAQ,MAC7DzV,YAAoBF,IAAcwM,mBAAoB,CAAC,CAAC,MAAO,OAE1DuQ,EAAkC,CAAC/c,IAAc+V,iBACjDiH,EAAgC,CAAChd,IAAcwV,cAwBtCyH,MAtBf,SAAwBvD,GACvB,IAAMwD,EAAI,UAAMxD,EAASnZ,QAAQ,WAAY,KAE7C,OAAwC,IAApC2b,EAAiBzC,QAAQyD,GACrB5B,YAAeG,IAGoB,IAAvCa,EAAoB7C,QAAQyD,GACxB5B,YAAeK,IAGsB,IAAzCoB,EAAsBtD,QAAQyD,GAC1B5B,YAAeO,IAGoB,IAAvCmB,EAAoBvD,QAAQyD,GACxB5B,YAAeS,GAGhBT,YAAeD,IC1CjB5W,GAAY/D,aAAW,SAACwC,GAAD,MAAY,CACxCia,QAAQ,aACPrc,QAAS,QACRoC,EAAM6B,YAAYgB,GAAG,MAAQ,CAC7BjF,QAAS,UAGXsc,OAAO,aACNtc,QAAS,SACRoC,EAAM6B,YAAYgB,GAAG,MAAQ,CAC7BjF,QAAS,aAyDGuc,GA9CK,SAAC,GAA8C,IAA5CpS,EAA2C,EAA3CA,SAChBuL,EAAmCU,cACnC3T,EAASkB,KACT6Y,EAAUC,cAHiD,EAI3Brf,cAJ2B,mBAI1DI,EAJ0D,KAI3CC,EAJ2C,KAMjEoU,qBAAU,WACLpU,IACED,IAAiB,OAACA,QAAD,IAACA,OAAD,EAACA,EAAeL,MAKO,IAJ5B,CACf+B,IAAc0M,WACdzM,IAAakM,MAEFsN,QAAQjD,EAASkD,WAE5B4D,EAAQE,KAAKvd,IAAakM,SAI3B,CAAC5N,EAAcD,EAAekY,EAAU8G,IAE3C,IAAMpa,EAAQqJ,mBAAQ,WACrB,OAAO0Q,EAAezG,EAASkD,YAC7B,CAAClD,IAEJ,OACC,qCACG+C,EAAc/C,IACf,oCACC,kBAACiH,EAAA,EAAD,CAAeva,MAAOA,GACrB,kBAACM,EAAA,EAAD,CAAKC,UAAWF,EAAO4Z,SACtB,kBAAC,IAAD,MACA,kBAAC,IAAD,OAED,kBAAC3Z,EAAA,EAAD,CAAKC,UAAWF,EAAO6Z,QACtB,kBAAClD,EAAD,OAGD,yBAAKzW,UAAU,gBAAgBwH,O,oBC5DtByS,GAPKhd,aAAW,SAACwC,GAAD,MAAY,CAC1C9G,UAAW,CACV+G,WAAYD,EAAME,QAAQ,GAC1BC,cAAeH,EAAME,QAAQ,SC8BhBua,GA1BO,SAAC,GAMc,IALpC1S,EAKmC,EALnCA,SACAxH,EAImC,EAJnCA,UAGGma,GACgC,EAHnC3f,GAGmC,+CAC7BsF,EAASma,KAEf,OACC,oCAEC,uBAAGzf,GAAG,sBAAsB4f,UAAW,EAAGpa,UAAU,mBAApD,uBAGA,kBAACqa,GAAA,EAAD,eACCra,UAAS,UAAKF,EAAOnH,UAAZ,YAAyBqH,GAAa,KAE3Cma,GAEH3S,M,opBCjBU,SAAS8S,EAAT,GAGyB,IAFvC9O,EAEsC,EAFtCA,SACAD,EACsC,EADtCA,MAEMoG,EAAaC,cAEnB,OACC,kBAAC7R,EAAA,EAAD,CAAKC,UAAS,UAAK2R,EAAWE,UAC7B,kBAAC0I,EAAA,EAAD,CACC9T,MAAM,kBACN7N,YAAY,+CACZmL,QAAQ,WACR5I,KAAK,iBACLqQ,SAAUA,EACVD,MAAOA,K,sCCTLiP,EAAoBvd,aAAW,SAACwC,GAAD,MAAY,CAChDvC,KAAK,eACHuC,EAAM6B,YAAYgB,GAAG,MAAQ,CAC7BG,WAAY,eAgBAkD,MAAMgE,MAAK,YAMa,IALtClD,EAKqC,EALrCA,MACA7N,EAIqC,EAJrCA,YACA2S,EAGqC,EAHrCA,MAGqC,IAFrCvJ,YAEqC,aADrCyP,eACqC,SAC/BE,EAAaC,cACb6I,EAASzZ,YAAU,CAAEG,SAAS,EAAOa,SACrC0Y,EAAcF,IAEpB,OACC,kBAACza,EAAA,EAAD,CACCC,UAAS,UAAKyR,EAAUE,EAAWE,QAAU,GAApC,YAA0C4I,EAAOvd,KAAjD,YACRwd,EAAYxd,OAGb,kBAAC6C,EAAA,EAAD,CAAKC,UAAWya,EAAOhZ,MACtB,kBAACqC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KACjCyC,GAED7N,GAAe,kBAACkL,EAAA,EAAD,CAAYE,UAAU,QAAQpL,IAE/C,kBAACkL,EAAA,EAAD,CAAYC,QAAQ,MAAMwH,O,QChDd,SAASoP,EAAT,GAA8D,IAAvCpP,EAAsC,EAAtCA,MACrC,OACC,kBAAC,EAAD,CACC9E,MAAM,eACN7N,YAAY,uEACZ2S,MAAOqP,YAAchF,YAAarK,MCHtB5F,UAAMgE,MAAK,YAEO,IADhC4B,EAC+B,EAD/BA,MAEA,OACC,kBAAC,EAAD,CACC9E,MAAM,uCACN7N,YAAY,6CACZ2S,MAAOqP,YAAchF,YAAarK,S,iDCA/BvK,EAAY/D,aAAW,SAACwC,GAAD,MAAY,CACxCiK,QAAS,CACR6E,WAAY,KAEb9H,MAAO,CACN9E,aAAclC,EAAME,QAAQ,IAE7Bkb,QAAS,CACRjd,MAAO6B,EAAM0C,QAAQC,KAAK,UAgBbuD,MAAMgE,MAAK,YAOU,IANnClI,EAMkC,EANlCA,KACAuD,EAKkC,EALlCA,UACAyJ,EAIkC,EAJlCA,UACAC,EAGkC,EAHlCA,QACAgC,EAEkC,EAFlCA,YACAC,EACkC,EADlCA,eAEMhN,EAAM3C,IACJxG,EAAOoW,cAAPpW,GAF0B,EAGVoL,mBAAsB,MAHZ,mBAG3BkV,EAH2B,KAGrBC,EAHqB,KAclC,SAASC,IACR,OACC,kBAAClX,EAAA,EAAD,CACCC,QAAQ,KACRC,UAAU,OACVhE,UAAS,UAAK2D,EAAI8C,MAAT,YAAkB9C,EAAIkX,UAHhC,qBAUF,OArBA3L,qBAAU,WACT6L,EAAsB,qBAAPvgB,EAAqB,KAAO,QACzC,CAACA,EAAIugB,IAoBP,oCACC,kBAACjX,EAAA,EAAD,CAAYC,QAAQ,WAAWC,UAAU,OAAOhE,UAAW2D,EAAI+F,SAA/D,gBAGA,kBAAC5F,EAAA,EAAD,CAAYC,QAAQ,KAAK/D,UAAW2D,EAAI8C,MAAOzC,UAAW8W,GACxDnK,EACED,GAAe,kBAACsK,EAAD,MACfC,YAAcxZ,EAAMuD,EAAWyJ,EAAWC,QCxElC,SAASwM,EAAT,GAGyB,IAFvC3P,EAEsC,EAFtCA,MACAC,EACsC,EADtCA,SAEA,OACC,kBAAC+O,EAAA,EAAD,CACCxW,QAAQ,WACR0C,MAAM,gBACN7N,YAAY,8CACZ2S,MAAOA,EACPC,SAAUA,EACVrQ,KAAK,cACL6G,MAAI,ICfQ,SAASmZ,EAAT,GAAiE,IAAvC5P,EAAsC,EAAtCA,MACxC,OACC,kBAAC,EAAD,CACCA,MAAOA,EACP9E,MAAM,4BACN7N,YAAY,+CACZoJ,MAAI,EACJyP,SAAS,I,8BCWG,SAAS2J,EAAT,GAIqB,IAHnCC,EAGkC,EAHlCA,YACAC,EAEkC,EAFlCA,eACA9P,EACkC,EADlCA,SAEM7H,EAAMiO,cAEZ,OACC,kBAAC7R,EAAA,EAAD,CAAKC,UAAW2D,EAAIkO,SACnB,kBAAC/N,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,MAAnC,qBAGA,kBAAC8N,EAAA,EAAD,MACA,kBAAC3J,EAAA,EAAD,CAAMxP,WAAS,EAACgH,QAAS,GACxB,kBAACwI,EAAA,EAAD,CAAM7N,MAAI,EAAC8N,GAAI,IACd,kBAAC8S,EAAD,CAAa3P,MAAO8P,EAAa7P,SAAUA,KAE5C,kBAACrD,EAAA,EAAD,CAAM7N,MAAI,EAAC8N,GAAI,IACd,kBAACnB,EAAA,EAAD,OAED,kBAACkB,EAAA,EAAD,CAAM7N,MAAI,EAAC8N,GAAI,IACd,kBAAC+S,EAAD,CACC5P,MAAOqP,YAAchF,YAAa,GAAD,OAAI0F,U,sBClCrCC,EAAkBte,aAAW,SAACwC,GAAD,MAAY,CAC9CrC,IAAK,CACJC,QAAS,OACT6D,cAAe,MACfuB,WAAY,SACZ,UAAW,CACVW,OAAQ,EACRT,YAAalD,EAAME,QAAQ,KAG7B6b,UAAW,CACVhZ,UAAW/C,EAAME,QAAQ,QAcZgG,MAAMgE,MAAK,YAIQ,IAHjC4B,EAGgC,EAHhCA,MACAC,EAEgC,EAFhCA,SACAiQ,EACgC,EADhCA,WAEM9X,EAAMiO,cADoB,EAENhM,mBAAS,IAFH,mBAEzBwO,EAFyB,KAElBC,EAFkB,KAG1BvU,EAASkB,YAAU,CAAEG,SAAS,EAAMa,MAAM,EAAMX,YAAY,IAC5Dqa,EAASH,IA8Bf,OACC,kBAACxb,EAAA,EAAD,CACCC,UAAS,UAAK2D,EAAIkO,QAAT,YAAoBlO,EAAIgY,UAAxB,YAAqC7b,EAAO5C,KAA5C,YAAoDwe,EAAOte,MAEpE,kBAAC2C,EAAA,EAAD,CAAKC,UAAWF,EAAO2B,MACtB,kBAACqC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAnC,6BAGA,kBAACF,EAAA,EAAD,CAAYE,UAAU,QAAtB,mDACkDuH,EADlD,2BAIA,kBAACkE,EAAA,EAAD,CACClE,MAAOA,EACPC,SA1CJ,SAA4ByJ,GAC3B,IAAMC,EAAqC,KAA1BD,EAAEE,OAAO5J,MAAMqQ,OAAgB,IAAM3G,EAAEE,OAAO5J,MAAMqQ,OACrE,GACC,UAAG1G,GAAWE,WAAW,OACxB,UAAG7J,GAAQ6J,WAAW,MAAQ,UAAGF,GAAWG,OAAS,EAEtDhB,EAAS,uCAIV,GAAIa,EAASI,MAAM,OAClBjB,EAAS,sCADV,CAKA,IAAMnQ,EAAME,SAAS8Q,EAAU,IAE3B7Q,MAAMH,IAAQA,EAAM,KAAOA,EAAM,EACpCmQ,EAAS,kDAGVA,EAAS,IAEe,qBAAb7I,GACVA,EAASyJ,MAmBP9Z,KAAK,YACL4I,QAAQ,WACRuH,MAAM,qBACNkJ,WAAY,CACXG,aAAc,kBAACD,EAAA,EAAD,CAAgBzR,SAAS,OAAzB,MAEfjD,UAAW0b,EAAOF,UAClBpH,MAAiB,KAAVA,EACPyB,WAAYzB,KAGd,kBAACtQ,EAAA,EAAD,CAAYC,QAAQ,MAElB6W,YAAchF,YAAa,GAAD,OAAIvR,MAAMoX,GAAc,EAAIA,U,SCtFrDza,EAAY/D,aAAW,SAACwC,GAAD,MAAY,CACxCrC,IAAK,CACJsE,aAAcjC,EAAME,QAAQ,GAC5B4J,YAAa9J,EAAME,QAAQ,GAC3BC,cAAeH,EAAME,QAAQ,IAE9Bkc,MAAO,CACNxe,QAAS,OACToF,WAAY,WACZ,UAAW,CACVS,MAAO,aAqBKyC,MAAMgE,MAAK,YAQY,IAPrCmS,EAOoC,EAPpCA,MACAC,EAMoC,EANpCA,UACAC,EAKoC,EALpCA,QACAC,EAIoC,EAJpCA,OACAC,EAGoC,EAHpCA,MACAC,EAEoC,EAFpCA,eACA3Q,EACoC,EADpCA,SAEM7H,EAAM3C,IAEZ,OACC,kBAACob,EAAA,EAAD,CACC3V,MAAM,mDACNgD,WAAW,2DACXG,iBAAiB,GAEjB,kBAAC7J,EAAA,EAAD,CAAKC,UAAW2D,EAAIvG,KACnB,kBAAC+K,EAAA,EAAD,CAAMxP,WAAS,EAACgH,QAAS,GACxB,kBAACwI,EAAA,EAAD,CAAM7N,MAAI,EAACgX,GAAI,GAAIlJ,GAAI,GACtB,kBAACiU,EAAD,CAAS9Q,MAAOyQ,EAASxQ,SAAUA,KAEpC,kBAACrD,EAAA,EAAD,CAAM7N,MAAI,EAACgX,GAAI,GAAIlJ,GAAI,GACtB,kBAACkU,EAAD,CAAW/Q,MAAOwQ,EAAWvQ,SAAUA,KAExC,kBAACrD,EAAA,EAAD,CAAM7N,MAAI,EAACgX,GAAI,GAAIlJ,GAAI,GACtB,kBAAC,EAAD,CAAQmD,MAAO0Q,EAAQzQ,SAAUA,KAElC,kBAACrD,EAAA,EAAD,CAAM7N,MAAI,EAACgX,GAAI,GAAIlJ,GAAI,GACtB,kBAACmU,EAAD,CAAOhR,MAAO2Q,EAAO1Q,SAAUA,KAEhC,kBAACrD,EAAA,EAAD,CAAM7N,MAAI,EAACgX,GAAI,GAAIlJ,GAAI,GACtB,kBAACoU,EAAD,CAAOjR,MAAOuQ,EAAOtQ,SAAUA,KAEhC,kBAACrD,EAAA,EAAD,CAAM7N,MAAI,EAACgX,GAAI,GAAIlJ,GAAI,EAAGpI,UAAW2D,EAAIkY,OACxC,kBAAC,EAAD,CACCpV,MAAM,mBACN8E,MAAOqP,YAAchF,YAAa,GAAD,OAAIuG,KACrC1K,SAAS,WC7ED,SAAS4K,EAAT,GAGyB,IAFvC9Q,EAEsC,EAFtCA,MACAC,EACsC,EADtCA,SAEA,OACC,kBAAC+O,EAAA,EAAD,CACCvY,MAAI,EACJb,SAAO,EACPE,YAAU,EACV0C,QAAQ,WACRyH,SAAUA,EACVD,MAAOA,EACPpQ,KAAK,UACLsL,MAAM,UACN7N,YAAY,uECdA,SAAS0jB,EAAT,GAGyB,IAFvC/Q,EAEsC,EAFtCA,MACAC,EACsC,EADtCA,SAEA,OACC,kBAAC+O,EAAA,EAAD,CACCvY,MAAI,EACJb,SAAO,EACPE,YAAU,EACV0C,QAAQ,WACRyH,SAAUA,EACVD,MAAOA,EACPpQ,KAAK,YACLsL,MAAM,YACN7N,YAAY,wECdA+M,UAAMgE,MAAK,YAGc,IAFvC4B,EAEsC,EAFtCA,MACAC,EACsC,EADtCA,SAEA,OACC,kBAAC+O,EAAA,EAAD,CACCvY,MAAI,EACJb,SAAO,EACPE,YAAU,EACV0C,QAAQ,WACRyH,SAAUA,EACVD,MAAOA,EACPpQ,KAAK,SACLsL,MAAM,SACN7N,YAAY,qECdA,SAAS2jB,EAAT,GAGyB,IAFvChR,EAEsC,EAFtCA,MACAC,EACsC,EADtCA,SAEA,OACC,kBAAC+O,EAAA,EAAD,CACCvY,MAAI,EACJb,SAAO,EACPE,YAAU,EACV0C,QAAQ,WACRyH,SAAUA,EACVD,MAAOA,EACPpQ,KAAK,QACLsL,MAAM,QACN7N,YAAY,qECdA,SAAS4jB,EAAT,GAGyB,IAFvCjR,EAEsC,EAFtCA,MACAC,EACsC,EADtCA,SAEA,OACC,kBAAC+O,EAAA,EAAD,CACCvY,MAAI,EACJb,SAAO,EACPE,YAAU,EACV0C,QAAQ,WACRyH,SAAUA,EACVD,MAAOA,EACPpQ,KAAK,QACLsL,MAAM,QACN7N,YAAY,gE,kBClBToI,EAAY/D,aAAW,SAACwC,GAAD,MAAY,CACxC6L,MAAO,CACN1J,WAAYnC,EAAMoC,WAAW4a,iBAC7B1a,SAAUtC,EAAMoC,WAAWE,SAC3BnC,cAAe,WAUF+J,kBAAK,WACnB,IAAMhG,EAAM3C,IAEZ,OACC,oCACC,kBAACmH,EAAA,EAAD,CAAMxP,WAAS,EAACgH,QAAS,GACxB,kBAACwI,EAAA,EAAD,CAAM7N,MAAI,EAACgX,GAAIoL,KACd,kBAAC5Y,EAAA,EAAD,CAAY9D,UAAW2D,EAAI2H,OAA3B,gBAED,kBAACnD,EAAA,EAAD,CAAM7N,MAAI,EAACgX,GAAIqL,KACd,kBAAC7Y,EAAA,EAAD,CAAY9D,UAAW2D,EAAI2H,OAA3B,WAED,kBAACnD,EAAA,EAAD,CAAM7N,MAAI,EAACgX,GAAIsL,KACd,kBAAC9Y,EAAA,EAAD,CAAY9D,UAAW2D,EAAI2H,OAA3B,cAED,kBAACnD,EAAA,EAAD,CAAM7N,MAAI,EAACgX,GAAIuL,KACd,kBAAC/Y,EAAA,EAAD,CAAY9D,UAAW2D,EAAI2H,OAA3B,aAGF,kBAACrE,EAAA,EAAD,MACA,kBAAC6K,EAAA,EAAD,U,2BCnBY,SAASgL,EAAT,GAGqB,IAFnCC,EAEkC,EAFlCA,QACAC,EACkC,EADlCA,YAEA,OACC,kBAACjd,EAAA,EAAD,CAAK4X,MAAO,CAAEta,QAAS,QAAUC,eAAe,YAC/C,kBAAC0I,EAAA,EAAD,CACCjC,QAAQ,WACRnG,MAAM,UACN8J,UAAW,kBAAC,IAAD,MACXtB,QAAS,SAAC6O,GACTA,EAAE3O,iBACFyW,KAED1J,SAAU2J,GARX,Y,8ECIGhc,GAAY/D,aAAW,SAACwC,GAAD,MAAY,CACxCwd,eAAgB,CACf7b,OAAQ3B,EAAMoC,WAAWmB,QAAQ,IACjC3F,QAAS,YAiBIsI,OAAMgE,MAAK,YAMO,IALhCxO,EAK+B,EAL/BA,KACAoQ,EAI+B,EAJ/BA,MACAC,EAG+B,EAH/BA,SACA0R,EAE+B,EAF/BA,MACA7e,EAC+B,EAD/BA,WAEMsF,EAAM3C,KADmB,EAEK4E,oBAAkB,GAFvB,mBAExBuX,EAFwB,KAEZC,EAFY,KAGzBC,EAAgB,WACrBD,GAAc,IAWf,OACC,kBAACjV,EAAA,EAAD,CAAMxP,WAAS,EAACgH,QAAS,EAAG8C,WAAW,WACtC,kBAAC0F,EAAA,EAAD,CAAM7N,MAAI,EAACgX,GAAIoL,KACd,kBAACjN,EAAA,EAAD,CACC1L,QAAQ,WACR5I,KAAI,UAAKA,EAAL,YAAa+hB,EAAb,iBACJ1iB,GAAE,UAAKW,EAAL,YAAa+hB,EAAb,iBACF3R,MAAOA,EAAM3S,YACb4S,SAAUA,EACVF,MAAM,cACNK,WAAS,KAGX,kBAACxD,EAAA,EAAD,CAAM7N,MAAI,EAACgX,GAAIqL,KACd,kBAACW,EAAA,EAAD,CACC/R,MAAOA,EAAMgS,OACb/R,SAAUA,EACVrQ,KAAI,UAAKA,EAAL,YAAa+hB,EAAb,YACJnZ,QAAQ,cAGV,kBAACoE,EAAA,EAAD,CAAM7N,MAAI,EAACgX,GAAIsL,IAAc5c,UAAW2D,EAAIsZ,gBAC3C,kBAACjN,EAAA,EAAD,CACCC,QAAS1E,EAAMiS,cACfhS,SAAUA,EACVrQ,KAAI,UAAKA,EAAL,YAAa+hB,EAAb,mBACJ7O,WAAY,CAAE,aAAc,gBAG9B,kBAAClG,EAAA,EAAD,CAAM7N,MAAI,EAACgX,GAAIuL,IAAa7c,UAAW2D,EAAIsZ,gBAC1C,kBAACQ,GAAA,EAAD,CAAkBrX,QAnCC,SAAC6O,GACtBA,EAAE3O,iBACF8W,GAAc,MAkCZ,kBAACM,GAAA,EAAD,CACC9W,KAAMuW,EACNrW,QAASuW,EACTM,SAAUN,EACVO,UA5CoB,SAAC3I,GACxB5W,EAAW4W,GACXmI,GAAc,KAsCZ,8CAQA,kBAAClN,EAAA,EAAD,CAASzJ,MAAM,cACd,kBAACyQ,EAAA,EAAD,KACC,kBAAC,IAAD,MACA,0BAAMlX,UAAU,wBAAhB,8BC3FS2J,mBAAK,YASiB,IARpCxO,EAQmC,EARnCA,KACA4a,EAOmC,EAPnCA,OACAvK,EAMmC,EANnCA,SACAqQ,EAKmC,EALnCA,MACAgC,EAImC,EAJnCA,IACAd,EAGmC,EAHnCA,QACA1e,EAEmC,EAFnCA,WACAyf,EACmC,EADnCA,iBAEMna,EAAM3C,cAQN+c,EAAiBhP,uBACtB,SAACvU,GAAD,OAAwB,SAACya,GACxBA,EAAE3O,iBACFjI,EAAW7D,MAEZ,CAAC6D,IAQI2f,EAAgBjP,uBAAY,WACjC,OAAgE,IAAzDgH,EAAOkI,WAAU,SAAC3jB,GAAD,MAA+B,KAArBA,EAAK1B,iBACrC,CAACmd,IAEJ,OACC,oCACC,kBAAChW,EAAA,EAAD,CAAKC,UAAW2D,EAAIua,MACnB,kBAACpa,EAAA,EAAD,CACC9D,UAAW2D,EAAIwa,aACfxG,MAAO,CAAEyG,UAAW,WAFrB,gGAMC,kBAACtM,EAAA,EAAD,OAED,kBAAC/R,EAAA,EAAD,CAAKC,UAAW2D,EAAI0a,MACnB,kBAACte,EAAA,EAAD,CAAKC,UAAW2D,EAAI2a,WACnB,kBAAC,EAAD,MACCvI,EAAO1b,KAAI,SAACC,EAAMC,GAAP,OACX,kBAAC,GAAD,CACCY,KAAMA,EACNoQ,MAAOjR,EACPkR,SAAUA,EACV0R,MAAO3iB,EACP4M,IAAK7M,EAAKE,GACV6D,WAAY0f,EAAezjB,EAAKE,WAKpC,kBAACsX,EAAA,EAAD,MACA,kBAACgL,EAAD,CAAaC,QAASA,EAASC,YAAagB,OAEhB,qBAArBF,GACP,oCACC,kBAAChM,EAAA,EAAD,MACA,kBAAC7K,EAAA,EAAD,MACA,kBAAC6K,EAAA,EAAD,MACCgM,KAGH,kBAAChM,EAAA,EAAD,MACA,kBAAC7K,EAAA,EAAD,MACA,kBAAC6K,EAAA,EAAD,MACA,kBAAC/R,EAAA,EAAD,CAAKC,UAAW2D,EAAIua,MACnB,kBAAC,EAAD,CACCzX,MAAM,kBACNgL,SAAS,EACTlG,MAAOqP,YAAchF,YAAa,GAAD,OAAIiG,OAEtC,kBAAC,EAAD,CACCpV,MAAM,MACNzE,MAAI,EACJyP,SAAS,EACTlG,MAAOqP,YAAchF,YAAa,GAAD,OAAIiI,Y,4FC1FpCU,GAAiB,CACtB,2DACA,+FACA,6EACA,uGAGKvd,GAAY/D,aAAW,SAACwC,GAAD,MAAY,CACxC+e,UAAW,CACV5c,WAAYnC,EAAMoC,WAAW4a,iBAC7Bja,UAAW,MACXnF,QAAS,OACToF,WAAY,SACZ,QAAS,CACR8T,WAAY9W,EAAME,QAAQ,KAG5B8e,YAAa,CACZxb,SAAU,WACV,WAAY,CACXyb,QAAS,KACTxb,MAAO,MACPyb,WAAYC,KAAO,KACnBxd,OAAQ,OACR6B,SAAU,WACV4b,IAAK,MACLC,KAAK,IAAD,OAAMrf,EAAME,QAAQ,GAApB,YAKQ,SAASof,GAAT,GAEgB,IAD9BhJ,EAC6B,EAD7BA,OAEMjW,EAASkf,eACTrb,EAAM3C,KAYZ,OACC,kBAACob,EAAA,EAAD,CACC3V,MAAM,qBACNoD,cAAc,sBAEd,kBAAC9J,EAAA,EAAD,CAAKC,UAAWF,EAAO1C,KACtB,kBAAC6Z,GAAA,EAAD,CAAMjX,UAAWF,EAAOmf,MACtBC,KAAqB7kB,KACrB,SAACqkB,EAAiBnkB,GAAlB,OACC,kBAACwF,EAAA,EAAD,CAAKoH,IAAKuX,EAAS1a,UAAU,MAC5B,kBAAC6S,GAAA,EAAD,CACC7S,UAAU,MACVhE,UAAS,UAAKF,EAAOqf,SAAZ,YACA,IAAR5kB,EAAYuF,EAAOsf,cAAgB,GAD3B,YAEG,IAAR7kB,EAAYoJ,EAAI8a,YAAc,KAElC,kBAACzH,GAAA,EAAD,CAAchX,UAAWF,EAAOuf,cAAhC,UACK9kB,EAAM,EADX,aACiBmkB,GAChB,kBAAC5a,EAAA,EAAD,CAAY9D,UAAW2D,EAAI6a,WA5BpC,SAAsBjkB,GACrB,IAAM+kB,EAAOxU,OAAOiL,OAAOA,GAC3B,MAAyB,qBAAduJ,EAAK/kB,GACRqgB,YAAchF,YAAa,GAAD,OAAI0J,EAAK/kB,MAE5B,IAARA,EACJ,yDACAqgB,YAAc,KAsBP2E,CAAahlB,GACd,kBAAC2V,EAAA,EAAD,CAASzJ,MAAO8X,GAAehkB,IAC9B,kBAAC,KAAD,CAAUqD,MAAM,yB,gCC1F5B,oJA+BO,SAAS4hB,EAAarb,GAC5B,OAAOO,YACN+a,OAAOC,YAxBexb,EAyBd,EAxBF,SAACK,GACP,OAAOA,EAAEob,QAAQzb,KAqBXQ,CAGLP,GA1BI,IAAiBD,EAkDjB,SAAS0W,EAAc1W,GAC7B,OAhB0BkH,EAgBR,IAfX,SAACxO,GACP,OAAKA,EAAEwY,WAAWhK,GAGXxO,EAFA,GAAN,OAAUwO,GAAV,OAAcxO,KAaOsH,GAhBjB,IAAoBkH,EAiCpB,SAASwU,EAAoB1b,GACnC,IAAM2b,EAAK,IAAIC,OAAO,WAAY,KAClC,OAAO5b,EAAIpH,QAAQ+iB,EAAI,IAwBjB,SAASjK,EAAamK,GAE5B,OAAOA,EAAEjjB,QAAQ,MAAO,IAAIA,QAAQ,wBAAyB,O,iTC9F9D,IAKekjB,EALO,eAACC,EAAD,+DAAoB,SAAC3lB,GAC1C,IAAM4lB,EAAM5lB,EAAKkjB,cACjB,OAAOyC,GAAUC,EAAMA,I,QCLxB,SAASC,EAAa5b,GACrB,OAAOE,YAAS,GAATA,CAAaF,GCMd,SAAS6b,EAAkCC,GACjD,OAAO,SAACvkB,EAAKC,GAAN,OAAsBD,EAAI/B,OAAOgC,EAAIskB,KAUtC,SAASC,EAAgBvK,GAC/B,IAAM8F,EAAQ9F,EACZtJ,OAAOuT,KACPnkB,OAAOukB,EAAY,UAAW,IAC9BvkB,OAAOyI,cAAO,GAEhB,OAAOic,KAAKC,MAAML,EAAatE,IAWzB,SAAS4E,EAAqB1K,GAMpC,OD/BD,SAAmBxR,GAClB,IAAMsZ,EAAMsC,EAAa5b,GACzB,OAAOG,YAAyCF,YAAQqZ,GAAM0C,KAAKC,MAA5D9b,CAAmEH,GC6BnEmc,CALO3K,EACZtJ,OAAOuT,KACPnkB,OAAOukB,EAAY,UAAW,IAC9BvkB,OAAOyI,cAAO,IA2BV,SAASqc,EAAkB5K,GACjC,OAAO9R,YACNS,YACCtJ,YAAIqlB,EAAqB1K,IACzB3a,YAlBI,SAAiC2a,GACvC,OAAOA,EACLtJ,OAAOuT,GAAc,IACrBnkB,OAAOukB,EAAY,UAAW,IAC9BvkB,OAAOyI,cAAO,GAcVsc,CAAwB7K,IAF7BrR,CAGE,IAIG,SAASmc,EAAiB9K,GAChC,OAAO9R,YACNS,YACCtJ,YAAI2a,EAAO+K,iBACX1lB,YAAI2a,EAAOgL,aAFZrc,CAGEic,EAAkB5K,EAAOiL,gBAWtB,SAASC,EAAgBlL,GAC/B,OAAO4K,EAAkB5K,EAAOmL,aAAeL,EAAiB9K,GAU1D,SAASoL,EAAiBpL,GAChC,IAAM5R,EAAMC,SAAS,GAAD,OAAI2R,EAAOqL,WAAa,IAC5C,OAAI/c,MAAMF,IAAgB,IAARA,EACV,EAGDoc,KAAKC,MAAMS,EAAgBlL,IAAW5R,EAAM,MAU7C,SAASkd,EAAqBtL,GACpC,OAAO9R,YACNS,YACCtJ,YAAI2a,EAAOuL,gBACX9c,YAAQ2c,EAAiBpL,IAF1BrR,CAGEuc,EAAgBlL,KAWb,SAASwL,EAAmBxL,GAClC,OAAOsL,EAAqBtL,GAAU9R,YAAU8R,EAAOsF,aAUjD,SAASmG,EAAmBzL,GAClC,OAAO9R,YACNS,YACCtJ,YAAI2a,EAAO+F,OACXtX,YAAQuR,EAAOgG,WACf3gB,YAAI2a,EAAOkG,QACX7gB,YAAI2a,EAAOiG,SACXxX,YAAQuR,EAAOmG,OALhBxX,CAME6c,EAAmBxL,O,4PChJVmJ,EAAuB,CACnC,8BACA,8EACA,sEACA,sDAiBKuC,EAAoD,CACzDC,SAAU,YACVC,SAAU,gBACVC,QAAS,YAOGC,EAA+B,sBACxCC,YAAmB5C,EArB4B,CAClDwC,SAAU,MACVC,SAAU,KACVC,QAAS,cAiBkC,CAE3C,CACCG,SAAU,gDACVtW,QAAQ,eAAMgW,GACdO,UAAWzlB,IAAc2c,oBAE1B,CACC6I,SAAU,sDACVtW,QAAQ,eAAMgW,GACdO,UAAWzlB,IAAc4c,oBAE1B,CACC4I,SAAU,wDACVtW,QAAQ,eAAMgW,GACdO,UAAWzlB,IAAcyc,iBAE1B,CACC+I,SACC,oEACDtW,QAAQ,eAAMgW,GACdO,UAAWzlB,IAAc0c,gCAE1B,CACC8I,SAAU,+CACVtW,QAAQ,eAAMgW,GACdO,UAAWzlB,IAAc6c,mBAE1B,CACC2I,SAAU,4DACVtW,QAAQ,eAAMgW,GACdO,UAAWzlB,IAAcuc,yBASdmJ,EAAgC,CAC5C,CACCta,KAAMua,IACNtkB,MAAOqa,IAAM,KACbkK,OAAQ,YAET,CACCxa,KAAMya,IACNxkB,MAAOykB,IAAI,KACXF,OAAQ,YAET,CACCxa,KAAM2a,IACN1kB,MAAOghB,IAAO,KACduD,OAAQ,a,yHClGGI,EAAqD,CACjE7jB,SAAU,kBAAM,MAChB8jB,eAAe,EACfC,eAAe,EACf/oB,SAAU,GACVgpB,oBAAqB,GACrBvpB,MAAO,IAMOwpB,EAFgBhkB,wBAAc4jB,G,wDCK9BK,EAVa,SAC3BhoB,EACA0R,GAEA,OAAO,2BACH1R,GADJ,IAEC4nB,cAAelW,KCSFuW,EAfY,SAC1BjoB,EACA0R,GAC4B,IACpBnT,EAA+CmT,EAA/CnT,MAAOO,EAAwC4S,EAAxC5S,SAAgBgpB,EAAwBpW,EAA9BrR,KAEzB,OAAO,2BACHL,GADJ,IAEC6nB,eAAe,EACftpB,QACAO,WACAgpB,yB,0BC4BaI,EAlCU,SACxBloB,EACA0R,GAC4B,IACpByW,EAA6BzW,EAA7ByW,UAAqBC,EAAQ1W,EAAlB5S,SAEbupB,EAAcroB,EAAMlB,SAASmC,QAClC,SAACqnB,EAA6C5oB,GAC7C,OAAO4oB,EAAWnpB,OACjBO,EAAKE,KAAOwoB,EAAZ,2BACQ1oB,GADR,IACcrB,MAAOiB,YAAK,GAAD,mBAAKI,EAAKrB,OAAV,EAA0B,OAAT8pB,QAAS,IAATA,OAAA,EAAAA,EAAWvoB,KAAM,QACxDF,KAGL,IAaD,OAT2B,IADPM,EAAMlB,SAAS+S,OAAOC,YAAWsW,IACrC3N,QAEf4N,EAAYlJ,KAAZ,2BACI/gB,YAAgB+pB,EAAU3qB,SAAU2qB,EAAU5qB,kBADlD,IAECc,MAAO,EAAU,OAAT8pB,QAAS,IAATA,OAAA,EAAAA,EAAWvoB,KAAM,IACzBA,GAAIwoB,KAIC,2BACHpoB,GADJ,IAEC8nB,oBAAoB,GAAD,mBAAM9nB,EAAM8nB,qBAAZ,CAAiCK,IACpDrpB,SAAUupB,KCbGE,EArBU,SACxBvoB,EACA0R,GAC4B,IACpBrR,EAAaqR,EAAbrR,KAAMT,EAAO8R,EAAP9R,GAER4oB,EAAexoB,EAAM8nB,oBAAoB7mB,QAC9C,SAACwnB,EAAqC5N,GACrC,OAAO4N,EAAWtpB,OACjB0b,EAAQjb,KAAOA,EAAf,uCAAyBib,GAAYxa,GAArC,IAA2CT,GAAIib,EAAQjb,KAAOib,KAGhE,IAGD,OAAO,2BACH7a,GADJ,IAEC8nB,oBAAqBU,KCARE,EAjBa,SAC3B1oB,EACA0R,GAEA,IAAM2W,EAAcroB,EAAMlB,SAASmC,QAClC,SAACqnB,EAA6C5oB,GAC7C,OAAO4oB,EAAWnpB,OAAOO,EAAKE,KAAO8R,EAAQ9R,GAAK8R,EAAUhS,KAE7D,IAGD,OAAO,2BACHM,GADJ,IAEClB,SAAUupB,KCPGM,EALQ,SAAIrf,GAAJ,IAAY+b,EAAZ,+DAA+B,SAAC3lB,GACtD,IAAM4lB,EAAM5lB,IAAS4J,EACrB,OAAO+b,GAAUC,EAAMA,ICoCTsD,EAnCU,SACxB5oB,EACA0R,GAC4B,IACpBmX,EAAyBnX,EAAzBmX,SAAUnqB,EAAegT,EAAfhT,WAEZ8pB,EAAexoB,EAAM8nB,oBAAoBjW,OAC9CC,YAAW+W,GAAU,IAGhBR,EAAcroB,EAAMlB,SAASmC,QAClC,SAACqnB,EAA6C5oB,GAC7C,GAAIA,EAAKE,KAAOlB,EAAY,CAC3B,IAAMQ,EAAWQ,EAAKrB,MAAMwT,OAAO8W,EAAeE,GAAU,IAC5D,OAAI3pB,EAASub,OAAS,EACd6N,EAAWnpB,OAAX,2BACHO,GADG,IAENrB,MAAOiB,YAAKJ,MAGPopB,EAGR,OAAOA,EAAWnpB,OAAOO,KAE1B,IAGD,OAAO,2BACHM,GADJ,IAEC8nB,oBAAoB,YAAKU,GACzB1pB,SAAUupB,KCzBGS,EAVC,SACf9oB,EACA0R,GAEA,OAAO,2BACH1R,GADJ,IAECzB,MAAM,GAAD,mBAAMyB,EAAMzB,OAAZ,CAAmBmT,OCcXqX,EApBI,SAClB/oB,EACA0R,GAC4B,IACpBrR,EAAaqR,EAAbrR,KAAMT,EAAO8R,EAAP9R,GACRopB,EAAWhpB,EAAMzB,MAAM0C,QAC5B,SAACqnB,EAA0CzN,GAC1C,OAAOyN,EAAWnpB,OACjB0b,EAAQjb,KAAOA,EAAf,uCAAyBib,GAAYxa,GAArC,IAA2CT,GAAIib,EAAQjb,KAAOib,KAGhE,IAGD,OAAO,2BACH7a,GADJ,IAECzB,MAAOyqB,KCHMC,EAZI,SAClBjpB,EACA0R,GAEA,IAAMwX,EAAgBlpB,EAAMzB,MAAMsT,OAAOC,YAAWJ,GAAS,IAE7D,OAAO,2BACH1R,GADJ,IAECzB,MAAO2qB,KCuEMC,EA1BW,SACzBnpB,EACA0R,GAC4B,IACpBjT,EAAsBiT,EAAtBjT,MAAOC,EAAegT,EAAfhT,WAET8pB,EAAY,sBAAOxoB,EAAM8nB,qBAAb,YAAqCrpB,IACjD2qB,EAAmB3qB,EAAMwC,QAAO,SAACooB,EAAe3pB,GACrD,MAA0B,kBAAZA,EAAKE,GAAZ,sBAAkCypB,GAAlC,CAAuC3pB,EAAKE,KAAMypB,IACvD,IAEGhB,EAhDwB,SAC9BiB,EACAhlB,EACAvG,EACAM,EACAK,GAGA,MAAuB,qBADP4qB,EAAWC,KAAKzX,YAAWpT,IAEnC4qB,EAAWroB,QACjB,SAACqnB,EAA6CzN,GAC7C,OAAOyN,EAAWnpB,OACjB0b,EAAQjb,KAAOlB,EAAf,2BAEMmc,GAFN,IAGGxc,MAAOiB,YAAK,GAAD,mBAAKub,EAAQxc,OAAb,YAAuBA,OAElCwc,KAGL,IAGKyO,EAAWnqB,OAAX,2BACHf,YAAgBkG,EAAQvG,IADrB,IAEN6B,GAAIlB,EACJL,MAAOiB,YAAKjB,MAsBOmrB,CACnBxpB,EAAMlB,SACNL,EAAM,GAAGjB,SACTiB,EAAM,GAAGlB,gBACT6rB,EACA1qB,GAGD,OAAO,2BACHsB,GADJ,IAEC8nB,oBAAqBU,EACrB1pB,SAAUupB,KChBGoB,EAzCX,SACHzpB,EACA0pB,GAEA,OAAQA,EAAO7iB,MACd,KAAK8iB,IAA2BC,oBAC/B,OAAO5B,EAAoBhoB,EAAO0pB,EAAOhY,SAE1C,KAAKiY,IAA2BE,mBAC/B,OAAO5B,EAAmBjoB,EAAO0pB,EAAOhY,SAEzC,KAAKiY,IAA2BG,iBAC/B,OAAO5B,EAAiBloB,EAAO0pB,EAAOhY,SAEvC,KAAKiY,IAA2BI,iBAC/B,OAAOxB,EAAiBvoB,EAAO0pB,EAAOhY,SAEvC,KAAKiY,IAA2BK,oBAC/B,OAAOtB,EAAoB1oB,EAAO0pB,EAAOhY,SAE1C,KAAKiY,IAA2BM,iBAC/B,OAAOrB,EAAiB5oB,EAAO0pB,EAAOhY,SAEvC,KAAKiY,IAA2BO,SAC/B,OAAOpB,EAAQ9oB,EAAO0pB,EAAOhY,SAE9B,KAAKiY,IAA2BQ,YAC/B,OAAOpB,EAAW/oB,EAAO0pB,EAAOhY,SAEjC,KAAKiY,IAA2BS,WAC/B,OAAOnB,EAAWjpB,EAAO0pB,EAAOhY,SAEjC,KAAKiY,IAA2BU,mBAC/B,OAAOlB,EAAkBnpB,EAAO0pB,EAAOhY,SAExC,QACC,OAAO1R,I,4CCfJsqB,EAAuB,uCAAG,WAC/BC,EACAC,EACAC,EACAf,EACAlsB,GAL+B,6BAAAmB,EAAA,yDASX,IAFP4rB,EAAQ1Y,OAAO6Y,YAAwBhB,IAE3CjP,OATsB,wBAUxBpa,EAVwB,YAUbkqB,GACXzrB,EAXwB,YAWT0rB,GACfG,EAAiC7sB,YAAiBN,EAAUksB,GAZpC,SAcb3qB,IAAuB6rB,OAAOD,GAdjB,cAcxB/qB,EAdwB,OAexByoB,EAA6CjqB,YAClDZ,EACAksB,GAjB6B,UAoBL9qB,IAAsBgsB,OAAtB,2BACrBvC,GADqB,IAExBhqB,MAAO,CAACuB,MAtBqB,eAoBxBlB,EApBwB,OAwBxBmsB,EAAmB/rB,EAASK,OAAT,2BACrBkpB,GADqB,IAExBzoB,GAAIlB,EACJL,MAAO,CAACuB,MA3BqB,UA6BxBhB,IAAsBW,OAAOb,EAA7B,2BACF2pB,GADE,IAELhqB,MAAO,CAACuB,MA/BqB,eAiCxBkrB,EAAezqB,EAAKlB,OAAL,2BAAiBwrB,GAAjB,IAA0B/qB,QAjCjB,kBAmCvB,CAACkrB,EAAcD,EAAkBJ,IAnCV,iCAsCxB,CAACF,EAASC,EAAaC,IAtCC,4CAAH,8DA4HdM,EAtCiB,SAAC1kB,GAEZ,IAEVpG,EACNH,qBAAWC,KADdC,MAASC,cAFS,EAOO+qB,qBACzBvB,EACA9B,GATkB,mBAOZ3nB,EAPY,KAOL8D,EAPK,KAYnBwQ,qBAAU,YACT,OAAIrU,QAAJ,IAAIA,OAAJ,EAAIA,EAAeL,KAGlBqrB,QAAQC,IAAI,CACXnsB,IAAuBosB,aAAalrB,EAAcL,IAClDhB,IAAsBusB,aAAalrB,EAAcL,IACjDwrB,IAAmBD,aAAalrB,EAAcL,MAC5CyrB,KA1DkB,SACvBvnB,EACAtG,GAFuB,8CAGnB,WAAO8tB,GAAP,yBAAA3sB,EAAA,2EAC4B2sB,EAD5B,GACGjrB,EADH,KACSvB,EADT,KACmBP,EADnB,cAEc+rB,EACjBjqB,EACAvB,EACAP,EACA,gBACAf,GAPG,cAEE+tB,EAFF,gBAScjB,EACjBiB,EAAI,GACJA,EAAI,GACJA,EAAI,GACJ,iBACA/tB,GAdG,OASEguB,EATF,OAiBJ1nB,EAAS,CACR+C,KAAM8iB,IAA2BE,mBACjCnY,QAAS,CACRrR,KAAK,YAAKmrB,EAAI,IACd1sB,SAAS,YAAK0sB,EAAI,IAClBjtB,MAAM,YAAKitB,EAAI,OAtBb,2CAHmB,sDA0DbC,CAAgB3nB,EAAU7D,EAAcL,OAE/C,CAACK,IAEJ,IAAM0Q,EAAQzC,mBACb,8BAAC,eACGlO,GADJ,IAEC8D,eAED,CAAC9D,IAIF,OAAO,kBAAC,EAAuB0rB,SAAxB,eAAiC/a,MAAOA,GAAWtK,M,sFChIrD+kB,EAAqB,I,kDAnB1B,aAAe,uCACRzmB,IAAmBA,IAAkBpG,O,gDAUxC8B,GAAoE,IAAD,OACtE,OAAOC,KAAKF,SAASzC,YAAY,KAAM2C,KAAK5C,MAAM6C,MAAM,WACvD,OAAO,EAAK7C,MAAMiuB,IAAItrB,U,GAtBeF,MA8BzBirB,O,iCC7Cf,iFAgBaQ,EAAoB,SAChCrE,EACA1W,GAEA,OAAOA,EAAQgb,YAAuBhb,EAAS,SAAU0W,KAU7CL,EAAqB,SACjCD,EACApW,GAEA,OAAOoW,EAAUxnB,KAChB,SAACqsB,GAAD,MAAoC,CACnC3E,SAAU2E,EACVjb,gB,iCCjBY6Z,IANiB,SAAC3sB,GAAD,OAAoC,SACnE2B,GAEA,OAAOA,EAAKnC,kBAAoBQ,K,2HCMlB,SAAS8kB,EAAT,GAEgB,IAD9BrX,EAC6B,EAD7BA,QAEA,OACC,kBAAC8J,EAAA,EAAD,CAASzJ,MAAM,UACd,kBAACyQ,EAAA,EAAD,CAAY9Q,QAASA,GACpB,kBAAC,IAAD,MACA,0BAAMpG,UAAU,wBAAhB,mB,iCC9BJ,aAWM2mB,EAAeC,YAA8B,CAClDpsB,GAAI,QACJqsB,QAAS,UACTC,OAAQ,CACPnU,QAAS,CACRoU,GAAI,CACHC,QAAS,UACTC,OAAQ,YAGVC,QAAS,CACRH,GAAI,CACHE,OAAQ,YAGVE,QAAS,CACRJ,GAAI,CACHK,MAAO,CACNjS,OAAQ,gBAOEwR,O,wUCOAU,EA5BA,uCAAG,WACjB3oB,EACAQ,GAFiB,iBAAA3F,EAAA,sEAICwH,IAAcykB,OAAO,CACtCrqB,KAAM+D,EAAO/D,OALG,cAIXgM,EAJW,OAQXmgB,EARW,2BASbpoB,GATa,IAUhB1E,GAAI2M,IAGLzI,EAAS,CACR+C,KAAM2K,IAAkBmb,UACxBjb,QAASgb,IAGV5oB,EAAS,CACR+C,KAAM2K,IAAkBO,oBAGxBL,QAASgb,EAAU9sB,KAtBH,mBAyBV,GAzBU,2CAAH,wD,gBCwGAgtB,EA5FO,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,YAChB/oB,EAAahE,qBAAWC,KAAxB+D,SAIFmb,EAAUC,cAL4D,EAMxClU,mBAAS,GAN+B,mBAMrE8hB,EANqE,KAMzDC,EANyD,KAStEtJ,EAAOuJ,YAAU,CACtBC,cARoC,CACpCC,aAAc,IAQdC,SAAU,SAAChS,GACV,IAAMiS,EAAwB,GAQ9B,MAL4B,KAAxBjS,EAAO+R,eAEVE,EAAOF,aAAe,gCAGhBE,GAERC,SAAS,WAAD,4BAAE,WAAOlS,GAAP,SAAAxc,EAAA,sEAEH8tB,EAAU3oB,EAAU,CACzBlE,GAAIa,cACJF,KAAM4a,EAAO+R,eAJL,OAQTzJ,EAAK6J,YACLT,GAAY,WAEX5N,EAAQE,KAAKxd,IAAc0V,gBAXnB,2CAAF,mDAAC,KAyBV/C,qBAAU,WACTyY,EAActJ,EAAKtI,OAAO+R,aAAazS,UACrC,CAACgJ,EAAKtI,OAAO+R,eAShB,IAAMK,EAAW,SAChBH,EACA7gB,GAEA,MAA8B,qBAAhB6gB,EAAO7gB,IAAwC,KAAhB6gB,EAAO7gB,IAGrD,OACC,0BACCihB,YAAU,EACVC,aAAa,MACbJ,SAAU5J,EAAKiK,aACf9tB,GAAG,yBAEH,kBAACiV,EAAA,EAAD,CACCjV,GAAG,eACHW,KAAK,eACLmQ,MAAM,gBACNvH,QAAQ,WACR4H,WAAS,EACTH,SAxCH,SAAsByJ,GACjBA,EAAEE,OAAO5J,MAAM8J,OAlDF,GAmDhBJ,EAAE3O,iBAIH+X,EAAKkK,cAAc,eAAgBtT,EAAEE,OAAO5J,QAmC1CA,MAAO8S,EAAKtI,OAAO+R,aACnB1T,MAAO+T,EAAS9J,EAAK2J,OAAQ,gBAC7BnS,WACCsS,EAAS9J,EAAK2J,OAAQ,gBACnB3J,EAAK2J,OAAOF,aADf,UAEMJ,EAFN,YA7Fc,IAiGfpU,WAAS,M,QC/FPkV,EAAevrB,aAAW,SAACwC,GAAD,MAAY,CAC3Cif,QAAS,CACR1R,YAAa,QACbF,YAAarN,EAAM0C,QAAQgO,QAC3B3M,YAAa,cACbhB,UAAW/C,EAAME,QAAQ,GACzBwD,QAAQ,GAAD,OAAK1D,EAAME,QAAQ,GAAnB,cAA2BF,EAAME,QAAQ,GAAzC,MACP,MAAO,CACNyD,OAAQ,QA4GIqlB,EArFS,SAAC,GAImB,IAH3CC,EAG0C,EAH1CA,YAEGznB,EACuC,iCAClB2E,oBAAkB,GADA,mBACnCgB,EADmC,KAC7BgI,EAD6B,KAEpC9O,EAAS0oB,IAgBTziB,EAAc,WACnB6I,GAAQ,IAQT,OACC,oCACC,kBAAC5I,EAAA,EAAD,eACCpI,MAAM,UACNmG,QAAQ,YACR4kB,KAAK,QACLviB,QAxBgB,WAClBwI,GAAQ,KAyBF3N,GAEHynB,GAEF,kBAAC1V,EAAA,EAAD,CACCpM,KAAMA,EACNE,QAASf,EACT6iB,kBAAgB,0BAChBjd,WAAS,EACTpJ,SAAS,MAET,kBAAC0Q,EAAA,EAAD,CAAazY,GAAG,2BAAhB,+BAGA,kBAAC0Y,EAAA,EAAD,KACC,kBAACpP,EAAA,EAAD,6GAEsC,KAEtC,kBAACgO,EAAA,EAAD,MACA,kBAAC,EAAD,CAAe2V,YAjCQ,SAACoB,GAC3B9iB,IACA8iB,QAiCE,kBAAC3V,EAAA,EAAD,CAAelT,UAAWF,EAAO4e,SAChC,kBAACvL,EAAA,EAAD,gIAKD,kBAACC,EAAA,EAAD,KACC,kBAACpN,EAAA,EAAD,CAAQI,QAASL,EAAanI,MAAM,WAApC,UAGA,kBAACoI,EAAA,EAAD,CACCvE,KAAK,SACLsC,QAAQ,YACRnG,MAAM,UACNygB,KAAK,yBAJN,oB,mGC/GU,SAASyK,EAAiBrnB,GACxC,OAA+C,IAAxC,CAAC,OAAQ,YAAYuU,QAAQvU,G,uCCuCtB,SAASsnB,EAAT,GAG0B,IAFxCniB,EAEuC,EAFvCA,KACAE,EACuC,EADvCA,QACuC,EAEHkiB,qBAAWrC,KAFR,mBAEhCsC,EAFgC,KAElBC,EAFkB,OAGKtjB,oBAAS,GAHd,mBAGhC+K,EAHgC,KAGhBwY,EAHgB,KAIjCtP,EAAUC,cACRtf,EAAOoW,cAAPpW,GAL+B,EAMfC,cAAjBI,EANgC,sBAOH+K,qBAPG,mBAOhCwjB,EAPgC,KAOpBC,EAPoB,OAQDzjB,oBAAS,GARR,mBAQhC0jB,EARgC,KAQnBC,GARmB,YA6BnC3B,YAAyB,CAC5BC,cAAe,CACd5W,YAAa,GACbhM,WAAY,SACZC,gBAAiB,aACjB8L,gBAAiB,IAAIjY,KACrBgY,cAAe,IAAIhY,MAEpBkvB,SAAS,WAAD,4BAAE,WAAOuB,GAAP,qBAAAjwB,EAAA,0DACL6vB,KAAU,OAAIvuB,QAAJ,IAAIA,OAAJ,EAAIA,EAAeL,IADxB,uBAGFS,EAHE,uCAIJmuB,GACAI,GALI,IAMPlI,gBAxBoBmI,EAyBnBL,EAAWnkB,WAzB6BxD,EA0BxC+nB,EAAWvkB,YAzBP6jB,EAAiBW,IAAYX,EAAiBrnB,GA2BhD8f,YAAmB6H,GACnBA,EAAW9H,gBACdoI,UAAWpf,cACX2G,YAAaN,EAAiB6Y,EAAWvY,YAAc,KAGlD0Y,EAAUC,YAAK3uB,EAAM,CAAC,OAhBpB,SAkBkB6J,IAAW0gB,OAAOmE,GAlBpC,OAkBFE,EAlBE,OAoBFC,EAAQC,YAAgBJ,EAAShZ,GAEvCkJ,EAAQE,KAAR,UACItd,YAAoBF,IAAcoc,QAAS,CAC7C,CAAC,MAAD,UAAWkR,MAFb,YAGOC,IAGPhjB,IA5BQ,iCAlBX,IAAwB2iB,EAAqBhoB,IAkBlC,OAAF,mDAAC,KAbTuoB,GAxBsC,GAwBtCA,UACAC,GAzBsC,GAyBtCA,aACAlU,GA1BsC,GA0BtCA,OACAuS,GA3BsC,GA2BtCA,aACAC,GA5BsC,GA4BtCA,cA0CDrZ,qBAAU,WACJyB,GACJ4X,GAAc,cAAe,MAE5B,CAAC5X,EAAgB4X,KAIpB,IAAM2B,GAAkBnb,sBAAW,sBAAC,8BAAAxV,EAAA,kEAC/BsB,QAD+B,IAC/BA,OAD+B,EAC/BA,EAAeL,IADgB,iCAGfsK,IAAWrL,SAASe,GAHL,UAG5BS,EAH4B,8BAMjCiuB,EAAY,UANqB,iCAWlCG,EAAcpuB,GACd+uB,GAAU,CACT/Y,YAAahW,EAAKgW,YAClBhM,WAAYhK,EAAKgK,WACjBC,gBAAiBjK,EAAKiK,gBACtB8L,gBAAiB/V,EAAK+V,gBACtBD,cAAe9V,EAAK8V,gBAjBa,UAoBdD,YAAe7V,EAAMJ,EAAcL,GAAImW,GApBzB,QAoB5BwZ,EApB4B,OAqBlCZ,IAAyB,IAAVY,GAGU,KAArBlvB,EAAKgW,aACRkY,GAAkB,GAGnBD,EAAY,WA5BsB,4CA8BjC,CAACruB,EAAequB,EAAa1uB,EAAIwvB,GAAWrZ,IAE/CzB,qBAAU,WAELtI,GACHsjB,OAEC,CAACA,GAAiBtjB,IAIrB,IAAMwjB,GAAiBrb,sBAAW,sBAAC,4BAAAxV,EAAA,kEAC9BsB,QAD8B,IAC9BA,OAD8B,EAC9BA,EAAeL,IADe,gCAEbsW,YACnBiF,GACAlb,EAAcL,GACdmW,GALgC,OAE3BwZ,EAF2B,OAOjCZ,IAAyB,IAAVY,GAPkB,2CAShC,CAACpU,GAAQlb,EAAe8V,IAE3BzB,qBAAU,WACTkb,OACE,CAACA,KAkBJ,IAAMC,GAAkB,SAAChK,EAAmBzb,GAAmB,IAAD,EAClB0lB,YAC1CjK,EACAzb,EACAmR,IAHO/E,EADqD,EACrDA,gBAAiBD,EADoC,EACpCA,cAOzBwX,GAAc,kBAAmBvX,GAAiB,GAClDuX,GAAc,gBAAiBxX,GAAe,IAmE/C,OAhEA7B,qBAAU,WACTmb,GAAgB,kBAAmBtU,GAAO/E,mBACxC,CAAC+E,GAAO7Q,gBAAiB6Q,GAAO/E,kBA+DlC,kBAACgC,EAAA,EAAD,CACCpM,KAAMA,EACNE,QAASA,EACT8hB,kBAAgB,2BAChBjd,WAAS,EACTpJ,SAAS,MAET,kBAAC0Q,EAAA,EAAD,CAAazY,GAAG,4BAAhB,eACA,0BAAMytB,SAAUK,IACf,kBAACpV,EAAA,EAAD,KA/DH,WACC,OAAQ+V,EAAa1d,OACpB,IAAK,UACJ,OAAO,kBAACgf,EAAA,EAAD,MACR,IAAK,UACJ,OACC,oCACC,kBAACzmB,EAAA,EAAD,CAAYE,UAAU,MAAtB,gGAIA,6BACA,kBAACF,EAAA,EAAD,CAAYE,UAAU,MAAtB,oDAGA,kBAAC8N,EAAA,EAAD,MACA,kBAAC,IAAD,CACCrQ,KAAMsU,GAAO9Q,WACbD,UAAW+Q,GAAO7Q,gBAClBuJ,UAAWsH,GAAO/E,gBAClBtC,QAASqH,GAAOhF,cAChBL,YAAaqF,GAAO9E,YACpBN,eAAgBA,IAEjB,kBAAC,IAAD,CACCF,gBAAiBsF,GAAO9Q,WACxBuL,qBAAsBuF,GAAO7Q,gBAC7BsG,SAAUye,GACVxb,UAAWsH,GAAO/E,gBAClBtC,QAASqH,GAAOhF,cAChB9B,aAAcob,GACd3Z,YAAaqF,GAAO9E,YACpB1B,YAAa,SAAC0F,GACbkU,EAAkBlU,EAAEE,OAAOlF,UAE5BU,eAAgBA,EAChBc,SAAS,EACTC,oBAAoB,IAEpB4X,GACA,oCACC,kBAACxX,EAAA,EAAD,MACA,kBAAC,IAAD,QAKL,IAAK,UACL,QACC,OAAO,kBAACjS,EAAA,EAAD,OAcS2qB,IAChB,kBAACpX,EAAA,EAAD,KACC,kBAACpN,EAAA,EAAD,CAAQI,QAASU,GAAjB,UACA,kBAACd,EAAA,EAAD,CACCvE,KAAK,SACLsC,QAAQ,YACRnG,MAAM,UACNyV,SAAiC,YAAvB4V,EAAa1d,QA3GzB8F,YAAQ0E,GAAO/E,mBACfK,YAAQ0E,GAAOhF,gBAChBuY,GACC3Y,GAAyC,KAAvBoF,GAAO9E,aAoGxB,W,mNC1QE,SAAewZ,GAAtB,mC,8CAAO,WACNC,GADM,iBAAAnxB,EAAA,+EAIcoxB,aAASD,GAJvB,UAKe,kBADdE,EAJD,8BAOE,IAAIC,MACT,sEARG,cAYCC,EAA2BC,KAAKC,MAAMJ,GAZvC,kBAaEE,GAbF,wCAgBC,IAAID,MAAM,KAAEI,SAhBb,2D,sBA6BA,SAASC,GAAiBjwB,GAChC,IAAMkwB,EAAOrgB,OAAOqgB,KAAKlwB,GASzB,GAAoB,IAAhBkwB,EAAK9V,OAAc,OAAO,EAG9B,IAAK+V,aAAQD,EAXsB,CAClC,iBACA,sBACA,0BACA,gBAO8B,OAAO,EAItC,IAAK,IAAIE,EAAI,EAAGA,EAAIF,EAAK9V,OAAQgW,IAChC,GAAsB,OAAlBpwB,EAAKkwB,EAAKE,OACRpwB,EAAKkwB,EAAKE,IAAIC,YAA2C,UAA7BrwB,EAAKkwB,EAAKE,IAAIC,YAC9C,OAAO,EAKV,OAAO,EAGD,SAAeC,GAAtB,qC,8CAAO,WACNlzB,EACA4C,GAFM,eAAA1B,EAAA,6DAIAmxB,EAAO,IAAIc,KAAK,CAACT,KAAKU,UAAUxwB,KAJhC,kBAMCywB,aAAWrzB,EAAIqyB,EAAM,CAC1BiB,iBAAiB,IAPb,iCASE,GATF,yH,sBAuBA,SAAeC,GAAtB,mC,8CAAO,WACNd,GADM,iBAAAvxB,EAAA,6DAIAsyB,EAAQxwB,cAGdywB,aAAIhB,EAAM,yCAA0Ce,GAO9CE,EAA4D,CACjEC,cAAe,GACfC,eAAgB,GAChBC,iBAAkB,GAClBC,oBAAqB,GACrBC,QAAS,GACTC,cAAe,GACfC,SAAU,GACVC,SAAU,GACVC,WAAY,IAdwB,CACpC,sBACA,0BACA,eAgBWC,SAAQ,SAACtlB,GACpB,GAAkB,OAAd2jB,EAAK3jB,GAAe,CAAC,IAAD,EACjBulB,EAAO,UAAG5B,EAAK3jB,UAAR,aAAG,EAAWlM,KAAKA,KAC5ByxB,GACHA,EAAQD,SAAQ,SAACxxB,EAAM0xB,GAAU,IACxBC,EAAS3xB,EAAT2xB,KACJA,GACHA,EAAKH,SAAQ,SAACI,EAAKC,GAClB,IAAMtyB,EAAKa,cAWX,GAVAywB,aACChB,EADE,UAEC3jB,EAFD,sBAEkBwlB,EAFlB,kBAEgCG,EAFhC,cAGFjB,GAIDC,aAAIhB,EAAD,UAAU3jB,EAAV,sBAA2BwlB,EAA3B,kBAAyCG,EAAzC,QAAqDtyB,GAIpC,gBAAnBS,EAAK8xB,WACc,aAAnB9xB,EAAK8xB,UACJ,CAAC,IAAD,EACKp0B,GACL,UAAAmyB,EAAK3jB,UAAL,eAAWlM,KAAKA,KAAK0xB,GAAMC,KAAKE,GAAM30B,uBACtCwI,EACGhI,IACoB,gBAAnBsC,EAAK8xB,WAERhB,EAAepzB,GAAWohB,KAAKvf,GAGT,aAAnBS,EAAK8xB,WACRjB,aACChB,EADE,UAEC3jB,EAFD,sBAEkBwlB,EAFlB,kBAEgCG,EAFhC,WAGFf,EAAepzB,gBAhEnB,kBA4ECmyB,GA5ED,4C,sBA+EQ,SAAekC,GAA9B,mC,8CAAe,WACdtC,GADc,iCAAAnxB,EAAA,6DAEd0zB,IAFc,mDAKMxC,GAAeC,GALrB,aAKPI,EALO,kBAOOD,OAPP,sBASN,IAAIA,MAAMC,EAAKG,SATT,UAYRC,GAAiBJ,GAZT,sBAcN,IAAID,MACT,wGAfW,UAmBCoC,EAnBD,kCAmBmBrB,GAAmBd,GAnBtC,iDAmB8CA,EAnB9C,eAmBP7vB,EAnBO,KAqBPiyB,EAAW,CAChBjyB,EAAKkyB,eACF5B,GAAiB3sB,KAAU3D,EAAKkyB,gBAChCtH,QAAQuH,SAAQ,GACnBnyB,EAAKoyB,oBACF9B,GAAiBnmB,KAAenK,EAAKoyB,qBACrCxH,QAAQuH,SAAQ,GACnBnyB,EAAKqyB,wBACF/B,GAAiBhsB,KAAmBtE,EAAKqyB,yBACzCzH,QAAQuH,SAAQ,GACnBnyB,EAAKsyB,YACFhC,GAAiBnsB,KAAOnE,EAAKsyB,aAC7B1H,QAAQuH,SAAQ,IAjCP,kBAoCNvH,QAAQC,IAAIoH,IApCN,wCAuCP,IAAIrC,MAAM,KAAEI,SAvCL,2D,oCC5ITjqB,GAAY/D,aAAW,SAACwC,GAAD,MAAY,CACxC+tB,SAAU,CACTjX,WAAY9W,EAAME,QAAQ,IAE3B8tB,YAAa,CACZjrB,UAAW/C,EAAME,QAAQ,GACzB,sBAAuB,CACtB4W,WAAY9W,EAAME,QAAQ,KAG5B+tB,OAAQ,CACPrwB,QAAS,OACToF,WAAY,SACZd,aAAclC,EAAME,QAAQ,GAC5B,YAAa,CACZ4W,WAAY9W,EAAME,QAAQ,IAE3B,aAAc,CACbiC,WAAYnC,EAAMoC,WAAW4a,uBAqB1BkR,GAAsB/G,YAA4C,CACvEpsB,GAAI,eACJqsB,QAAS,OACTC,OAAQ,CACP8G,KAAM,CACL7G,GAAI,CACH8G,MAAO,YAGTlb,QAAS,CACRoU,GAAI,CACHC,QAAS,UACTC,OAAQ,YAGVC,QAAS,CACRH,GAAI,CACHK,MAAO,SAGTD,QAAS,CACRJ,GAAI,CACHK,MAAO,CACNjS,OAAQ,aAQP2Y,GAAgD,CACrDX,eAAgB,cAChBE,oBAAqB,oBACrBC,wBAAyB,wBACzBC,YAAa,yBAGRQ,GAAiB,CACtBC,QAAS,CACRtP,QAAS,oCACTuP,KAAMC,MAEPC,OAAQ,CACPzP,QAAS,8BACTuP,KAAMG,MAEPC,QAAS,CACR3P,QAAS,GACTuP,KAAMK,OAIO,SAASC,GAAT,GAGgB,IAF9B3nB,EAE6B,EAF7BA,KACAE,EAC6B,EAD7BA,QAEMnD,EAAM3C,KADiB,EAELgoB,qBAAW2E,IAFN,mBAEtBa,EAFsB,KAEbC,EAFa,KAGrB/vB,EAAahE,qBAAWC,KAAxB+D,SAHqB,EAKGkH,mBAAS,IALZ,mBAKtB8oB,EALsB,KAKZC,EALY,OAMG/oB,mBAAyB,EACxD,GACA,EACA,IAAIilB,MAAM,UATkB,mBAMtB3E,EANsB,KAMZ0I,EANY,OAWLhpB,qBAXK,mBAWtBglB,EAXsB,KAWhBiE,EAXgB,OAYKjpB,qBAZL,mBAYtBkpB,EAZsB,KAYXC,EAZW,OAaKnpB,oBAAS,GAbd,mBAatBqnB,EAbsB,KAaX+B,EAbW,KAevBC,EAAyBlgB,sBAAW,sBAAC,sCAAAxV,EAAA,0DACtCqxB,EADsC,iCAEtBH,GAAeG,GAFO,aAEnCE,EAFmC,kBAIrBD,QAAUK,GAAiBJ,GAJN,uBAKxCiE,OAAapuB,GAL2B,6BASb,OAAxBmqB,EAAKqC,eATgC,qBAYtB,KAFZ/0B,GAAW,UAAA0yB,EAAKqC,eAAelyB,KAAKA,YAAzB,mBAAgC,GAAG2xB,YAAnC,mBAA0C,UAA1C,eAA8CpyB,MAAO,GAV9B,kCAaVuG,IAActH,SAASrB,GAbb,eAajC82B,EAbiC,OAcvCH,EAAaG,GAd0B,2BAoB1CH,OAAapuB,GApB6B,4CAqBxC,CAACiqB,IAEJ1b,qBAAU,WACa,SAAlBsf,EAAQjjB,QACXsjB,OAAQluB,GACRouB,OAAapuB,MAEZ,CAAC6tB,IAEJtf,qBAAU,WACT+f,MACE,CAACrE,EAAMqE,IAEV,IAAME,EAAc,uCAAG,4BAAA51B,EAAA,yDACjBqxB,EADiB,uBAErB+D,EAAY,iCACZF,EAAK,UAHgB,iCAOtBA,EAAK,SAPiB,kBASHzB,GAAapC,EAAMqC,GAThB,cASf/M,EATe,iBAUfhU,aAAkBxN,GAVH,QAWrBkwB,EAAY1O,GACZuO,EAAK,WAZgB,kDAcrBE,EAAY,KAAE1D,SACdwD,EAAK,UAfgB,0DAAH,qDAmBdW,EAAc,SAAC3oB,GAAD,OACnB,kBAACT,EAAA,EAAD,CACCI,QAAS,WACRqoB,EAAK,UAEN1qB,QAAQ,YACRnG,MAAM,WAEL6I,IAKG4oB,EAAa,kBAClB,oCACC,2BAAOzf,QAAQ,yBACd,2BACC0f,OAAO,mBACP3X,MAAO,CAAEta,QAAS,QAClB7C,GAAG,wBACHiH,KAAK,OACL+J,SAAU,SAACyJ,GAA4C,IAAD,EACrD4Z,GAAQ,UAAA5Z,EAAEE,OAAOoa,aAAT,eAAiB,UAAM5uB,MAGjC,kBAACqF,EAAA,EAAD,CAAQjC,QAAQ,WAAWC,UAAU,QAArC,yBAID,kBAACF,EAAA,EAAD,CAAYC,QAAQ,UAAU/D,UAAW2D,EAAI6pB,UAC3C5C,GAAQA,EAAKzvB,QAKXq0B,EAAc,kBACnB,kBAACzvB,EAAA,EAAD,CAAKC,UAAW2D,EAAI8pB,aACnB,kBAACznB,EAAA,EAAD,CAAQpI,MAAM,UAAUmG,QAAQ,YAAYqC,QAAS+oB,GAArD,eAGA,kBAACnpB,EAAA,EAAD,CAAQI,QAAS,kBAAYyoB,OAAQluB,KAArC,iBAII8uB,GAAc,kBACnB,oCACC,kBAACpf,EAAA,EAAD,CAAOC,SAAS,SACdoe,GACA,6FAEF,kBAAC5c,EAAA,EAAD,MACCsd,EAAY,eAITM,GAAc,WACnB,IAAMvE,EAAOrgB,OAAOqgB,KAAK2C,IAEzB,OACC,oCACE5H,EAAS7rB,KACT,SAAC6lB,EAAK3lB,GACL,GAAI2lB,aAAe2K,MAClB,OACC,kBAAC9qB,EAAA,EAAD,CAAKoH,IAAKgkB,EAAK5wB,GAAMyF,UAAW2D,EAAI+pB,QACnC,kBAACK,GAAeM,QAAQJ,KAAxB,CAA6BrwB,MAAM,UACnC,kBAACkG,EAAA,EAAD,CAAYE,UAAU,UACpB8pB,GAAe3C,EAAK5wB,IADtB,KAGA,kBAACuJ,EAAA,EAAD,KAAaoc,EAAI+K,UAKpB,IAAM0E,EAAS5B,GAAe7N,EAAM,SAAW,WAE/C,OACC,kBAACngB,EAAA,EAAD,CAAKoH,IAAKgkB,EAAK5wB,GAAMyF,UAAW2D,EAAI+pB,QACnC,kBAACiC,EAAO1B,KAAR,CACCtW,MAAOuI,EAAM,CAAEtiB,MAAOqa,KAAM,MAAS,CAAEra,MAAOghB,KAAO,QAEtD,kBAAC9a,EAAA,EAAD,CAAYE,UAAU,UACpB8pB,GAAe3C,EAAK5wB,IADtB,KAGA,kBAACuJ,EAAA,EAAD,KAAa6rB,EAAOjR,aAKxB,kBAAC5M,EAAA,EAAD,CAAQ8d,MAAO,IACdR,EAAY,yBAKVS,GAAoB9gB,uBACzB,SAACkG,GACA+Z,EAAa/Z,EAAEE,OAAOlF,WAEvB,CAAC+e,IA8BIc,GAAa,WAClB,OAAQtB,EAAQjjB,OACf,IAAK,UAEJ,OAAO,kBAACkkB,GAAD,MACR,IAAK,UAEJ,OAAO,kBAACC,GAAD,MACR,IAAK,UAEJ,OAAO,kBAAC7vB,EAAA,EAAD,MACR,IAAK,OACL,QACC,OACC,oCACC,kBAACwvB,EAAD,MAzCCP,EAGJ,oCACC,kBAAChd,EAAA,EAAD,MACA,kBAACzB,EAAA,EAAD,CAAOC,SAAS,WAAhB,4DAEEwe,EAAU3zB,KAFZ,2HAMA,kBAAC2U,EAAA,EAAD,CACCC,QACC,kBAACggB,EAAA,EAAD,CACC9f,QAASgd,EACTzhB,SAAUqkB,GACV10B,KAAK,wBACLyC,MAAM,YAGR0N,MAAM,4BApBc,qCA2ClBsf,GAAQ,kBAAC4E,EAAD,SAMd,OACC,kBAACxc,EAAA,EAAD,CAAQpM,KAAMA,EAAME,QAASA,EAASvE,SAAS,KAAKoJ,WAAS,GAC5D,kBAACsH,EAAA,EAAD,2BACA,kBAACC,EAAA,EAAD,qCACA,kBAACA,EAAA,EAAD,KACC,kBAAC4c,GAAD,OAED,kBAAC1c,EAAA,EAAD,KACC,kBAACpN,EAAA,EAAD,CAAQI,QAASU,GAAjB,a,6ICtUW4W,EA9BS,SAAC,GASkB,IAR1C9W,EAQyC,EARzCA,KACAE,EAOyC,EAPzCA,QACA6W,EAMyC,EANzCA,SACAC,EAKyC,EALzCA,UACApW,EAIyC,EAJzCA,SAIyC,IAHzCwoB,mBAGyC,MAH3B,UAG2B,MAFzCC,kBAEyC,MAF5B,SAE4B,MADzCxpB,aACyC,MADjC,WACiC,EACzC,OACC,kBAACuM,EAAA,EAAD,CAAQpM,KAAMA,EAAME,QAASA,EAAS6E,WAAS,EAACpJ,SAAS,MACxD,kBAAC0Q,EAAA,EAAD,KAAcxM,GACbd,IAAMuqB,SAASnrB,MAAMyC,GAAY,EACjC,kBAAC0L,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KAAoB3L,IAGrB,qCAED,kBAAC4L,EAAA,EAAD,KACC,kBAACpN,EAAA,EAAD,CAAQI,QAASwX,EAAWhgB,MAAM,UAAU0V,WAAS,GACnD0c,GAEF,kBAAChqB,EAAA,EAAD,CAAQI,QAASuX,GAAWsS,O,iCCnChC,aAGMjR,EAAkB/hB,aAAW,SAACwC,GAAD,MAAY,CAC9Cwf,KAAM,CACL/b,MAAO,OACPC,QAAS,GAEV/F,IAAK,CACJsE,aAAcjC,EAAME,QAAQ,GAC5B4J,YAAa9J,EAAME,QAAQ,IAE5Bwf,SAAU,CACThc,QAAQ,GAAD,OAAK1D,EAAME,QAAQ,GAAnB,QACPwwB,UAAU,aAAD,OAAe1wB,EAAM0C,QAAQgO,UAEvCiP,cAAe,CACd1f,WAAY,EACZ0wB,OAAQ,QAET/Q,aAAc,CACbjc,OAAQ,GAETitB,eAAgB,CACfhzB,QAAS,OACT6D,cAAe,MACfuB,WAAY,SACZ,MAAO,CACN8T,WAAY9W,EAAME,QAAQ,SAKdqf,O,iCCjCf,8DAce,SAASsR,EAAT,GAGyB,IAFvC/kB,EAEsC,EAFtCA,MACAC,EACsC,EADtCA,SAEA,OACC,kBAAC,IAAD,CACCxJ,MAAI,EACJ+B,QAAQ,WACRyH,SAAUA,EACVD,MAAOA,EACPpQ,KAAK,cACLsL,MAAM,QACN7N,YAAY,oE,iCC1Bf,8DAce,SAAS23B,EAAT,GAGyB,IAFvChlB,EAEsC,EAFtCA,MACAC,EACsC,EADtCA,SAEA,OACC,kBAAC,IAAD,CACCxJ,MAAI,EACJ+B,QAAQ,WACRyH,SAAUA,EACVD,MAAOA,EACPpQ,KAAK,kBACLsL,MAAM,mBACN7N,YAAY,wC,+FChBA,SAAS0xB,EACvBjK,EACAzb,EACAmR,GAGA,IAAM7R,EAAG,aACR6M,cAAegF,EAAOhF,cACtBC,gBAAiB+E,EAAO/E,iBACvBqP,EAAIzb,GAIN,MAAU,oBAANyb,EAEI,2BACHnc,GADJ,IAEC6M,cAAexG,YAAkB3F,EAAGmR,EAAO7Q,mBAItChB,I,6jBCKD,SAASssB,EAAgB10B,EAAWC,GAC1C,OAAOD,EAAI/B,OAAO,CAAEwR,MAAOxP,EAAKuP,MAAOJ,YAAWnP,KAS5C,SAASiQ,IAEf,MADwB,CAAC,SAAU,WAAY,OAAQ,SAC9CnQ,OAAO20B,EAAiB,IAS3B,SAASvkB,IAUf,MAT0B,CACzB,SACA,cACA,UACA,WACA,aACA,SACA,SAEQpQ,OAAO20B,EAAiB,IAa3B,SAASvV,EACfxZ,EACAuD,EACAyJ,EACAC,GAEA,OAAK2C,YAAQ5C,IAAe4C,YAAQ3C,GAI7BhK,YACNa,YAAU2F,YAAW,GAAD,OAAIlG,EAAJ,OACpBO,YAAUoI,YAAOc,EAAW,eAC5BlJ,YAAU,QACVA,YAAUoI,YAAOe,EAAS,eAJpBhK,CAKLwG,YAAW,GAAD,OAAIzJ,EAAJ,OARJ,8BAkBF,SAASgvB,EAAmB1a,GAClC,MAA2B,KAAvBA,EAAO9E,YACHgK,EACNlF,EAAO9Q,WACP8Q,EAAO7Q,gBACP6Q,EAAO/E,gBACP+E,EAAOhF,eAIFgF,EAAO9E,YAGR,IAAMyL,EAAkB,EAClBC,EAAa,EACbC,EAAe,EACfC,EAAc,EAgBpB,SAAS6T,EACfC,EACA5a,EACA6a,EACAC,GAEA,GAAoB,IAAhBF,EAAKtb,OAAc,OAAO,EADhB,IAENpE,EAAgD8E,EAAhD9E,YAAaF,EAAmCgF,EAAnChF,cAAeC,EAAoB+E,EAApB/E,gBAE9BxE,EAAWmkB,EAAKlkB,QAAO,SAACnS,GAC7B,OAAKs2B,EAOuB,KAArBt2B,EAAK2W,aAA6B3W,EAAK2W,cAAgBA,EAL5DhD,YAAU3T,EAAK0W,gBAAiBA,IAChC/C,YAAU3T,EAAKyW,cAAeA,MAOjC,IAAK8f,EACJ,QAAOrkB,EAAS6I,OAAS,IAAY7I,EAAS,GAG/C,GAAIA,EAAS6I,OAAS,EAAG,OAAO,EAEhC,IAAMyb,EAAuBtkB,EAASC,OAAOC,YAAWmkB,GAAU,IAClE,QAAOC,EAAqBzb,OAAS,IAAYyb,EAAqB,GAYhE,SAAehgB,EAAtB,wC,4CAAO,WACNigB,EACA7xB,EACA0xB,EACAC,GAJM,eAAAt3B,EAAA,sEAMauL,IAAWksB,uBAC7BD,EAAM9rB,WACN8rB,EAAM7rB,gBACNhG,GATK,cAMAyxB,EANA,yBAYCD,EAAoBC,EAAMI,EAAOH,EAAaC,IAZ/C,4C,sBAsBA,SAASI,EAAgBxV,GAC/B,OAAOA,EAAWyV,YAaZ,SAASC,EACf1V,EACA2V,EACArQ,EACAK,GAEA,OAAO1c,YACNF,YAAQiX,EAAW4V,gBACnBj2B,YAAIg2B,GACJh2B,YAAI2lB,GACJ3lB,YAAIgmB,GAJE1c,CAKL+W,EAAW6V,YAYP,SAASC,EACfjQ,EACA7F,EACA2F,GAEA,OAAO1c,YAAKtJ,YAAIqgB,EAAWyV,aAAc1sB,YAAQ4c,GAA1C1c,CAAsD4c,GAWvD,SAASkQ,EACf1S,EACA2S,GAEA,OAAO3S,EAAK3C,eAAiBsV,EAAMtV,iB,iCC/PpC,8EAWe,SAASoO,IACvB,OACC,oCACC,kBAAC,IAAD,CAAYxmB,QAAQ,MAApB,oBACA,kBAAC,IAAD,0DACoD,IACnD,kBAAC,IAAD,CAAML,GAAInH,IAAcqc,YAAxB,WAFD,WAE4D,IAC3D,kBAAC,IAAD,CAAMlV,GAAInH,IAAc0M,YAAxB,6BAHD,Q,iCCJYwd,IAHgB,SAACxC,EAAY9c,EAAaoE,GAA1B,OAC9B0Y,EAAIhG,WAAU,SAAC3jB,GAAD,OAAUA,EAAK6M,KAASoE,O,iCCTvC,+CAWe,SAASwe,EACvBhU,EACApF,GAEA,IAAMoP,EAAI,IAAI2R,gBAQd,OAPA3R,EAAE4R,OAAO,QAAS5b,EAAO9E,aACzB8O,EAAE4R,OAAO,YAAahhB,EAAiB,IAAM,KAC7CoP,EAAE4R,OAAO,OAAQ5b,EAAO9Q,YACxB8a,EAAE4R,OAAO,YAAa5b,EAAO7Q,iBAC7B6a,EAAE4R,OAAO,YAAatnB,YAAQ0L,EAAO/E,iBAAiBjU,YACtDgjB,EAAE4R,OAAO,UAAWtnB,YAAQ0L,EAAOhF,eAAehU,YAE3CgjB,EAAEhjB,a,iCCbK,SAAS4tB,EAASD,GAChC,OAAO,IAAI7E,SAAQ,SAACuH,EAASnN,GACvByK,GACJzK,EAAO,IAAI4K,MAAM,sDAGlB,IAAM+G,EAAK,IAAIC,WAEfD,EAAGE,QAAU,SAACzrB,GACb4Z,EAAO5Z,IAGRurB,EAAGG,UAAY,WACd3E,EAAQwE,EAAGlE,SAEZkE,EAAGI,WAAWtH,MArBhB,mC,wKCuBe/kB,MAAMgE,MAAK,YAQoB,IAP7ClD,EAO4C,EAP5CA,MACA7N,EAM4C,EAN5CA,YAM4C,IAL5CuI,eAK4C,aAJ5Ca,YAI4C,aAH5CX,kBAG4C,SADzC4wB,EACyC,qEACtCnyB,EAASkB,YAAU,CAAEG,UAASa,OAAMX,eAE1C,OACC,kBAACtB,EAAA,EAAD,CAAKC,UAAWF,EAAO5C,MACtB,kBAAC6C,EAAA,EAAD,CAAKC,UAAWF,EAAO2B,MACtB,kBAACqC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KACjCyC,GAEF,kBAAC3C,EAAA,EAAD,CAAYE,UAAU,QAAQpL,IAE/B,kBAAC0kB,EAAA,EAAD,iBAEK2U,EAFL,CAGCjyB,UAAWF,EAAOuC,mB,gCC5BPqK,IAPI,SAAClS,GAAD,IAAiBylB,EAAjB,+DAAoC,SACtD3lB,GAEA,IAAM4lB,EAAM5lB,EAAKE,KAAOA,EACxB,OAAOylB,GAAUC,EAAMA,K,oVCIlBgS,EAAoBj1B,aAAW,SAACwC,GAAD,MAAY,CAChD9G,UAAW,CACV+G,WAAYD,EAAME,QAAQ,GAC1BC,cAAeH,EAAME,QAAQ,IAE9BwyB,KAAM,CACLzyB,WAAYD,EAAME,QAAQ,IAE3ByyB,UAAW,CACV5vB,UAAW/C,EAAME,QAAQ,GACzBtC,QAAS,OACTC,eAAgB,UAEjB+0B,MAAO,CACNC,UAAW,QACXlC,OAAQ,QAETmC,gBAAiB,CAChBC,gBAAiB,UACjBrvB,QAAS1D,EAAME,QAAQ,GACvB6C,UAAW/C,EAAME,QAAQ,IAE1B8yB,cAAe,CACdD,gBAAiB,UACjBrvB,QAAS1D,EAAME,QAAQ,GACvB6C,UAAW/C,EAAME,QAAQ,IAE1B+yB,YAAa,CACZtvB,OAAQ3D,EAAME,QAAQ,EAAG,GACzBuD,MAAO,QAERyvB,oBAAqB,CACpBt1B,QAAS,OACT6D,cAAe,SACf0xB,SAAU,SACVt1B,eAAgB,SAChBmF,WAAY,SACZowB,aAAc,SACdzvB,OAAQ3D,EAAME,QAAQ,EAAG,IAE1BwY,OAAQ,CACPva,MAAO6B,EAAM0C,QAAQ2wB,gBAAgB,WACrCN,gBAAiB,UACjBtvB,MAAOzD,EAAME,QAAQ,GACrByB,OAAQ3B,EAAME,QAAQ,GACtB6C,UAAW/C,EAAME,QAAQ,GACzBoC,SAAU,UAEXkW,MAAO,CACNra,MAAO6B,EAAM0C,QAAQ2wB,gBAAgB,WACrCN,gBAAiB,UACjBtvB,MAAOzD,EAAME,QAAQ,GACrByB,OAAQ3B,EAAME,QAAQ,GACtB6C,UAAW/C,EAAME,QAAQ,GACzBoC,SAAU,UAEXgxB,KAAM,CACLn1B,MAAO6B,EAAM0C,QAAQ2wB,gBAAgB,WACrCN,gBAAiB,UACjBtvB,MAAOzD,EAAME,QAAQ,GACrByB,OAAQ3B,EAAME,QAAQ,GACtB6C,UAAW/C,EAAME,QAAQ,GACzBoC,SAAU,UAEXixB,YAAa,CACZtzB,WAAYD,EAAME,QAAQ,GAC1BC,cAAeH,EAAME,QAAQ,GAC7BoC,SAAU,UAEXkxB,aAAc,CACbvzB,WAAYD,EAAME,QAAQ,GAC1BoC,SAAU,cAqQGmxB,EAjQE,WAAqB,IAE3B10B,EACN9D,qBAAWC,KADdC,MAAS4D,QAEJsB,EAASoyB,IAET9oB,EAAa,kBAAe5K,EAAQ6W,OAAS,GAEnD,OACC,oCACC,kBAAC,IAAD,CAAcjM,WAAYA,MAC1B,kBAACrJ,EAAA,EAAD,CAAKozB,KAAK,QACT,kBAAC9Y,EAAA,EAAD,CAAWra,UAAWF,EAAOnH,WAC5B,kBAACmL,EAAA,EAAD,CACCsvB,MAAM,SACNpvB,UAAU,KACVhE,UAAWF,EAAOkzB,aAHnB,0BAOA,kBAAClvB,EAAA,EAAD,CAAYsvB,MAAM,SAASpvB,UAAU,IAAID,QAAQ,MAAjD,0CAID,kBAACsW,EAAA,EAAD,CACC9X,UAAU,EACVyB,UAAU,MACVhE,UAAWF,EAAO2yB,eAElB,kBAACpY,EAAA,EAAD,CAAWrW,UAAU,MAAMzB,SAAS,MACnC,kBAAC4F,EAAA,EAAD,CAAMxP,WAAS,EAACgH,QAAS,GACxB,kBAACwI,EAAA,EAAD,CAAM7N,MAAI,EAACgX,GAAI,GAAIlJ,GAAI,EAAGpI,UAAWF,EAAO6yB,qBAC3C,kBAACU,EAAA,EAAD,CAAQrzB,UAAWF,EAAOqY,QAA1B,KACA,kBAACrU,EAAA,EAAD,CACCE,UAAU,KACVD,QAAQ,KACR/D,UAAWF,EAAOmzB,cAHnB,YAOA,kBAACnvB,EAAA,EAAD,CACCC,QAAQ,QACRC,UAAU,IACVhE,UAAWF,EAAO4yB,YAClBU,MAAM,UAJP,sCASD,kBAACjrB,EAAA,EAAD,CAAM7N,MAAI,EAACgX,GAAI,GAAIlJ,GAAI,EAAGpI,UAAWF,EAAO6yB,qBAC3C,kBAACU,EAAA,EAAD,CAAQrzB,UAAWF,EAAOmY,OAA1B,KACA,kBAACnU,EAAA,EAAD,CACCE,UAAU,KACVD,QAAQ,KACR/D,UAAWF,EAAOmzB,cAHnB,SAOA,kBAACnvB,EAAA,EAAD,CACCC,QAAQ,QACRC,UAAU,IACVhE,UAAWF,EAAO4yB,YAClBU,MAAM,UAJP,6DASD,kBAACjrB,EAAA,EAAD,CAAM7N,MAAI,EAACgX,GAAI,GAAIlJ,GAAI,EAAGpI,UAAWF,EAAO6yB,qBAC3C,kBAACU,EAAA,EAAD,CAAQrzB,UAAWF,EAAOizB,MAA1B,KACA,kBAACjvB,EAAA,EAAD,CACCE,UAAU,KACVD,QAAQ,KACR/D,UAAWF,EAAOmzB,cAHnB,iBAOA,kBAACnvB,EAAA,EAAD,CACCC,QAAQ,QACRC,UAAU,IACVhE,UAAWF,EAAO4yB,YAClBU,MAAM,UAJP,2DAYJ,kBAAC/Y,EAAA,EAAD,KACC,kBAACta,EAAA,EAAD,CAAKC,UAAWF,EAAOsyB,WACrBhpB,IACA,kBAACpD,EAAA,EAAD,CACCpI,MAAM,UACNmG,QAAQ,YACRC,UAAWmC,IACXzC,GAAInH,IAAc0M,WAClB0f,KAAK,SALN,mBAUA,kBAAC,IAAD,CAAiBD,YAAY,iBAG/B,kBAAC5W,EAAA,EAAD,MACA,kBAAC3J,EAAA,EAAD,CAAMxP,WAAS,EAACgH,QAAS,GACxB,kBAACwI,EAAA,EAAD,CAAM7N,MAAI,EAACgX,GAAI,GAAIlJ,GAAI,GACtB,kBAACrI,EAAA,EAAD,CAAKC,UAAU,gBACd,kBAAC8D,EAAA,EAAD,CAAYC,QAAQ,MAApB,2BACA,kBAACD,EAAA,EAAD,4EAIA,kBAACA,EAAA,EAAD,CAAY9D,UAAU,kBAAtB,2BAGA,kBAACiX,EAAA,EAAD,CAAMjT,UAAU,KAAKhE,UAAU,WAC9B,kBAAC8D,EAAA,EAAD,CAAYE,UAAU,MAAtB,qCAGA,kBAACF,EAAA,EAAD,CAAYE,UAAU,MAAtB,mCAGA,kBAACF,EAAA,EAAD,CAAYE,UAAU,MAAtB,wBACA,kBAACF,EAAA,EAAD,CAAYE,UAAU,MAAtB,+CAGA,kBAACF,EAAA,EAAD,CAAYE,UAAU,MAAtB,gCAID,kBAACF,EAAA,EAAD,CAAY9D,UAAU,kBAAtB,sEAIA,kBAACiX,EAAA,EAAD,CAAMjT,UAAU,KAAKhE,UAAU,WAC9B,kBAAC8D,EAAA,EAAD,CAAYE,UAAU,MAAtB,mBACA,kBAACF,EAAA,EAAD,CAAYE,UAAU,MAAtB,WACA,kBAACF,EAAA,EAAD,CAAYE,UAAU,MAAtB,aAED,kBAACF,EAAA,EAAD,mEAGA,kBAACA,EAAA,EAAD,wHAOH,kBAACqE,EAAA,EAAD,CAAMxP,WAAS,EAACgH,QAAS,EAAGK,UAAWF,EAAOqyB,KAAMmB,QAAQ,UAsB3D,kBAACnrB,EAAA,EAAD,CAAM7N,MAAI,EAACgX,GAAI,GAAIjJ,GAAI,GACtB,kBAACkrB,EAAA,EAAD,CAAMxvB,QAAQ,YACb,kBAACyvB,EAAA,EAAD,CAAY/sB,MAAM,mCAClB,kBAACgtB,EAAA,EAAD,CACCzzB,UAAWF,EAAOuyB,MAClBruB,UAAU,SACVyC,MAAM,iCACN7C,IAAI,8CAEL,kBAAC8vB,EAAA,EAAD,KACC,kBAAC1tB,EAAA,EAAD,CACCpI,MAAM,UACN+1B,KAAK,mDACLxlB,aAAW,sDACXgH,OAAO,SACPye,IAAI,uBALL,4BAeL,kBAACvZ,EAAA,EAAD,CACCrW,UAAU,MACVhE,UAAWF,EAAOyyB,gBAClBhwB,UAAU,GAEV,kBAAC8X,EAAA,EAAD,CAAW9X,SAAS,MACnB,kBAACuB,EAAA,EAAD,CACCC,QAAQ,QACRC,UAAU,IACVhE,UAAWF,EAAO4yB,YAClBU,MAAM,UAJP,6MAWA,kBAACtvB,EAAA,EAAD,CACCC,QAAQ,QACRC,UAAU,IACVhE,UAAWF,EAAO4yB,YAClBU,MAAM,UAJP,kJAUA,kBAACtvB,EAAA,EAAD,CACCC,QAAQ,QACRC,UAAU,IACVhE,UAAWF,EAAO4yB,YAClBU,MAAM,UAJP,2FAO2B,IAC1B,uBACCO,KAAK,4BACLxe,OAAO,SACPye,IAAI,uBAHL,sBAMK,IAdN,oDAiBA,kBAAC9vB,EAAA,EAAD,CACCC,QAAQ,QACRC,UAAU,IACVhE,UAAWF,EAAO4yB,YAClBU,MAAM,UAJP,+EC/TSS,EARa,kBAC3B,oCACC,kBAAC,IAAD,CAAOC,OAAK,EAACra,KAAMjd,IAAakM,MAC/B,kBAAC,EAAD,S,kDCGH,IAoBeqrB,EApBiB,SAC/Bn5B,EACA0pB,GAEA,OAAQA,EAAO7iB,MACd,KAAKnD,IAAe6S,qBACnB,OCbY,SACdvW,EACA0R,GAEA,OAAO,2BACH1R,GADJ,IAECuF,eAAgBmM,IDOR0nB,CAAkBp5B,EAAO0pB,EAAOhY,SACxC,KAAKhO,IAAe8S,uBACnB,OEfY,SACdxW,EACA0R,GAEA,OAAO,2BACH1R,GADJ,IAECwF,iBAAkBkM,IFSV2nB,CAAoBr5B,EAAO0pB,EAAOhY,SAC1C,KAAKhO,IAAe41B,qBACnB,OGjBY,SACdt5B,EACA0R,GAEA,OAAO,2BACH1R,GADJ,IAEC0F,eAAgBgM,IHWR6nB,CAAkBv5B,EAAO0pB,EAAOhY,SACxC,KAAKhO,IAAe81B,cACnB,OInBY,SACdx5B,EACA0R,GAEA,OAAO,2BACH1R,GADJ,IAECy5B,YAAa/nB,EAAQwS,KACrBwV,aAAchoB,EAAQmlB,QJYd8C,CAAmB35B,EAAO0pB,EAAOhY,SACzC,KAAKhO,IAAek2B,uBACnB,OKrBY,SACd55B,EACA0R,GAEA,OAAO,2BACH1R,GADJ,IAECyF,iBAAkBiM,ILeVmoB,CAAoB75B,EAAO0pB,EAAOhY,SAC1C,QACC,OAAO1R,I,SMWK85B,MAxBf,SAAqBzzB,GAA+C,IAAD,EACxC2kB,qBACzBmO,EACA7zB,KAHiE,mBAC3DtF,EAD2D,KACpD8D,EADoD,OAMhBkH,mBAEhD,IARgE,mBAM3DhF,EAN2D,KAMxCC,EANwC,KAU5D0K,EAAQzC,mBACb,8BAAC,eACGlO,GADJ,IAEC8D,WACAkC,oBACAC,2BAED,CAACjG,EAAOgG,IAIT,OAAO,kBAAC,IAAW0lB,SAAZ,eAAqB/a,MAAOA,GAAWtK,K,SChCzC0zB,EAAmB,kBACxB,kBAAC,IAAD,KACC,kBAAC90B,EAAA,EAAD,QAIIuZ,EAAoBwb,aACzB,kBAAM,wDACN,CAAEC,SAAU,kBAAC,EAAD,QAEP1b,EAAqByb,aAC1B,kBAAM,wDACN,CAAEC,SAAU,kBAAC,EAAD,QAEP3b,EAAqB0b,aAC1B,kBAAM,wDACN,CAAEC,SAAU,kBAAC,EAAD,QAEP5b,EAAiC2b,aACtC,kBAAM,wDACN,CAAEC,SAAU,kBAAC,EAAD,QAEP7b,EAAkB4b,aACvB,kBAAM,wDACN,CAAEC,SAAU,kBAAC,EAAD,QAEP9b,EAA6B6b,aAClC,kBAAM,wDACN,CAAEC,SAAU,kBAAC,EAAD,QAEP/b,EAAwB8b,aAC7B,kBAAM,wDACN,CAAEC,SAAU,kBAAC,EAAD,QAEP5rB,EAAa2rB,aAAS,kBAAM,yDAAsC,CACvEC,SAAU,kBAAC,EAAD,QAEL9iB,EAAe6iB,aAAS,kBAAM,+DAAwC,CAC3EC,SAAU,kBAAC,EAAD,QAELC,EAAkBF,aACvB,kBAAM,yDACN,CAAEC,SAAU,kBAAC,EAAD,QAEPE,EAAYH,aACjB,kBAAM,kCACN,CAAEC,SAAU,kBAAC,EAAD,QAEPG,GAAYJ,aACjB,kBAAM,8EACN,CAAEC,SAAU,kBAAC,EAAD,QAEPxiB,GAAeuiB,aAAS,kBAAM,wDAAwC,CAC3EC,SAAU,kBAAC,EAAD,QAELviB,GAAkBsiB,aAAS,kBAAM,gEAAuC,CAC7EC,SAAU,kBAAC,EAAD,QAEL5iB,GAAc2iB,aAAS,kBAAM,kCAAuC,CACzEC,SAAU,kBAAC,EAAD,QAELI,GAAYL,aAAS,kBAAM,kCAA8C,CAC9EC,SAAU,kBAAC,EAAD,QAELK,GAAYN,aAAS,kBAAM,wDAA8C,CAC9EC,SAAU,kBAAC,EAAD,QAELM,GAAaP,aAClB,kBAAM,6EACN,CAAEC,SAAU,kBAAC,EAAD,QAEPjc,GAAagc,aAClB,kBAAM,kCACN,CAAEC,SAAU,kBAAC,EAAD,QAEPnc,GAAakc,aAClB,kBAAM,sEACN,CAAEC,SAAU,kBAAC,EAAD,QAwFEO,GA/Ec,WAC5B,OACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAO3b,KAAMld,IAAc0V,aAC1B,kBAACA,GAAD,OAED,kBAAC,IAAD,CAAOwH,KAAMld,IAAcwV,cAC1B,kBAACA,EAAD,OAED,kBAAC,IAAD,CAAO+hB,OAAK,EAACra,KAAMld,IAAc2V,iBAChC,kBAAC4iB,EAAD,OAED,kBAAC,IAAD,CAAOhB,OAAK,EAACra,KAAMld,IAAc8c,iBAChC,kBAAC4b,GAAD,OAED,kBAAC,IAAD,CAAOnB,OAAK,EAACra,KAAMld,IAAcwM,oBAChC,kBAACmsB,GAAD,OAED,kBAAC,IAAD,CAAOzb,KAAMld,IAAc4V,gBAC1B,kBAAC4iB,EAAD,OAGD,kBAAC,EAAD,KACC,kBAAC,IAAD,CAAOtb,KAAMld,IAAc6V,IAAK0hB,OAAK,GACpC,kBAACkB,GAAD,OAED,kBAAC,IAAD,CAAOvb,KAAMld,IAAcoc,SAC1B,kBAACwc,GAAD,OAED,kBAAC,IAAD,CAAO1b,KAAMld,IAAcqc,YAC1B,kBAACA,GAAD,OAED,kBAAC,IAAD,CAAOa,KAAMld,IAAcmc,YAC1B,kBAACA,GAAD,QAQF,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOe,KAAMld,IAAc0M,YAC1B,kBAACA,EAAD,OAGD,kBAAC,IAAD,CAAOwQ,KAAMld,IAAc8V,cAC1B,kBAACA,GAAD,OAED,kBAAC,IAAD,CAAOoH,KAAMld,IAAc+V,iBAC1B,kBAACA,GAAD,OAGD,kBAAC,IAAD,CAAOmH,KAAMld,IAAc6c,mBAC1B,kBAACA,EAAD,OAED,kBAAC,IAAD,CAAOK,KAAMld,IAAc4c,oBAC1B,kBAACA,EAAD,OAED,kBAAC,IAAD,CAAOM,KAAMld,IAAc2c,oBAC1B,kBAACA,EAAD,OAED,kBAAC,IAAD,CAAOO,KAAMld,IAAc0c,gCAC1B,kBAACA,EAAD,OAED,kBAAC,IAAD,CAAOQ,KAAMld,IAAcyc,iBAC1B,kBAACA,EAAD,OAED,kBAAC,IAAD,CAAOS,KAAMld,IAAcwc,4BAC1B,kBAACA,EAAD,OAED,kBAAC,IAAD,CAAOU,KAAMld,IAAcuc,uBAC1B,kBAACA,EAAD,U,UCpKU,SAASuc,KACvB,OACC,yBAAK76B,GAAG,MAAMouB,kBAAgB,aAC7B,kBAAC5iB,EAAA,EAAD,CACChC,UAAU,IACV2vB,KAAK,uBACLn5B,GAAG,YACHwF,UAAU,4BACVpC,MAAM,UACNmG,QAAQ,YACR4kB,KAAK,QACLviB,QAAS,SAAC6O,GACTA,EAAE3O,iBACF,IAAM3N,EAAmCmb,SAASwhB,cACjD,wBAEG38B,GACHA,EAAU48B,UAdb,yBCQH,SAASC,KAAqB,IACrBvf,EAAaxC,cAAbwC,SAMR,OAJA/G,qBAAU,WACTnR,OAAO03B,SAAS,EAAG,KACjB,CAACxf,IAEG,KAQR,IAwBeyf,GAxBG,WAAqB,IAC9Bh3B,EAAahE,qBAAWC,KAAxB+D,SAQR,OANAwQ,qBAAU,YACR,uCAAC,sBAAA3V,EAAA,sEACK2S,aAAkBxN,GADvB,2CAAD,yDAGC,CAACA,IAGH,kBAAC,IAAD,KACC,kBAAC82B,GAAD,MACA,kBAAC,IAAD,KACC,oCACC,kBAACH,GAAD,MACA,kBAAC,EAAD,MAEA,kBAAC,GAAD,UClCUM,GARH,WACX,OACC,kBAAC,IAAD,KACC,kBAAC,GAAD,QCKiB9uB,QACU,cAA7B9I,OAAOgV,SAAS6iB,UAEc,UAA7B73B,OAAOgV,SAAS6iB,UAEhB73B,OAAOgV,SAAS6iB,SAAStgB,MACxB,2DCLHugB,IAASC,OACR,kBAAC,IAAMC,WAAP,KACC,kBAAC,GAAD,OAEDjiB,SAASC,eAAe,SDuHpB,kBAAmBiiB,WACtBA,UAAUC,cAAcC,MACtBjQ,MAAK,SAACkQ,GACNA,EAAaC,gBAEbC,OAAM,SAACjiB,GACPpa,QAAQoa,MAAMA,EAAM6W,YCnHvBltB,OAAOu4B,eAAiB,SAAUrhB,GASjC,OAPAA,EAAIA,GAAKlX,OAAOsI,SAIf4O,EAAEshB,YAAc,SAGV,U,gCCpCT,iD,gCCaO,IAAKnqB,EANZ,kC,SAMYA,K,uBAAAA,E,6BAAAA,E,mBAAAA,E,4CAAAA,E,yCAAAA,E,4CAAAA,M,+HCIGib,EAdG,SACjBzsB,EACA0R,GAEA,IAAMkqB,EAAa57B,EAAMA,MAAM4D,QAAQzE,OAAOuS,GAC9C,OAAO,2BACH1R,GADJ,IAECA,MAAM,2BACFA,EAAMA,OADL,IAEJ4D,QAASg4B,OCIGx6B,EAbC,SACfpB,EACA0R,GAEA,OAAO,2BACH1R,GADJ,IAECA,MAAM,2BACFA,EAAMA,OADL,IAEJ4D,QAAS8N,O,iBCaGmqB,EAhBa,SAC3B77B,EACA0R,GAEA,IAAMpN,EAAStE,EAAMA,MAAM4D,QAAQ2lB,KAAKzX,YAAWJ,IAGnD,OAFAxO,aAAuB,OAANoB,QAAM,IAANA,OAAA,EAAAA,EAAQ1E,KAAMqD,KAExB,2BACHjD,GADJ,IAECA,MAAM,2BACFA,EAAMA,OADL,IAEJC,cAAeqE,OCJHw3B,EAbY,SAC1B97B,EACA0R,GAEA,OAAO,2BACH1R,GADJ,IAECA,MAAM,2BACFA,EAAMA,OADL,IAEJE,aAAcwR,O,SCwBFqqB,EAxBM,SAAC/7B,EAAqB0R,GAAqC,IAAD,EACxE9N,EAAU5D,EAAMA,MAAM4D,QAAQiO,OAAOC,YAAWJ,GAAS,IACzDzR,EACJsB,YAAYvB,EAAMA,MAAMC,cAAe,QACxC,UAAAD,EAAMA,MAAMC,qBAAZ,eAA2BL,MAAO8R,EAE/B1R,EAAMA,MAAMC,cADZ2D,EAAQ,GASZ,OANAV,aAA8B,OAAbjD,QAAa,IAAbA,OAAA,EAAAA,EAAeL,KAAMqD,KAEf,IAAnBW,EAAQ6W,QACXjX,cAGM,2BACHxD,GADJ,IAECA,MAAM,2BACFA,EAAMA,OADL,IAEJC,gBACA2D,eCdYo4B,EAbY,SAC1Bh8B,EACA0R,GAEA,OAAO,2BACH1R,GADJ,IAECA,MAAM,2BACFA,EAAMA,OADL,IAEJ6D,aAAc6N,OC0CFuqB,EA7BoD,SAClEj8B,EACA0pB,GAEA,OAAQA,EAAO7iB,MACd,KAAK2K,IAAkBmb,UACtB,OAAOF,EAAUzsB,EAAO0pB,EAAOhY,SAEhC,KAAKF,IAAkB0qB,aACtB,OAAOH,EAAa/7B,EAAO0pB,EAAOhY,SAEnC,KAAKF,IAAkBC,QACtB,OAAOrQ,EAAQpB,EAAO0pB,EAAOhY,SAE9B,KAAKF,IAAkBO,oBACtB,OAAO8pB,EAAoB77B,EAAO0pB,EAAOhY,SAE1C,KAAKF,IAAkBQ,mBACtB,OAAO8pB,EAAmB97B,EAAO0pB,EAAOhY,SAEzC,KAAKF,IAAkB2qB,mBACtB,OAAOH,EAAmBh8B,EAAO0pB,EAAOhY,SAEzC,QACC,OAAO1R,I,iCCdKo8B,EAjBQ,SAAC/1B,GAAkD,IAAD,EAC9C2kB,qBAExBiR,EAAet4B,KAHuD,mBACjE3D,EADiE,KAC1D8D,EAD0D,KAKlE6M,EAAQzC,mBACb,8BAAC,eACGlO,GADJ,IAEC8D,eAED,CAAC9D,IAIF,OAAO,kBAAC,IAAc0rB,SAAf,eAAwB/a,MAAOA,GAAWtK,M,6KC3B5C2Q,EAAkB3U,aAAW,SAACwC,GAAD,MAAY,CAC9CoS,QAAS,CACR8M,WAAY,QACZsY,aAAcx3B,EAAMy3B,MAAMD,aAC1B9zB,QAAS1D,EAAME,QAAQ,GACvBw3B,UAAW13B,EAAM23B,QAAQ,IAE1Bzb,UAAW,CACVwU,UAAU,aAAD,OAAevR,IAAO,OAEhCyY,cAAe,CACdC,WAAW,aAAD,OAAe1Y,IAAO,OAEjC2Y,MAAO,CACNJ,UAAW,YAIP3nB,EAAuBvS,aAAW,SAACwC,GAAD,MAAY,CACnDoQ,aAAc,CACbxS,QAAS,OACToF,WAAY,UAEbiN,UAAW,CACV/N,aAAclC,EAAME,QAAQ,IAE7BwQ,QAAS,CACR/M,OAAO,GAAD,OAAK3D,EAAME,QAAQ,GAAnB,aAIF63B,EAAoBv6B,aAAW,SAACwC,GAAD,MAAY,CAChDye,KAAM,CACLxc,aAAcjC,EAAME,QAAQ,GAC5B4J,YAAa9J,EAAME,QAAQ,IAE5B0e,KAAK,aACJhb,SAAU,UACT5D,EAAM6B,YAAYC,KAAK,MAAQ,CAC/Bk2B,UAAW,WAGbnZ,UAAU,eACR7e,EAAM6B,YAAYC,KAAK,MAAQ,CAC/B8U,SAAU5W,EAAM6B,YAAYyU,OAAO1N,GACnCzI,cAAeH,EAAME,QAAQ,KAG/Bwe,aAAa,aACZ9gB,QAAS,SACRoC,EAAM6B,YAAYgB,GAAG,MAAQ,CAC7BjF,QAAS,c,oECoGNkC,EAAoB,I,kDAtGzB,aAAe,IAAD,8BACb,cAAM,4BA9BP4F,iBA6Bc,IAlBdzL,cAkBc,IAPdP,WAOc,EAEb,EAAK0F,kBAEL,EAAKsG,YAAc,EAAK7M,MAAM,eAC9B,EAAKoB,SAAW,EAAKpB,MAAM,YAC3B,EAAKa,MAAQ,EAAKb,MAAM,SAExB,EAAKwG,wBARQ,E,8DAqBb5D,KAAK6D,QAAQ,GAAGC,OAAO,CACtBmG,YAAa,0DACbzL,SAAU,kCAKXwB,KAAK6D,QAAQ,KAAKC,OAAO,CACxBmG,YACC,oEACDzL,SAAU,kCAKXwB,KAAK6D,QAAQ,KAAKC,OAAO,CACxBmG,YACC,oEACDzL,SAAU,0CACVP,MAAO,2CAKR+B,KAAK6D,QAAQ,KAAKC,OAAO,CACxBmG,YACC,qEACDzL,SAAU,2CACVP,MAAO,2CAKR+B,KAAK6D,QAAQ,GAAGC,OAAO,CACtBmG,YACC,+EACDzL,SAAU,qDACVP,MAAO,2CAKR+B,KAAK6D,QAAQ,KAAKC,OAAO,CACxBmG,YACC,+EACDzL,SAAU,qDACVP,MAAO,wD,8CAKR+B,KAAKiK,YAAY9I,eAAe4C,QAAO,SAAC5F,GACf,kBAAbA,EAAMmB,KAChBnB,EAAMmB,GAAN,UAAcnB,EAAMmB,KAES,kBAAnBnB,EAAMjB,WAChBiB,EAAMjB,SAAN,UAAoBiB,EAAMjB,cAI5B8C,KAAK/B,MAAMkD,eAAe4C,QAAO,SAACy4B,GACV,kBAAZA,EAAKl9B,KACfk9B,EAAKl9B,GAAL,UAAak9B,EAAKl9B,KAEU,kBAAlBk9B,EAAKt/B,WACfs/B,EAAKt/B,SAAL,UAAmBs/B,EAAKt/B,cAI1B8C,KAAKxB,SAAS2C,eAAe4C,QAAO,SAAC04B,GACZ,kBAAbA,EAAMn9B,KAChBm9B,EAAMn9B,GAAN,UAAcm9B,EAAMn9B,KAES,kBAAnBm9B,EAAMv/B,WAChBu/B,EAAMv/B,SAAN,UAAoBu/B,EAAMv/B,WAE3Bu/B,EAAM1+B,MAAQ0+B,EAAM1+B,MAAMoB,KAAI,SAACu9B,GAAD,MAAqB,kBAANA,EAAP,UAA2BA,GAAMA,Y,UArIpCz4B,IA4IvBI,O,gCCzHR,IAAKglB,EAvBZ,kC,SAuBYA,K,4CAAAA,E,0CAAAA,E,uCAAAA,E,sCAAAA,E,4CAAAA,E,sCAAAA,E,qBAAAA,E,2BAAAA,E,yBAAAA,E,4CAAAA,M,sCCnCZ,uEAce,SAASzS,EAAT,GAA2D,IAAD,IAAxC8d,aAAwC,MAAhC,EAAgC,EAClEnwB,EAAQ8H,cACd,OAAO,kBAAC,IAAD,CAAKoQ,MAAO,CAAEnV,UAAW/C,EAAME,QAAQiwB,S","file":"static/js/main.a3363822.chunk.js","sourcesContent":["import Dexie from \"dexie\"\nimport { uniq } from \"lodash-es\"\nimport { PossibleActionItems } from \"../../../state/action-checklist/shape\"\nimport {\n\tDatabaseId,\n\tClientId,\n\tActionChecklistStruct,\n\tActionChecklistPriorityStruct,\n\tActionChecklistNotesStruct,\n\tActionChecklistPriorityId,\n} from \"../../_config/shape\"\nimport ActionChecklistUseCase from \"../ChecklistLogic\"\nimport ActionPriorityUseCase from \"../PriorityLogic\"\n\n/**\n * Finds a item by the `actionContainer` and `clientId` key\n *\n * @param {PossibleActionItems} actionContainer Container to query for\n * @param {ClientId} clientId Client to query for\n * @param {Dexie} db Database instance that extends Dexie\n * @param {Dexie.Table<T, DatabaseId>} table Table within the provided database\n * @returns Promise<T[]>\n */\nexport const findByClientAndContainer = <T>(\n\tactionContainer: PossibleActionItems,\n\tclientId: ClientId,\n\tdb: Dexie,\n\ttable: Dexie.Table<T, DatabaseId>\n): Promise<T[]> => {\n\treturn db.transaction(\"r\", table, () => {\n\t\treturn table.where({ actionContainer, clientId }).toArray()\n\t})\n}\n\n/**\n * Creates the structure for a new checklist item\n *\n * @param {ClientId} clientId\n * @param {PossibleActionItems} container\n * @returns ActionChecklistStruct\n */\nexport const newChecklistItem = (\n\tclientId: ClientId,\n\tcontainer: PossibleActionItems\n): ActionChecklistStruct => ({\n\tclientId,\n\tactionContainer: container,\n\tdescription: \"\",\n\tcompleted: false,\n\treviewBy: new Date(),\n})\n\n/**\n * Creates the structure for a new priority item\n *\n * @param {ClientId} clientId\n * @param {PossibleActionItems} container\n * @returns ActionChecklistPriorityStruct\n */\nexport const newPriorityItem = (\n\tclientId: ClientId,\n\tcontainer: PossibleActionItems\n): ActionChecklistPriorityStruct => ({\n\tclientId,\n\tactionContainer: container,\n\torder: [],\n})\n\n/**\n * Creates the structure for a new notes item\n *\n * @param {ClientId} clientId\n * @param {PossibleActionItems} container\n * @returns ActionChecklistNotesStruct\n */\nexport const newNotesItem = (\n\tclientId: ClientId,\n\tcontainer: PossibleActionItems\n): ActionChecklistNotesStruct => ({\n\tclientId,\n\tactionContainer: container,\n\tnotes: \"\",\n})\n\n/**\n * Bulk adds items to the database and updates the related priority order\n *\n * returns the items with their db ids & a success boolean\n *\n * @export\n * @param {ActionChecklistStruct[]} items\n * @param {ActionChecklistPriorityId} priorityId\n * @returns {Promise<[ActionChecklistStruct[], boolean]>}\n */\nexport async function bulkAddChecklists(\n\titems: ActionChecklistStruct[],\n\tpriorityId: ActionChecklistPriorityId\n): Promise<[ActionChecklistStruct[], boolean]> {\n\tconst priority = await ActionPriorityUseCase.findById(priorityId)\n\tif (!priority) return [items, false]\n\n\tconst ids = await ActionChecklistUseCase.bulkPut(items)\n\n\tconst newOrder = priority?.order.concat(ids)\n\tconsole.log(uniq(newOrder))\n\tawait ActionPriorityUseCase.update(priorityId, {\n\t\t...priority,\n\t\torder: uniq(newOrder),\n\t})\n\n\tconst completedItems = items.map((item, idx) => ({\n\t\t...item,\n\t\tid: ids[idx],\n\t}))\n\n\treturn [completedItems, true]\n}\n","import { useContext } from \"react\"\nimport ClientContext from \"./client-context\"\nimport { ClientDataStruct } from \"../../data/_config/shape\"\n\n/**\n * A custom hook to easily get the current client data\n *\n * @returns {[ClientDataStruct | undefined, boolean]}\n */\nconst useCurrentClient = (): [ClientDataStruct | undefined, boolean] => {\n\tconst {\n\t\tstate: { currentClient, clientSynced },\n\t} = useContext(ClientContext)\n\n\treturn [currentClient, clientSynced]\n}\n\nexport default useCurrentClient\n","import Dexie, { IndexableType } from \"dexie\"\nimport { v4 as uuidv4 } from \"uuid\"\nimport { DatabaseId, ClientId } from \"./shape\"\nimport hasProperty from \"../../util/object/hasProperty\"\n\n/**\n * Logic Layer to implement per database/table combo\n *\n * @export\n * @abstract\n * @class ILogicLayer\n * @template E Database entity structure\n * @template I Database id type\n */\nabstract class ILogicLayer<E, B, I = DatabaseId> {\n\t/**\n\t * Creates an instance of ILogicLayer.\n\t *\n\t * @param {Dexie} database Database to target, this database should be extending Dexie\n\t * @param {Dexie.Table<E, I>} table Table within the defined database\n\t * @memberof ILogicLayer\n\t */\n\tconstructor(protected database: Dexie, protected table: Dexie.Table<E, I>) {}\n\n\t/**\n\t * Default create method, this is called in the public\n\t * `create` method by default, however when implementing\n\t * the Logic layer, you'll be able to override that method\n\t * if you don't want to use the default functionality\n\t *\n\t * @protected\n\t * @param {E} data\n\t * @returns {Promise<I>}\n\t * @memberof ILogicLayer\n\t */\n\tprotected defaultCreate(data: E): Promise<I> {\n\t\treturn this.database.transaction(\"rw\", this.table.name, () => {\n\t\t\treturn this.table.add({\n\t\t\t\tid: uuidv4(),\n\t\t\t\t...data,\n\t\t\t})\n\t\t})\n\t}\n\n\t/**\n\t * Default database sync method, this is called in the public\n\t * `syncWithDatabase` method by default, however when implementing\n\t * the Logic layer, you'll be able to override that method\n\t * if you don't want to use the default functionality\n\t *\n\t * @protected\n\t * @returns {Promise<E[]>}\n\t * @memberof ILogicLayer\n\t */\n\tprotected defaultSync(): Promise<E[]> {\n\t\treturn this.database.transaction(\"r\", this.table.name, () => {\n\t\t\treturn this.table.toArray()\n\t\t})\n\t}\n\n\t/**\n\t * Default delete method, this is called in the public\n\t * `delete` method by default, however when implementing\n\t * the Logic layer, you'll be able to override that method\n\t * if you don't want to use the default functionality\n\t *\n\t * @protected\n\t * @template T\n\t * @param {T} id\n\t * @returns {Promise<number>}\n\t * @memberof ILogicLayer\n\t */\n\tprotected defaultDelete<T extends IndexableType>(id: T): Promise<number> {\n\t\treturn this.database.transaction(\"rw\", this.table.name, () => {\n\t\t\treturn this.table.where(\"id\").equals(id).delete()\n\t\t})\n\t}\n\n\t/**\n\t * Default update method, this is called in the public\n\t * `update` method by default, however when implementing\n\t * the Logic layer, you'll be able to override that method\n\t * if you don't want to use the default functionality\n\t *\n\t * @protected\n\t * @param {I} id\n\t * @param {B} data\n\t * @returns {Promise<number>}\n\t * @memberof ILogicLayer\n\t */\n\tprotected defaultUpdate(id: I, data: B): Promise<number> {\n\t\treturn this.database.transaction(\"rw\", this.table.name, () => {\n\t\t\treturn this.table.update(id, data)\n\t\t})\n\t}\n\n\t/**\n\t * Method to create a new entry into the database.\n\t * Uses the `defaultCreate` method by default. However,\n\t * you can override the method if required\n\t *\n\t * @param {E} data\n\t * @returns {Promise<I>}\n\t * @memberof ILogicLayer\n\t */\n\tpublic create(data: E): Promise<I> {\n\t\treturn this.defaultCreate(data)\n\t}\n\n\t/**\n\t * Method to pull all entries from the database\n\t * Uses the `defaultSync` method by default. However,\n\t * you can override the method if required\n\t *\n\t * @returns {Promise<E[]>}\n\t * @memberof ILogicLayer\n\t */\n\tpublic syncWithDatabase(): Promise<E[]> {\n\t\treturn this.defaultSync()\n\t}\n\n\t/**\n\t * Method to delete a item from the database\n\t * Uses the `defaultDelete` method by default. However,\n\t * you can override the method if required\n\t *\n\t * @template T\n\t * @param {T} id\n\t * @returns {Promise<number>}\n\t * @memberof ILogicLayer\n\t */\n\tpublic delete<T extends IndexableType>(id: T): Promise<number> {\n\t\treturn this.defaultDelete(id)\n\t}\n\n\t/**\n\t * Method to update a item in the database\n\t * Uses the `defaultUpdate` method by default. However,\n\t * you can override the method if required\n\t *\n\t * @param {I} id\n\t * @param {B} data\n\t * @returns {Promise<number>}\n\t * @memberof ILogicLayer\n\t */\n\tpublic update(id: I, data: B): Promise<number> {\n\t\treturn this.defaultUpdate(id, data)\n\t}\n\n\t/**\n\t * Finds all record that belongs to a client\n\t *\n\t * @param {ClientId} clientId\n\t * @returns {Promise<E[]>}\n\t * @memberof ILogicLayer\n\t */\n\tpublic findByClient(clientId: ClientId): Promise<E[]> {\n\t\treturn this.database.transaction(\"r\", this.table.name, () => {\n\t\t\treturn this.table.where({ clientId }).toArray()\n\t\t})\n\t}\n\n\t/**\n\t * Method to bulk add items to the database. Returns an array\n\t * of database ids\n\t *\n\t * @param {E[]} items\n\t * @returns {Promise<I[]>}\n\t * @memberof ILogicLayer\n\t */\n\tpublic bulkAdd(items: E[]): Promise<I[]> {\n\t\tconst addItems: E[] = items.reduce((acc: E[], cur: E) => {\n\t\t\treturn acc.concat({ ...cur, id: uuidv4() })\n\t\t}, [])\n\n\t\treturn this.database.transaction(\"rw\", this.table.name, () => {\n\t\t\treturn this.table.bulkAdd<true>(addItems, { allKeys: true })\n\t\t})\n\t}\n\n\tpublic bulkPut(items: E[]): Promise<I[]> {\n\t\tconst putItems: E[] = items.reduce((acc: E[], cur: E) => {\n\t\t\treturn acc.concat(hasProperty(cur, \"id\") ? cur : { ...cur, id: uuidv4() })\n\t\t}, [])\n\n\t\treturn this.database.transaction(\"rw\", this.table.name, () => {\n\t\t\treturn this.table.bulkPut<true>(putItems, { allKeys: true })\n\t\t})\n\t}\n\n\t/**\n\t * Method to get an item from the database used an ID\n\t *\n\t * @param {I} id\n\t * @returns {(Promise<E|undefined>)}\n\t * @memberof ILogicLayer\n\t */\n\tpublic findById(id: I): Promise<E | undefined> {\n\t\treturn this.database.transaction(\"rw\", this.table.name, () => {\n\t\t\treturn this.table.get(id)\n\t\t})\n\t}\n\n\t/**\n\t * Deletes the data for a specific client\n\t *\n\t * @param {ClientId} clientId\n\t * @returns {Promise<number>}\n\t * @memberof ILogicLayer\n\t */\n\tpublic deleteByClient(clientId: ClientId): Promise<number> {\n\t\treturn this.database.transaction(\"rw\", this.table.name, () => {\n\t\t\treturn this.table.where(\"clientId\").equals(clientId).delete()\n\t\t})\n\t}\n\n\tpublic last(): Promise<E | undefined> {\n\t\treturn this.table.toCollection().last()\n\t}\n}\n\nexport default ILogicLayer\n","/**\n * Private route definitions\n *\n * @export\n * @enum {number}\n */\nexport enum PrivateRoutes {\n\tCoachingKit = \"/coaching-kit\",\n\tClientList = \"/client/list\",\n\tSessionFiles = \"/session-files\",\n\tHealthCheckQuiz = \"/health-check/quiz/:id?\",\n\tHealthCheckList = \"/health-check/listing\",\n\tHealthCheckSummary = \"/health-check/summary/:id\",\n\tDiscoverTopics = \"/discover-topics\",\n\tCFC = \"/cash-flow-canvas\",\n\tCFCEdit = \"/cash-flow-canvas/:id\",\n\tCFCListing = \"/cfc/listing\",\n\tCFCCompare = \"/cfc/compare\",\n\tChangeLevers = \"/change-levers\",\n\tActionChecklist = \"/action-checklist\",\n\tDTFundingBusiness = \"/funding-business\",\n\tDTManagingCashFlow = \"/managing-cash-flow\",\n\tDTPlanningBusiness = \"/planning-business\",\n\tDTPlanningFinanicalCommitments = \"/planning-financial-commitments\",\n\tDTRecordKeeping = \"/record-keeping\",\n\tDTSellingClosingSuccession = \"/selling-closing-succession\",\n\tDTTrackingPerformance = \"/tracking-performance\",\n}\n\n/**\n * Public route definitions\n *\n * @export\n * @enum {number}\n */\nexport enum PublicRoutes {\n\tHome = \"/\",\n}\n\n/**\n * Replaces a variable element in a route with a value\n *\n * [[\":id\", \"1\"]] -> /health-check/summary/:id = /health-check/summary/1\n *\n * @param {PrivateRoutes|PublicRoutes} route Route to replace a value from\n * @param {[string, string][]} replacements Items to find and replace\n * @returns string\n */\nexport const routeVarReplacement = (\n\troute: PrivateRoutes | PublicRoutes,\n\treplacements: [string, string][]\n): string => {\n\tconst r = replacements.reduce((s, rep) => {\n\t\treturn s.replace(rep[0], rep[1])\n\t}, route.toString())\n\n\treturn r\n}\n","/* eslint-disable import/prefer-default-export */\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nexport const useSharedNavStyles = makeStyles(() => ({\n\troot: {\n\t\tflexGrow: 1,\n\t},\n\tbox: {\n\t\tdisplay: \"flex\",\n\t\tflexGrow: 2,\n\t\tjustifyContent: \"flex-end\",\n\t},\n\tbutton: {\n\t\ttextTransform: \"capitalize\",\n\t},\n\tlogoBox: {\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"center\",\n\t\tflexGrow: 3,\n\t},\n\tsmall: {\n\t\tflexGrow: 1,\n\t},\n\tpublicLogo: {\n\t\tjustifyContent: \"flex-start\",\n\t\t\"& span\": {\n\t\t\tcolor: \"white\",\n\t\t},\n\t},\n}))\n","import { ClientId } from \"../../data/_config/shape\"\n\nconst storageKey = \"currentClientId\"\nexport const emptyClientValue = \"\"\n\nexport function setStorageClient(id: ClientId): void {\n\twindow.localStorage.setItem(storageKey, `${id}`)\n}\n\nexport function getStorageClient(): ClientId | undefined {\n\tconst id = window.localStorage.getItem(storageKey)\n\tif (id) {\n\t\treturn id\n\t}\n\n\treturn undefined\n}\n\nexport function removeStorageClient(): void {\n\twindow.localStorage.removeItem(storageKey)\n}\n","import { Dispatch } from \"react\"\nimport { CFCStruct } from \"../../data/_config/shape\"\n\ntype QuestionValues = {\n\tone: number\n\ttwo: number\n\tthree: number\n\tfour: number | undefined\n}\n\n/**\n * State structure of the CFC Context\n *\n * @export\n * @interface ICFCState\n */\n\nexport type ItemUpdaterFunction = (items: any) => void\n\nexport interface ICFCState {\n\tduplicateError: boolean\n\tinvalidDateError: boolean\n\tquestionValues: QuestionValues\n\tdispatch: Dispatch<CFCReducerActions>\n\n\tcanvasItemUpdater: ItemUpdaterFunction[]\n\tsetCanvasItemUpdater?: any\n\tleftCompare?: CFCStruct\n\trightCompare?: CFCStruct\n\tcopyCanvasActive: boolean\n}\n\n/**\n * Available action types\n *\n * @export\n * @enum {number}\n */\nexport enum CFCActionTypes {\n\tChangeDuplicateError = \"change_duplicate_error\",\n\tChangeInvalidDateError = \"change_invalid_date_error\",\n\tChangeQuestionValues = \"change_question_values\",\n\tChangeCompare = \"change_compare\",\n\tChangeCopyCanvasActive = \"change_copy_canvas_active\",\n}\n\nexport type ChangeComparePayload = {\n\tleft: CFCStruct\n\tright: CFCStruct\n}\n\n/**\n * Defines the type:payload type pairing\n * aka; what the structure of the payload should be\n * given a certain type\n *\n * @export\n * @type {CFCReducerActions}\n */\nexport type CFCReducerActions =\n\t| {\n\t\t\ttype: CFCActionTypes.ChangeDuplicateError\n\t\t\tpayload: ICFCState[\"duplicateError\"]\n\t  }\n\t| {\n\t\t\ttype: CFCActionTypes.ChangeInvalidDateError\n\t\t\tpayload: ICFCState[\"invalidDateError\"]\n\t  }\n\t| {\n\t\t\ttype: CFCActionTypes.ChangeQuestionValues\n\t\t\tpayload: ICFCState[\"questionValues\"]\n\t  }\n\t| {\n\t\t\ttype: CFCActionTypes.ChangeCopyCanvasActive\n\t\t\tpayload: ICFCState[\"copyCanvasActive\"]\n\t  }\n\t| {\n\t\t\ttype: CFCActionTypes.ChangeCompare\n\t\t\tpayload: ChangeComparePayload\n\t  }\n","import { createContext } from \"react\"\nimport { IClientState } from \"./client-outline\"\n\n/**\n * Defines a default structure for the client state\n *\n */\nexport const defaultClientState: IClientState = {\n\tstate: {\n\t\tclients: [],\n\t\tclientSynced: false,\n\t\tlastViewedHC: null,\n\t},\n\tdispatch: () => null,\n}\n\n// defines the client context\nconst ClientContext = createContext(defaultClientState)\n\nexport default ClientContext\n","import Dexie from \"dexie\"\nimport { ClientDataStruct, ClientId } from \"../_config/shape\"\n\n/**\n * Client database definition\n *\n * @class ClientDatabase\n * @extends {Dexie}\n */\nclass ClientDatabase extends Dexie {\n\t/**\n\t * Table used to store clients\n\t *\n\t * @type {Dexie.Table<IBaseClient, number>}\n\t * @memberof ClientDatabase\n\t */\n\tclients!: Dexie.Table<ClientDataStruct, ClientId>\n\n\t/**\n\t * Creates an instance of ClientDatabase.\n\t *\n\t * @memberof ClientDatabase\n\t */\n\tconstructor() {\n\t\tsuper(\"ClientDatabase\")\n\t\tthis.applyMigrations()\n\n\t\tthis.clients = this.table(\"clients\")\n\n\t\tthis.replaceIdsWithStrings()\n\t}\n\n\t/**\n\t * Applys the migration for the database.\n\t * Add new migrations when the database needs to update\n\t *\n\t * @private\n\t * @memberof ClientDatabase\n\t */\n\tprivate applyMigrations(): void {\n\t\t// Version 1.1\n\t\tthis.version(1.1).stores({\n\t\t\tclients: \"++id,name\",\n\t\t})\n\n\t\tthis.version(2).stores({\n\t\t\tclients: \"++id, name, createdAt\",\n\t\t})\n\t}\n\n\tprivate replaceIdsWithStrings(): void {\n\t\tthis.clients.toCollection().modify((client) => {\n\t\t\tif (typeof client.id === \"number\") {\n\t\t\t\tclient.id = `${client.id}`\n\t\t\t}\n\t\t})\n\t}\n}\n\nconst ClientDB = new ClientDatabase()\n\nexport default ClientDB\n","import Dexie from \"dexie\"\nimport { CFCStruct, CFCId } from \"../_config/shape\"\n\n/**\n * Database definition for the CFC data\n *\n * @class CFCDatabase\n * @extends {Dexie}\n */\nclass CFCDatabase extends Dexie {\n\t/**\n\t * Table used to store Canvas data\n\t *\n\t * @type {Dexie.Table<CFCStruct, CFCId>}\n\t * @memberof CFCDatabase\n\t */\n\tcanvases!: Dexie.Table<CFCStruct, CFCId>\n\n\t/**\n\t * Creates an instance of CFCDatabase.\n\t *\n\t * @memberof CFCDatabase\n\t */\n\tconstructor() {\n\t\tsuper(\"CFCDatabase\")\n\t\tthis.applyMigrations()\n\n\t\t// eslint-disable-next-line\n\t\tthis.canvases = this.table(\"canvases\")\n\n\t\tthis.replaceIdsWithStrings()\n\t}\n\n\t/**\n\t * Applys the migration for the database.\n\t * Add new migrations when the database needs to update\n\t *\n\t * @private\n\t * @memberof CFCDatabase\n\t */\n\tprivate applyMigrations(): void {\n\t\tthis.version(1).stores({\n\t\t\tcanvases: `\n        ++id,\n        clientId,\n        createdAt,\n        canvasTitle,\n        canvasType,\n        canvasTimeFrame,\n        canvasStartDate,\n        canvasEndDate,\n        gstOnSales,\n        gstOnPurchases,\n        openingBalance,\n        paygWithholding,\n        superAmount,\n        incomeTax,\n        cashToOwner,\n        cashToBank,\n        stock,\n        creditors,\n        debtors,\n        assets,\n        loans,\n        *cashInItems,\n        *cashOutItems\n      `,\n\t\t})\n\n\t\tthis.version(1.1).stores({\n\t\t\tcanvases: `\n        ++id,\n        clientId,\n        createdAt,\n        canvasTitle,\n        canvasType,\n        canvasTimeFrame,\n        canvasStartDate,\n        canvasEndDate,\n        gstOnSales,\n        gstOnPurchases,\n        openingBalance,\n        paygWithholding,\n        superAmount,\n        incomeTax,\n        cashToOwner,\n        cashToBank,\n        stock,\n        creditors,\n        debtors,\n        assets,\n        loans,\n        *cashInItems,\n\t\t\t\t*cashOutItems,\n\t\t\t\t[canvasType+canvasTimeFrame+clientId]\n      `,\n\t\t})\n\t}\n\n\tprivate replaceIdsWithStrings(): void {\n\t\tthis.canvases.toCollection().modify((canvas) => {\n\t\t\tif (typeof canvas.id === \"number\") {\n\t\t\t\tcanvas.id = `${canvas.id}`\n\t\t\t}\n\t\t\tif (typeof canvas.clientId === \"number\") {\n\t\t\t\tcanvas.clientId = `${canvas.clientId}`\n\t\t\t}\n\t\t})\n\t}\n}\n\nconst CFCDB = new CFCDatabase()\n\nexport default CFCDB\n","import {\n\tActionChecklistPriorityStruct,\n\tBaseActionChecklistPriorityStruct,\n\tClientId,\n} from \"../_config/shape\"\nimport ActionChecklistDB from \"./ActionChecklistDatabase\"\nimport ILogicLayer from \"../_config/logicLayer\"\nimport { PossibleActionItems } from \"../../state/action-checklist/shape\"\nimport { findByClientAndContainer } from \"./_config/utilities\"\n\n/**\n * Logic implementation for priority items for the\n * Action Checklist databasea\n *\n * @class ActionChecklistPriorityLogic\n * @extends {ILogicLayer<ActionChecklistPriorityStruct, BaseActionChecklistPriorityStruct>}\n */\nclass ActionChecklistPriorityLogic extends ILogicLayer<\n\tActionChecklistPriorityStruct,\n\tBaseActionChecklistPriorityStruct\n> {\n\t/**\n\t * Creates an instance of ActionChecklistPriorityLogic.\n\t *\n\t * @memberof ActionChecklistPriorityLogic\n\t */\n\tconstructor() {\n\t\tsuper(ActionChecklistDB, ActionChecklistDB.priority)\n\t}\n\n\t/**\n\t * Finds all action priority by container and client\n\t *\n\t * @param {PossibleActionItems} container\n\t * @param {ClientId} clientId\n\t * @returns {Promise<ActionChecklistStruct[]>}\n\t * @memberof ActionChecklistLogic\n\t */\n\tfindByClientAndContainer(\n\t\tcontainer: PossibleActionItems,\n\t\tclientId: ClientId\n\t): Promise<ActionChecklistPriorityStruct[]> {\n\t\treturn findByClientAndContainer<ActionChecklistPriorityStruct>(\n\t\t\tcontainer,\n\t\t\tclientId,\n\t\t\tthis.database,\n\t\t\tthis.table\n\t\t)\n\t}\n}\n\n// Creates a instance of the logic class and exports the instance\nconst ActionPriorityUseCase = new ActionChecklistPriorityLogic()\n\nexport default ActionPriorityUseCase\n","import { makeStyles } from \"@material-ui/core\"\n\n// Loading styles\nconst useLoadingStyles = makeStyles((theme) => ({\n\troot: {\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"center\",\n\t\tpaddingTop: theme.spacing(2),\n\t\tpaddingBottom: theme.spacing(2),\n\t},\n}))\n\nexport default useLoadingStyles\n","import React, { ReactElement } from \"react\"\nimport { Box, CircularProgress } from \"@material-ui/core\"\nimport useLoadingStyles from \"./_config/styles\"\n\n/**\n * Loading component\n *\n * @returns ReactElement\n */\nconst Loading = (): ReactElement => {\n\tconst styles = useLoadingStyles()\n\n\treturn (\n\t\t<Box className={styles.root}>\n\t\t\t<CircularProgress />\n\t\t</Box>\n\t)\n}\n\nexport default Loading\n","import { createContext } from \"react\"\nimport { ICFCState } from \"./shape\"\n\nexport const defaultCFCState: ICFCState = {\n\tdispatch: () => null,\n\tduplicateError: false,\n\tinvalidDateError: false,\n\tcopyCanvasActive: false,\n\tquestionValues: {\n\t\tone: 0,\n\t\ttwo: 0,\n\t\tthree: 0,\n\t\tfour: undefined,\n\t},\n\tcanvasItemUpdater: [],\n\tsetCanvasItemUpdater: () => null,\n}\n\nconst CFCContext = createContext(defaultCFCState)\n\nexport default CFCContext\n","import ILogicLayer from \"../_config/logicLayer\"\nimport { ClientDataStruct, BaseClientStruct } from \"../_config/shape\"\nimport ClientDB from \"./ClientDatabase\"\n\n/**\n * Logic implementation for the Client Database\n *\n * @class ClientLogic\n * @extends {ILogicLayer<ClientDataStruct, BaseClientStruct>}\n */\nclass ClientLogic extends ILogicLayer<ClientDataStruct, BaseClientStruct> {\n\t/**\n\t * Creates an instance of ClientLogic.\n\t *\n\t * @memberof ClientLogic\n\t */\n\tconstructor() {\n\t\tsuper(ClientDB, ClientDB.clients)\n\t}\n}\n\n// Creates a instance of the logic class and exports the instance\nconst ClientUseCase = new ClientLogic()\n\nexport default ClientUseCase\n","import { makeStyles } from \"@material-ui/core\"\n\ntype InputProps = {\n\tstacked: boolean\n\tmini: boolean\n\tfullHeight?: boolean\n}\ntype StyleRtn = {}\n\nconst useStyles = makeStyles((theme) => ({\n\troot: (props: InputProps): StyleRtn => ({\n\t\tflexDirection: props.stacked ? \"column\" : \"row\",\n\t\tdisplay: \"flex\",\n\t\theight: props.fullHeight ? \"100%\" : \"auto\",\n\t\t[theme.breakpoints.down(\"sm\")]: {\n\t\t\tflexDirection: \"column\",\n\t\t\talignItem: \"flex-start\",\n\t\t},\n\t}),\n\ttype: (props: InputProps): StyleRtn => ({\n\t\tflexGrow: 2,\n\t\tpaddingRight: props.stacked ? 0 : theme.spacing(2),\n\t\tmarginBottom: !props.stacked ? 0 : theme.spacing(2),\n\t\t\"& p\": {\n\t\t\tfontWeight: theme.typography.fontWeightRegular,\n\t\t\tfontSize: props.mini\n\t\t\t\t? theme.typography.body1.fontSize\n\t\t\t\t: theme.typography.h6.fontSize,\n\t\t},\n\t\t\"& span\": {\n\t\t\tdisplay: \"block\",\n\t\t\tcolor: theme.palette.grey[700],\n\t\t},\n\t\t[theme.breakpoints.down(\"md\")]: {\n\t\t\tmarginBottom: 0,\n\t\t\tpaddingRight: 0,\n\t\t},\n\t}),\n\tmoneyInput: (props: InputProps): StyleRtn => ({\n\t\t[theme.breakpoints.up(\"md\")]: {\n\t\t\tmaxWidth: props.stacked ? \"100%\" : \"30%\",\n\t\t},\n\t\t[theme.breakpoints.down(\"md\")]: {\n\t\t\tmarginTop: theme.spacing(2),\n\t\t},\n\t}),\n}))\n\nexport default useStyles\n","import React, { ReactElement } from \"react\"\nimport { Typography, Box, makeStyles } from \"@material-ui/core\"\nimport { Link } from \"react-router-dom\"\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tdisplay: \"flex\",\n\t\talignItems: \"center\",\n\t},\n\timg: {\n\t\tmaxWidth: \"45px\",\n\t\tdisplay: \"block\",\n\t\theight: \"auto\",\n\t\tmarginRight: theme.spacing(1),\n\t\t[theme.breakpoints.down(\"sm\")]: {\n\t\t\tmaxWidth: \"30px\",\n\t\t},\n\t},\n\tlink: {\n\t\ttextDecoration: \"none\",\n\t},\n\ttype: {\n\t\tcolor: theme.palette.text.primary,\n\t\t[theme.breakpoints.down(\"sm\")]: {\n\t\t\tfontSize: theme.typography.pxToRem(18),\n\t\t\tposition: \"absolute\",\n\t\t\twidth: \"1px\",\n\t\t\theight: \"1px\",\n\t\t\tpadding: 0,\n\t\t\tmargin: \"-1px\",\n\t\t\toverflow: \"hidden\",\n\t\t\tclip: \"rect(0, 0, 0, 0)\",\n\t\t\twhiteSpace: \"nowrap\",\n\t\t\tborderWidth: 0,\n\t\t},\n\t},\n}))\n\ntype LogoProps = {\n\tto: string\n\tclassName?: string\n}\n\n/**\n * Logo component\n *\n * @export\n * @param {LogoProps} { to, className = \"\" }\n * @returns {ReactElement}\n */\nexport default function Logo({ to, className = \"\" }: LogoProps): ReactElement {\n\tconst cls = useStyles()\n\n\treturn (\n\t\t<Link to={to} className={cls.link}>\n\t\t\t<Box className={`${cls.root} ${className}`}>\n\t\t\t\t<img src=\"/images/logo.png\" alt=\"\" className={cls.img} />\n\t\t\t\t<Typography className={cls.type} variant=\"h6\" component=\"span\">\n\t\t\t\t\tCash Flow Coaching Kit\n\t\t\t\t</Typography>\n\t\t\t</Box>\n\t\t</Link>\n\t)\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nfunction numOrZero(val: any): number {\n\tconst num = parseInt(val, 10)\n\t// eslint-disable-next-line no-restricted-globals\n\tif (typeof num === \"number\" && !isNaN(num)) return num\n\treturn 0\n}\n\n/**\n * A reducer method to sum an array of numbers\n *\n * @returns {ReducerHOF<number, number>}\n */\nfunction sum(): ReducerHOF<number, number> {\n\treturn (acc, cur): number => numOrZero(acc) + numOrZero(cur)\n}\n\n/**\n * A HOF to add a specific value\n *\n * @param {number} val\n * @returns {MathHOF}\n */\nfunction add(val: number): MathHOF {\n\treturn (x): number => {\n\t\treturn numOrZero(x) + numOrZero(val)\n\t}\n}\n\n/**\n * A HOF to minus a specific value\n *\n * @param {number} val\n * @returns {MathHOF}\n */\nfunction minusBy(val: number): MathHOF {\n\treturn (x): number => {\n\t\treturn numOrZero(x) - numOrZero(val)\n\t}\n}\n\n/**\n * A HOF to divide by a specific value\n *\n * @param {number} val\n * @returns {MathHOF}\n */\nfunction divideBy(val: number): MathHOF {\n\treturn (x): number => {\n\t\treturn numOrZero(val) === 0 ? 0 : numOrZero(x) / numOrZero(val)\n\t}\n}\n\n/**\n * FP pipe method, takes a list of functions and outputs a single value\n *\n * @param fns\n */\nconst pipe = <Input extends any, Output extends any, Fns extends any[]>(\n\t// eslint-disable-next-line\n\t...fns: Fns\n) => (x: Input): Output => fns.reduce((v, f) => f(v), x)\n\nexport { sum, minusBy, divideBy, pipe, add, numOrZero }\n","import ILogicLayer from \"../_config/logicLayer\"\nimport {\n\tCFCStruct,\n\tBaseCFCStruct,\n\tClientId,\n\tCanvasType,\n\tCFCTimeFrame,\n} from \"../_config/shape\"\nimport CFCDB from \"./CFCDatabase\"\n\n/**\n * Logic implementation for the CFC data\n *\n * @class CFCLogic\n * @extends {ILogicLayer<CFCStruct, BaseCFCStruct>}\n */\nclass CFCLogic extends ILogicLayer<CFCStruct, BaseCFCStruct> {\n\t/**\n\t * Creates an instance of CFCLogic.\n\t *\n\t * @memberof CFCLogic\n\t */\n\tconstructor() {\n\t\tsuper(CFCDB, CFCDB.canvases)\n\t}\n\n\t/**\n\t * Counts the number of records for a given client\n\t *\n\t * @param {ClientId} clientId\n\t * @returns {Promise<number>}\n\t * @memberof CFCLogic\n\t */\n\tcountClientRecords(clientId: ClientId): Promise<number> {\n\t\treturn this.database.transaction(\"r\", this.table.name, () => {\n\t\t\treturn this.table.where({ clientId }).count()\n\t\t})\n\t}\n\n\t/**\n\t * Finds records for a client based on the canvas type and timeframe\n\t *\n\t * @param {CanvasType} type\n\t * @param {CFCTimeFrame} timeframe\n\t * @param {ClientId} clientId\n\t * @returns {Promise<CFCStruct[]>}\n\t * @memberof CFCLogic\n\t */\n\tfindPossibleDuplicates(\n\t\ttype: CanvasType,\n\t\ttimeframe: CFCTimeFrame,\n\t\tclientId: ClientId\n\t): Promise<CFCStruct[]> {\n\t\treturn this.database.transaction(\"r\", this.table.name, () => {\n\t\t\treturn this.table\n\t\t\t\t.where({\n\t\t\t\t\tcanvasType: type,\n\t\t\t\t\tcanvasTimeFrame: timeframe,\n\t\t\t\t\tclientId,\n\t\t\t\t})\n\t\t\t\t.toArray()\n\t\t})\n\t}\n}\n\n// Creates a instance of the logic class and exports the instance\nconst CFCUseCase = new CFCLogic()\n\nexport default CFCUseCase\n","import {\n\tActionChecklistStruct,\n\tBaseActionChecklistStruct,\n\tClientId,\n\tActionChecklistId,\n} from \"../_config/shape\"\nimport ActionChecklistDB from \"./ActionChecklistDatabase\"\nimport ILogicLayer from \"../_config/logicLayer\"\nimport { PossibleActionItems } from \"../../state/action-checklist/shape\"\nimport { findByClientAndContainer } from \"./_config/utilities\"\n\n/**\n * Logic implementation for Action Items for the\n * Action Checklist database\n *\n * @class ActionChecklistLogic\n * @extends {ILogicLayer<ActionChecklistStruct, BaseActionChecklistStruct>}\n */\nclass ActionChecklistLogic extends ILogicLayer<\n\tActionChecklistStruct,\n\tBaseActionChecklistStruct\n> {\n\t/**\n\t * Creates an instance of ActionChecklistLogic.\n\t *\n\t * @memberof ActionChecklistLogic\n\t */\n\tconstructor() {\n\t\tsuper(ActionChecklistDB, ActionChecklistDB.actionItems)\n\t}\n\n\t/**\n\t * Adds functionality for processing bulk updates\n\t *\n\t * @param {ActionChecklistStruct[]} items\n\t * @returns {Promise<ActionChecklistId>} Last updated item id\n\t * @memberof ActionChecklistLogic\n\t */\n\tbulkUpdate(items: ActionChecklistStruct[]): Promise<ActionChecklistId> {\n\t\treturn this.database.transaction(\"rw\", this.table, () => {\n\t\t\treturn this.table.bulkPut(items)\n\t\t})\n\t}\n\n\t/**\n\t * Finds all action items by container and client\n\t *\n\t * @param {PossibleActionItems} container\n\t * @param {ClientId} clientId\n\t * @returns {Promise<ActionChecklistStruct[]>}\n\t * @memberof ActionChecklistLogic\n\t */\n\tfindByClientAndContainer(\n\t\tcontainer: PossibleActionItems,\n\t\tclientId: ClientId\n\t): Promise<ActionChecklistStruct[]> {\n\t\treturn findByClientAndContainer<ActionChecklistStruct>(\n\t\t\tcontainer,\n\t\t\tclientId,\n\t\t\tthis.database,\n\t\t\tthis.table\n\t\t)\n\t}\n}\n\n// Creates a instance of the logic class and exports the instance\nconst ActionChecklistUseCase = new ActionChecklistLogic()\n\nexport default ActionChecklistUseCase\n","import Dexie from \"dexie\"\nimport { HealthCheckDataStruct, HealthCheckId } from \"../_config/shape\"\n\n/**\n * Health check database definition\n *\n * @class HealthCheckDatabase\n * @extends {Dexie}\n */\nclass HealthCheckDatabase extends Dexie {\n\t/**\n\t * Table used to store health checks\n\t *\n\t * @type {Dexie.Table<IBaseHealthCheck, number>}\n\t * @memberof HealthCheckDatabase\n\t */\n\thealthChecks!: Dexie.Table<HealthCheckDataStruct, HealthCheckId>\n\n\t/**\n\t * Creates an instance of HealthCheckDatabase.\n\t *\n\t * @memberof HealthCheckDatabase\n\t */\n\tconstructor() {\n\t\tsuper(\"HealthCheckDatabase\")\n\t\tthis.applyMigrations()\n\n\t\tthis.healthChecks = this.table(\"healthChecks\")\n\n\t\tthis.replaceIdsWithStrings()\n\t}\n\n\t/**\n\t * Applys the migration for the database.\n\t * Add new migrations when the database needs to update\n\t *\n\t * @private\n\t * @memberof HealthCheckDatabase\n\t */\n\tprivate applyMigrations(): void {\n\t\t// Version 1\n\t\tthis.version(2).stores({\n\t\t\thealthChecks: \"++id, clientId, *answers, createdAt\",\n\t\t})\n\t\tthis.version(2.4).stores({\n\t\t\thealthChecks: \"++id, clientId, *answers, createdAt, [id+clientId]\",\n\t\t})\n\t}\n\n\tprivate replaceIdsWithStrings(): void {\n\t\tthis.healthChecks.toCollection().modify((healthCheck) => {\n\t\t\tif (typeof healthCheck.id === \"number\") {\n\t\t\t\thealthCheck.id = `${healthCheck.id}`\n\t\t\t}\n\t\t\tif (typeof healthCheck.clientId === \"number\") {\n\t\t\t\thealthCheck.clientId = `${healthCheck.clientId}`\n\t\t\t}\n\t\t})\n\t}\n}\n\nconst HealthCheckDB = new HealthCheckDatabase()\n\nexport default HealthCheckDB\n","/**\n * HOF to concat different strings together\n *\n * @param {string} s\n * @returns {StrToStrHOF}\n */\nfunction concatStr(s: string): StrToStrHOF {\n\treturn (x: string): string => x.concat(s)\n}\n\nexport default concatStr\n","import React, { ReactElement, useState } from \"react\"\nimport { Button, Menu, MenuItem, Divider, useTheme } from \"@material-ui/core\"\nimport { NavLink as RouterLink } from \"react-router-dom\"\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\"\nimport { generateKey, constructKey } from \"../../../util/lists/key\"\nimport {\n\tINavigationRoutesProps,\n\tINavRoutes,\n\tExtendsButton,\n} from \"../_config/shape\"\n\ninterface RWCProps extends ExtendsButton {\n\troute: INavRoutes\n\tchildRoutes: INavRoutes[]\n}\n\n/**\n * Renders a button with a menu for the child menu items\n *\n * @param {RWCProps} {\n * \troute,\n * \tchildRoutes,\n * \t// eslint-disable-next-line\n * \t...buttonProps\n * }\n * @returns {ReactElement}\n * @see https://material-ui.com/components/menus/#simple-menu\n */\nfunction RouteWithChildren({\n\troute,\n\tchildRoutes,\n\t// eslint-disable-next-line\n\t...buttonProps\n}: RWCProps): ReactElement {\n\tconst [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\n\n\tconst handleClick = (event: React.MouseEvent<HTMLAnchorElement>): void => {\n\t\tevent.preventDefault()\n\t\tsetAnchorEl(event.currentTarget)\n\t}\n\n\tconst handleClose = (): void => {\n\t\tsetAnchorEl(null)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Button\n\t\t\t\taria-controls={route.route}\n\t\t\t\taria-haspopup=\"true\"\n\t\t\t\tcomponent={RouterLink}\n\t\t\t\tto={route.route}\n\t\t\t\tonClick={handleClick}\n\t\t\t\tendIcon={<KeyboardArrowDownIcon />}\n\t\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t\t{...buttonProps}\n\t\t\t>\n\t\t\t\t{route.title}\n\t\t\t</Button>\n\t\t\t<Menu\n\t\t\t\tid={route.route}\n\t\t\t\tanchorEl={anchorEl}\n\t\t\t\tkeepMounted\n\t\t\t\topen={Boolean(anchorEl)}\n\t\t\t\tonClose={handleClose}\n\t\t\t>\n\t\t\t\t<MenuItem component={RouterLink} to={route.route} onClick={handleClose}>\n\t\t\t\t\t{route.subMenuTitle || route.title}\n\t\t\t\t</MenuItem>\n\t\t\t\t<Divider />\n\t\t\t\t{childRoutes.map((child) => (\n\t\t\t\t\t<MenuItem\n\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\tto={child.route}\n\t\t\t\t\t\tkey={`${route.title}-child--${child.route}`}\n\t\t\t\t\t\tonClick={handleClose}\n\t\t\t\t\t>\n\t\t\t\t\t\t{child.title}\n\t\t\t\t\t</MenuItem>\n\t\t\t\t))}\n\t\t\t</Menu>\n\t\t</>\n\t)\n}\n\n/**\n * Renders a list of buttons that links to a internal page\n *\n * @param {INavRoutes[]} { routes } Links to render\n * @param {StandardProps<ButtonProps<typeof Link, LinkProps>, ButtonClassKey>} { ...buttonProps } Button props to apply to each button\n */\nconst NavigationRoutes = ({\n\troutes,\n\t// eslint-disable-next-line\n\t...buttonProps\n}: INavigationRoutesProps): ReactElement => {\n\tconst [key] = useState(generateKey())\n\tconst theme = useTheme()\n\n\treturn (\n\t\t<>\n\t\t\t{routes.map(\n\t\t\t\t(route: INavRoutes, idx: number): ReactElement => {\n\t\t\t\t\tif (route.children) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<RouteWithChildren\n\t\t\t\t\t\t\t\troute={route}\n\t\t\t\t\t\t\t\tchildRoutes={route.children}\n\t\t\t\t\t\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t\t\t\t\t\t{...buttonProps}\n\t\t\t\t\t\t\t\tkey={constructKey(key, idx)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tstartIcon={route.Icon ? <route.Icon /> : null}\n\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\tactiveStyle={{\n\t\t\t\t\t\t\t\tfontWeight: theme.typography.fontWeightBold,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tto={route.route}\n\t\t\t\t\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t\t\t\t\t{...buttonProps}\n\t\t\t\t\t\t\tkey={constructKey(key, idx)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{route.title}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t)}\n\t\t</>\n\t)\n}\n\nexport default NavigationRoutes\n","import React, { ReactElement } from \"react\"\nimport { AppBar, Toolbar, Button, Typography, Grid } from \"@material-ui/core\"\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\"\nimport { useSharedNavStyles } from \"../_config/style\"\nimport { NavigationRoutes } from \"../_partials\"\nimport usePrimaryStyles from \"./_config/styles\"\nimport { routes } from \"./_config/data\"\nimport Logo from \"../../Logo\"\nimport { PublicRoutes } from \"../../../util/routes/routes\"\nimport useCurrentClient from \"../../../state/client/useCurrentClient\"\nimport Logout from \"../../Logout\"\n\n/**\n * Renders the primary navigation\n *\n * @returns {ReactElement}\n */\nconst PrimaryNavbar = (): ReactElement => {\n\tconst sharedStyle = useSharedNavStyles()\n\tconst styles = usePrimaryStyles()\n\tconst [currentClient] = useCurrentClient()\n\n\treturn (\n\t\t<div className={sharedStyle.root}>\n\t\t\t<AppBar position=\"static\" color=\"default\">\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t{currentClient ? (\n\t\t\t\t\t\t\t<Grid item sm={2} md={2} lg={4} className={styles.clientGridItem}>\n\t\t\t\t\t\t\t\t<Typography className={styles.clientCaption} variant=\"caption\">\n\t\t\t\t\t\t\t\t\tClient\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tclassName={`${styles.clientName} truncate`}\n\t\t\t\t\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t\t\t\t\t\tcomponent=\"p\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<span>{currentClient.name}</span>\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Grid item md={2} lg={4} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\tsm={5}\n\t\t\t\t\t\t\tmd={5}\n\t\t\t\t\t\t\tlg={4}\n\t\t\t\t\t\t\tclassName={`${sharedStyle.logoBox}`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Logo to={PublicRoutes.Home} />\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\tsm={5}\n\t\t\t\t\t\t\tmd={5}\n\t\t\t\t\t\t\tlg={4}\n\t\t\t\t\t\t\tclassName={`${sharedStyle.box} ${sharedStyle.small}`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<NavigationRoutes\n\t\t\t\t\t\t\t\troutes={routes}\n\t\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\t\tclassName={sharedStyle.button}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t{/* TODO: Pull into a separate component to add modal trigger and content */}\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName={sharedStyle.button}\n\t\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\t\tstartIcon={<HelpOutlineIcon />}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tHelp\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Logout />\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</div>\n\t)\n}\n\nexport default PrimaryNavbar\n","import React, { ReactElement, useContext, useMemo } from \"react\"\nimport { AppBar, Box, Toolbar } from \"@material-ui/core\"\nimport { useSharedNavStyles } from \"../_config/style\"\nimport { NavigationRoutes } from \"../_partials\"\nimport { routes } from \"./_config/data\"\nimport ShowMeHow from \"../../ShowMeHow\"\nimport { ClientContext } from \"../../../state/client\"\nimport { INavRoutes } from \"../_config/shape\"\nimport { routeVarReplacement, PrivateRoutes } from \"../../../util/routes/routes\"\n\n/**\n * Renders the secondary navigation\n *\n * @returns {ReactElement}\n */\nconst SecondaryNavbar = (): ReactElement => {\n\tconst sharedStyle = useSharedNavStyles()\n\tconst {\n\t\tstate: { lastViewedHC },\n\t} = useContext(ClientContext)\n\tconst navRoutes = useMemo((): INavRoutes[] => {\n\t\treturn routes.map((route) => {\n\t\t\tif (route.title === \"Health Check\") {\n\t\t\t\treturn {\n\t\t\t\t\ttitle: route.title,\n\t\t\t\t\troute:\n\t\t\t\t\t\tlastViewedHC !== null\n\t\t\t\t\t\t\t? routeVarReplacement(PrivateRoutes.HealthCheckSummary, [\n\t\t\t\t\t\t\t\t\t[\":id\", `${lastViewedHC}`],\n\t\t\t\t\t\t\t  ])\n\t\t\t\t\t\t\t: route.route,\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn route\n\t\t})\n\t}, [lastViewedHC])\n\n\treturn (\n\t\t<div className={sharedStyle.root}>\n\t\t\t<AppBar position=\"static\">\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<ShowMeHow />\n\n\t\t\t\t\t<Box className={sharedStyle.box}>\n\t\t\t\t\t\t<NavigationRoutes\n\t\t\t\t\t\t\troutes={navRoutes}\n\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\tclassName={sharedStyle.button}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Box>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</div>\n\t)\n}\n\nexport default SecondaryNavbar\n","/* eslint-disable import/prefer-default-export */\nimport RecentActorsIcon from \"@material-ui/icons/RecentActors\"\nimport { PrivateRoutes } from \"../../../../util/routes/routes\"\nimport { INavRoutes } from \"../../_config/shape\"\n\n// Nav routes definition for the Primary navigation\nexport const routes: INavRoutes[] = [\n\t{\n\t\troute: PrivateRoutes.ClientList,\n\t\ttitle: \"Client List\",\n\t\tIcon: RecentActorsIcon,\n\t},\n]\n","import React, { ReactElement } from \"react\"\nimport { AppBar, Box, Toolbar, Button } from \"@material-ui/core\"\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\"\nimport { useSharedNavStyles } from \"../_config/style\"\nimport { NavigationRoutes } from \"../_partials\"\nimport { routes } from \"./_config/data\"\nimport { IPublicNavbarProps } from \"./_config/shape\"\nimport { PublicRoutes } from \"../../../util/routes/routes\"\nimport Logo from \"../../Logo\"\n\n/**\n * Renders the primary navigation\n *\n * @returns {ReactElement}\n */\nconst PublicNavbar = ({ hasClients }: IPublicNavbarProps): ReactElement => {\n\tconst sharedStyle = useSharedNavStyles()\n\n\treturn (\n\t\t<div className={sharedStyle.root}>\n\t\t\t<AppBar position=\"static\">\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<Box className={`${sharedStyle.logoBox} ${sharedStyle.publicLogo}`}>\n\t\t\t\t\t\t<Logo to={PublicRoutes.Home} />\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Box className={sharedStyle.box}>\n\t\t\t\t\t\t{/* Show the client list button if the user has clients */}\n\t\t\t\t\t\t{hasClients ? (\n\t\t\t\t\t\t\t<NavigationRoutes\n\t\t\t\t\t\t\t\troutes={routes}\n\t\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\t\tclassName={sharedStyle.button}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{/* TODO: Pull into a separate component to add modal trigger and content */}\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName={sharedStyle.button}\n\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\tstartIcon={<HelpOutlineIcon />}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tHelp\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Box>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</div>\n\t)\n}\n\nexport default PublicNavbar\n","import { makeStyles } from \"@material-ui/core\"\n\n// Styles for the Expandable nav\nconst useExpandableNavStyles = makeStyles((theme) => ({\n\tdetails: {\n\t\tpaddingLeft: 0,\n\t\tpaddingRight: 0,\n\t\tflexDirection: \"column\",\n\t},\n\tsummary: {\n\t\t\"& .MuiExpansionPanelSummary-content\": {\n\t\t\tflexDirection: \"column\",\n\t\t},\n\t},\n\tsubHeading: {\n\t\tcolor: theme.palette.grey[700],\n\t\tfontSize: theme.typography.caption.fontSize,\n\t\tfontWeight: theme.typography.fontWeightRegular,\n\t\tdisplay: \"block\",\n\t},\n}))\n\nexport default useExpandableNavStyles\n","import React, { ReactElement } from \"react\"\nimport {\n\tExpansionPanel,\n\tExpansionPanelSummary,\n\tTypography,\n\tExpansionPanelDetails,\n} from \"@material-ui/core\"\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\nimport { IExpandableNavProps } from \"./_config/shape\"\nimport useExpandableNavStyles from \"./_config/styles\"\n\n/**\n * Sets up the core for the `ExpansionPanel` component. As a developer,\n * you'll have to provide the content for the `<ExpansionPanelDetails>`\n * component\n *\n * @param {string} {title} Title to display in the summary. Defaults to \"Control Panel\"\n * @param {ReactNode} {children} Content for display inside `<ExpansionPanelDetails>`\n * @returns ReactElement\n */\nconst ExpandableNav = ({\n\tsubHeading,\n\tchildren,\n\ttitle = \"Control Panel\",\n\tdefaultExpanded = true,\n\treactourLabel = \"\",\n}: IExpandableNavProps): ReactElement => {\n\tconst styles = useExpandableNavStyles()\n\n\treturn (\n\t\t<ExpansionPanel\n\t\t\tdefaultExpanded={defaultExpanded}\n\t\t\tTransitionProps={{ unmountOnExit: true }}\n\t\t\tdata-reactour={reactourLabel}\n\t\t>\n\t\t\t<ExpansionPanelSummary\n\t\t\t\texpandIcon={<ExpandMoreIcon />}\n\t\t\t\tclassName={styles.summary}\n\t\t\t>\n\t\t\t\t<Typography variant=\"h6\" component=\"h3\">\n\t\t\t\t\t{title}\n\t\t\t\t</Typography>\n\t\t\t\t{subHeading && (\n\t\t\t\t\t<Typography className={styles.subHeading} variant=\"h6\" component=\"h3\">\n\t\t\t\t\t\t{subHeading}\n\t\t\t\t\t</Typography>\n\t\t\t\t)}\n\t\t\t</ExpansionPanelSummary>\n\t\t\t<ExpansionPanelDetails className={styles.details}>\n\t\t\t\t{children}\n\t\t\t</ExpansionPanelDetails>\n\t\t</ExpansionPanel>\n\t)\n}\n\nexport default React.memo(ExpandableNav)\n","/**\n * Constructs a list items key\n *\n * @param {string} key A random key that stays **consistent**\n * @param {string} idx Map index to keep it unique within that list\n * @reurns `string`\n */\nexport const constructKey = (key: string, idx: number): string => {\n\treturn `${key}.${idx}`\n}\n\n/**\n * Generates a random key string\n *\n * @returns `string`\n */\nexport const generateKey = (): string => {\n\t// const arr = new Uint32Array(1)\n\t// window.crypto.getRandomValues(arr)\n\n\t// return `${arr[0]}`\n\treturn `${new Date().getTime()}`\n}\n","import {\n\tdifferenceInCalendarDays,\n\taddWeeks,\n\taddMonths,\n\taddYears,\n} from \"date-fns\"\nimport { CFCTimeFrame } from \"../../data/_config/shape\"\n\nexport const newTimestamp = (): number => new Date().getTime()\n\n/**\n * Checks if the end date should be synced with the start date\n *\n * @export\n * @param {Date} start\n * @param {Date} end\n * @returns {boolean}\n */\nexport function syncEndDate(start: Date, end: Date): boolean {\n\treturn differenceInCalendarDays(start, end) > 0\n}\n\nexport function calculatedEndDate(start: Date, timeframe: CFCTimeFrame): Date {\n\tswitch (timeframe) {\n\t\tcase \"weekly\":\n\t\t\treturn addWeeks(start, 1)\n\t\tcase \"fortnightly\":\n\t\t\treturn addWeeks(start, 2)\n\t\tcase \"monthly\":\n\t\t\treturn addMonths(start, 1)\n\t\tcase \"quaterly\":\n\t\t\treturn addMonths(start, 3)\n\t\tcase \"biannually\":\n\t\t\treturn addMonths(start, 6)\n\t\tcase \"yearly\":\n\t\t\treturn addYears(start, 1)\n\t\tcase \"other\":\n\t\tdefault:\n\t\t\treturn start\n\t}\n}\n","/**\n * Checks if a object has a property\n *\n * @param {any} obj\n * @param {string} prop\n * @returns {boolean}\n */\nconst hasProperty = (obj: any, prop: string): boolean =>\n\tObject.prototype.hasOwnProperty.call(obj, prop)\n\nexport default hasProperty\n","/**\n * Uppercases the first character in a string\n *\n * @param lower\n * @returns {string}\n */\nconst upperFirst = (lower: string): string =>\n\tlower.replace(/^\\w/, (c) => c.toUpperCase())\n\nexport default upperFirst\n","import React, { ReactElement } from \"react\"\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\"\n\ntype SelectValue = string | number\n\nexport type SelectFieldOpt = { value: SelectValue; label: string }\n\nexport type SelectFieldOptions = SelectFieldOpt[]\n\n/**\n * Prop definition for the SelectField component\n *\n * @interface SelectFieldProps\n */\ninterface SelectFieldProps {\n\tname: string\n\tlabel: string\n\tvalue: SelectValue\n\tonChange: InputChange\n\toptions: SelectFieldOptions\n}\n\n/**\n * Abstraction used for a select field\n *\n * @export\n * @param {SelectFieldProps} {\n * \tname,\n * \tlabel,\n * \tvalue,\n * \tonChange,\n * \toptions,\n * }\n * @returns {ReactElement}\n */\nexport default React.memo(function SelectField({\n\tname,\n\tlabel,\n\tvalue,\n\tonChange,\n\toptions,\n}: SelectFieldProps): ReactElement {\n\treturn (\n\t\t<FormControl variant=\"outlined\" fullWidth>\n\t\t\t<InputLabel id={`${name}--label`}>{label}</InputLabel>\n\t\t\t<Select\n\t\t\t\tlabelId={`${name}--label`}\n\t\t\t\tid={name}\n\t\t\t\tname={name}\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={onChange}\n\t\t\t\tlabel={label}\n\t\t\t>\n\t\t\t\t{options.map((opt) => (\n\t\t\t\t\t<MenuItem value={opt.value} key={`${name}--${opt.label}`}>\n\t\t\t\t\t\t{opt.label}\n\t\t\t\t\t</MenuItem>\n\t\t\t\t))}\n\t\t\t</Select>\n\t\t</FormControl>\n\t)\n})\n","import React, { ReactElement } from \"react\"\nimport { ControlProps } from \"./__config/shape\"\nimport SelectField from \"../SelectField\"\nimport { CanvasType } from \"../../data/_config/shape\"\nimport { canvasTypeOptions } from \"./__config/utilities\"\n\n/**\n * Select field for the Canvas Type value\n *\n * @export\n * @param {ControlProps<CanvasType>} {\n * \tonChange,\n * \tvalue,\n * }\n * @returns {ReactElement}\n */\nexport default React.memo(function CanvasTypeSelect({\n\tonChange,\n\tvalue,\n}: ControlProps<CanvasType>): ReactElement {\n\treturn (\n\t\t<SelectField\n\t\t\tname=\"canvasType\"\n\t\t\tvalue={value}\n\t\t\tlabel=\"Canvas type\"\n\t\t\tonChange={onChange}\n\t\t\toptions={canvasTypeOptions()}\n\t\t/>\n\t)\n})\n","import React, { ReactElement } from \"react\"\nimport { ControlProps } from \"./__config/shape\"\nimport { CFCTimeFrame } from \"../../data/_config/shape\"\nimport SelectField from \"../SelectField\"\nimport { canvasTimeFrameOptions } from \"./__config/utilities\"\n\n/**\n * Select field for the Canvas time-frame value\n *\n * @export\n * @param {ControlProps<CFCTimeFrame>} {\n * \tonChange,\n * \tvalue,\n * }\n * @returns {ReactElement}\n */\nexport default React.memo(function CanvasTimeFrameSelect({\n\tonChange,\n\tvalue,\n}: ControlProps<CFCTimeFrame>): ReactElement {\n\treturn (\n\t\t<SelectField\n\t\t\tname=\"canvasTimeFrame\"\n\t\t\tvalue={value}\n\t\t\tlabel=\"Canvas time-frame\"\n\t\t\tonChange={onChange}\n\t\t\toptions={canvasTimeFrameOptions()}\n\t\t/>\n\t)\n})\n","import { Dispatch } from \"react\"\nimport {\n\tIClientReducerAction,\n\tClientActionTypes,\n} from \"../../state/client/client-outline\"\nimport ClientUseCase from \"./ClientLogic\"\nimport {\n\tgetStorageClient,\n\temptyClientValue,\n} from \"../../util/localStorage/client\"\nimport filterById from \"../../util/filters/ById\"\n\n/**\n * Syncs the client state with the db\n *\n * @param {Dispatch<IClientReducerAction>} dispatch Dispatch method for the client state\n * @returns Promise<void>\n * TODO: return promise to be resovled from the form\n */\nconst syncClientsWithDb = async (\n\tdispatch: Dispatch<IClientReducerAction>\n): Promise<void> => {\n\tconst clients = await ClientUseCase.syncWithDatabase()\n\n\tdispatch({\n\t\ttype: ClientActionTypes.BulkAdd,\n\t\tpayload: clients,\n\t})\n\n\tconst currentStorageClient = getStorageClient()\n\n\tif (!currentStorageClient || currentStorageClient === emptyClientValue) {\n\t\tif (clients[0]?.id) {\n\t\t\tdispatch({\n\t\t\t\ttype: ClientActionTypes.ChangeCurrentClient,\n\t\t\t\tpayload: clients[0].id,\n\t\t\t})\n\t\t}\n\t} else {\n\t\tconst filtered = clients.filter(filterById(currentStorageClient))\n\t\tif (filtered[0]?.id) {\n\t\t\tdispatch({\n\t\t\t\ttype: ClientActionTypes.ChangeCurrentClient,\n\t\t\t\tpayload: filtered[0].id,\n\t\t\t})\n\t\t}\n\t}\n\n\tdispatch({\n\t\ttype: ClientActionTypes.UpdateClientSynced,\n\t\tpayload: true,\n\t})\n}\n\nexport default syncClientsWithDb\n","import React, { ReactElement, cloneElement, memo } from \"react\"\nimport { makeStyles } from \"@material-ui/core\"\nimport { isSameDay } from \"date-fns\"\nimport { KeyboardDatePicker } from \"@material-ui/pickers\"\nimport { useStyles as useDayStyles } from \"@material-ui/pickers/views/Calendar/Day\"\nimport { SinglePickerProps } from \"../__config/shape\"\n\nconst useStyles = makeStyles((theme) => ({\n\tdateHighlight: {\n\t\tborderWidth: `1px`,\n\t\tborderColor: theme.palette.primary.main,\n\t\tborderStyle: \"dashed\",\n\t},\n}))\n\n/**\n * A single Date picker field used in the Range picker\n *\n * @export\n * @param {SinglePickerProps} {\n * \tvalue,\n * \tonChange,\n * \topen,\n * \tonOpen,\n * \tonClose,\n * \tlabel,\n * \tcompareDay,\n * \tid,\n * \tminDate = new Date(1900, 1, 1),\n * }\n * @returns {ReactElement}\n */\nfunction SinglePicker({\n\tvalue,\n\tonChange,\n\topen,\n\tonOpen,\n\tonClose,\n\tlabel,\n\tcompareDay,\n\tid,\n\tminDate,\n}: SinglePickerProps): ReactElement {\n\tconst curStyles = useDayStyles()\n\tconst customCls = useStyles()\n\n\t/**\n\t * Renders the day components based on the current date selected\n\t *\n\t * @param {Date} compare\n\t * @returns\n\t */\n\tfunction renderDay(compare: Date) {\n\t\treturn (\n\t\t\tday: Date | null,\n\t\t\tselectedDate: Date | null,\n\t\t\tisInCurrentMonth: boolean,\n\t\t\tdayComponent: ReactElement\n\t\t): ReactElement => {\n\t\t\tif (day && isSameDay(day, compare)) {\n\t\t\t\treturn cloneElement(dayComponent, {\n\t\t\t\t\tclassName: `${curStyles.day} ${customCls.dateHighlight}`,\n\t\t\t\t})\n\t\t\t}\n\t\t\treturn dayComponent\n\t\t}\n\t}\n\n\tfunction onDateChange(date: Date | null): void {\n\t\tonChange(date, id)\n\t}\n\n\treturn (\n\t\t<KeyboardDatePicker\n\t\t\tvalue={value}\n\t\t\tdisableToolbar\n\t\t\tvariant=\"inline\"\n\t\t\tinputVariant=\"outlined\"\n\t\t\tonChange={onDateChange}\n\t\t\tminDate={minDate}\n\t\t\topen={open}\n\t\t\tformat=\"dd/MM/yyyy\"\n\t\t\tonOpen={onOpen}\n\t\t\tonClose={onClose}\n\t\t\tlabel={label}\n\t\t\trenderDay={renderDay(compareDay)}\n\t\t\tfullWidth\n\t\t\taria-label={label}\n\t\t\tKeyboardButtonProps={{\n\t\t\t\t\"aria-label\": \"Open calendar\",\n\t\t\t}}\n\t\t\tinputProps={{\n\t\t\t\t\"aria-label\": label,\n\t\t\t}}\n\t\t/>\n\t)\n}\n\nexport default memo(SinglePicker)\n","import React, {\n\tReactElement,\n\tuseState,\n\tuseEffect,\n\tmemo,\n\tuseCallback,\n} from \"react\"\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\"\nimport DateFnsUtils from \"@date-io/date-fns\"\nimport { Typography, makeStyles, Box } from \"@material-ui/core\"\nimport { DateRangeProps, OpenState } from \"./__config/shape\"\nimport { SinglePicker } from \"./__partials\"\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"row\",\n\t\talignItems: \"flex-start\",\n\t\t[theme.breakpoints.down(\"sm\")]: {\n\t\t\tflexDirection: \"column\",\n\t\t\talignItems: \"center\",\n\t\t},\n\t},\n\tseparator: {\n\t\tpaddingRight: theme.spacing(1),\n\t\tpaddingLeft: theme.spacing(1),\n\t\tcolor: theme.palette.grey[600],\n\t\ttextTransform: \"uppercase\",\n\t\tfontSize: theme.typography.fontSize,\n\t\tlineHeight: \"56px\",\n\t\t[theme.breakpoints.down(\"sm\")]: {\n\t\t\tlineHeight: \"40px\",\n\t\t},\n\t},\n}))\n\n/**\n * Date range selector\n *\n * @export\n * @param {DateRangeProps} {\n * \tstartDate,\n * \tendDate,\n * \tonChange,\n * }\n * @returns {ReactElement}\n */\nconst DateRange = memo(function DateRange({\n\tstartDate,\n\tendDate,\n\tonChange,\n}: DateRangeProps): ReactElement {\n\tconst [open, setOpen] = useState<OpenState>({ start: false, end: false })\n\tconst classes = useStyles()\n\n\t/**\n\t * Change the open state of the datepicker modal\n\t *\n\t * @param {keyof OpenState} key\n\t */\n\tfunction onOpen(key: keyof OpenState): void {\n\t\tsetOpen({\n\t\t\tstart: false,\n\t\t\tend: false,\n\t\t\t[key]: true,\n\t\t})\n\t}\n\n\tconst openStart = useCallback(() => onOpen(\"start\"), [])\n\tconst openEnd = useCallback(() => onOpen(\"end\"), [])\n\n\t/**\n\t * Closes the datepickers\n\t *\n\t */\n\tconst onClose = useCallback((): void => {\n\t\tsetOpen({\n\t\t\tstart: false,\n\t\t\tend: false,\n\t\t})\n\t}, [])\n\n\t/**\n\t * Triggers the passed in onChange method\n\t *\n\t * @param {(Date | null)} date\n\t * @param {keyof OpenState} key\n\t */\n\tconst onDateChange = useCallback(\n\t\t(date: Date | null, key: keyof OpenState): void => {\n\t\t\tif (date) {\n\t\t\t\tif (key === \"start\") {\n\t\t\t\t\tonChange(\"canvasStartDate\", date)\n\t\t\t\t} else {\n\t\t\t\t\tonChange(\"canvasEndDate\", date)\n\t\t\t\t\tonClose()\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t[onChange, onClose]\n\t)\n\n\t// When the start date is edited and the panel is still open\n\t// Change to the end date panel\n\tuseEffect(() => {\n\t\tif (open.start) {\n\t\t\tonOpen(\"end\")\n\t\t}\n\t\t// eslint-disable-next-line\n\t}, [startDate])\n\n\treturn (\n\t\t<MuiPickersUtilsProvider utils={DateFnsUtils}>\n\t\t\t<Box className={classes.root}>\n\t\t\t\t<SinglePicker\n\t\t\t\t\tvalue={startDate}\n\t\t\t\t\tonChange={onDateChange}\n\t\t\t\t\topen={open.start}\n\t\t\t\t\tonOpen={openStart}\n\t\t\t\t\tonClose={onClose}\n\t\t\t\t\tlabel=\"Start Date\"\n\t\t\t\t\tcompareDay={endDate}\n\t\t\t\t\tid=\"start\"\n\t\t\t\t/>\n\t\t\t\t<Typography component=\"span\" className={classes.separator}>\n\t\t\t\t\tto\n\t\t\t\t</Typography>\n\t\t\t\t<SinglePicker\n\t\t\t\t\tvalue={endDate}\n\t\t\t\t\tonChange={onDateChange}\n\t\t\t\t\topen={open.end}\n\t\t\t\t\tonOpen={openEnd}\n\t\t\t\t\tonClose={onClose}\n\t\t\t\t\tlabel=\"End Date\"\n\t\t\t\t\tcompareDay={startDate}\n\t\t\t\t\tid=\"end\"\n\t\t\t\t\tminDate={startDate}\n\t\t\t\t/>\n\t\t\t</Box>\n\t\t</MuiPickersUtilsProvider>\n\t)\n})\n\nexport default DateRange\n","import React, { ReactElement } from \"react\"\nimport {\n\tBox,\n\tFormControlLabel,\n\tCheckbox,\n\tTextField,\n\tTooltip,\n\tDivider,\n} from \"@material-ui/core\"\nimport InfoIcon from \"@material-ui/icons/Info\"\nimport { useCustomTitleStyles } from \"./__config/styles\"\n\n/**\n * Prop definition for the custom title form\n *\n * @interface UseCustomTitleProps\n */\ninterface UseCustomTitleProps {\n\tuseCustom: boolean\n\tonChange: InputChange\n\tchangeCheck: InputChange\n\ttitle: string\n}\n\nconst tipContent =\n\t\"To make idenfiying canvases easier, you are able to assign a custom title to the canvas. However, you can disable this and the canvas title will be made up of the four fields below\"\n\n/**\n * Component that allows a user to opt into a custom canvas title\n * and provides them with a input field\n *\n * @export\n * @param {UseCustomTitleProps} {\n * \tuseCustom,\n * \tonChange,\n * \tchangeCheck,\n * \ttitle,\n * }\n * @returns {ReactElement}\n */\nexport default function UseCustomTitle({\n\tuseCustom,\n\tonChange,\n\tchangeCheck,\n\ttitle,\n}: UseCustomTitleProps): ReactElement {\n\tconst cls = useCustomTitleStyles()\n\n\treturn (\n\t\t<Box>\n\t\t\t{useCustom && (\n\t\t\t\t<TextField\n\t\t\t\t\tid=\"canvasTitle\"\n\t\t\t\t\tname=\"canvasTitle\"\n\t\t\t\t\tlabel=\"Custom canvas title\"\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tvalue={title}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\tfullWidth\n\t\t\t\t\tclassName={cls.textField}\n\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\thtmlFor: \"canvasTitle\",\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t<Box className={cls.checkboxRoot}>\n\t\t\t\t<FormControlLabel\n\t\t\t\t\tcontrol={\n\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\tname=\"use-custom-title\"\n\t\t\t\t\t\t\tonChange={changeCheck}\n\t\t\t\t\t\t\tchecked={useCustom}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t\tlabel=\"Use a custom title\"\n\t\t\t\t/>\n\t\t\t\t<Tooltip title={tipContent}>\n\t\t\t\t\t<InfoIcon color=\"primary\" />\n\t\t\t\t</Tooltip>\n\t\t\t</Box>\n\t\t\t<Divider className={cls.divider} />\n\t\t</Box>\n\t)\n}\n","import React, {\n\tReactElement,\n\tmemo,\n\tuseEffect,\n\tuseCallback,\n\tuseContext,\n} from \"react\"\nimport { Box, Grid } from \"@material-ui/core\"\nimport { useParams } from \"react-router-dom\"\nimport Alert from \"@material-ui/lab/Alert\"\nimport { isValid } from \"date-fns\"\nimport { useInputWrapper } from \"./__config/styles\"\nimport CanvasTypeSelect from \"./CanvasType\"\nimport CanvasTimeFrameSelect from \"./CanvasTimeFrame\"\nimport DateRange from \"../DateRange\"\nimport UseCustomTitle from \"./UseCustomTitle\"\nimport { PanelProps, CustomTitleProps } from \"./__config/shape\"\nimport useCurrentClient from \"../../state/client/useCurrentClient\"\nimport { performDupFind } from \"./__config/utilities\"\nimport CFCContext from \"../../state/CFC/context\"\nimport { CFCActionTypes } from \"../../state/CFC/shape\"\nimport Spacer from \"../Spacer\"\n\n/**\n * Prop definition for the ConfigPanel component\n *\n * @interface ConfigPanelProps\n */\ninterface ConfigPanelProps extends PanelProps, CustomTitleProps {\n\twrapped?: boolean\n\tshowDuplicateError?: boolean\n}\n\n// Duplicate canvas error message\nexport const DuplicateCanvasError = (): ReactElement => (\n\t<Alert severity=\"error\">\n\t\tA canvas with this title has already been created. Make sure that your\n\t\tcanvas title is unique.\n\t</Alert>\n)\n\n/**\n * Wraps the config panel form in memo to ensure it only\n * re-render when required\n *\n */\nconst Panel = memo(function Panel({\n\tcanvasTimeframeValue,\n\tcanvasTypeValue,\n\tstartDate,\n\tendDate,\n\tonChange,\n\tonDateChange,\n\tcustomTitle,\n\tuseCustomTitle,\n}: PanelProps) {\n\tconst [currentClient, clientSynced] = useCurrentClient()\n\tconst { id } = useParams()\n\tconst { dispatch } = useContext(CFCContext)\n\tconst fetchPossibleDups = useCallback(async () => {\n\t\tif (currentClient?.id) {\n\t\t\tconst dup = await performDupFind(\n\t\t\t\t{\n\t\t\t\t\tcanvasEndDate: endDate,\n\t\t\t\t\tcanvasStartDate: startDate,\n\t\t\t\t\tcanvasTitle: customTitle,\n\t\t\t\t\tcanvasTimeFrame: canvasTimeframeValue,\n\t\t\t\t\tcanvasType: canvasTypeValue,\n\t\t\t\t},\n\t\t\t\tcurrentClient.id,\n\t\t\t\tuseCustomTitle,\n\t\t\t\tid || undefined\n\t\t\t)\n\n\t\t\tdispatch({\n\t\t\t\ttype: CFCActionTypes.ChangeDuplicateError,\n\t\t\t\tpayload: dup !== false,\n\t\t\t})\n\t\t}\n\t}, [\n\t\tcanvasTypeValue,\n\t\tcanvasTimeframeValue,\n\t\tcurrentClient,\n\t\tendDate,\n\t\tstartDate,\n\t\tcustomTitle,\n\t\tid,\n\t\tdispatch,\n\t\tuseCustomTitle,\n\t])\n\n\tuseEffect(() => {\n\t\tif (clientSynced) {\n\t\t\tfetchPossibleDups()\n\t\t}\n\t}, [fetchPossibleDups, clientSynced, id])\n\n\t// Checks if the start and end date is valid\n\tuseEffect(() => {\n\t\tdispatch({\n\t\t\ttype: CFCActionTypes.ChangeInvalidDateError,\n\t\t\tpayload: !isValid(startDate) || !isValid(endDate),\n\t\t})\n\t}, [startDate, endDate, dispatch])\n\n\treturn (\n\t\t<>\n\t\t\t<Grid container spacing={2}>\n\t\t\t\t<Grid item xs={12} md={3}>\n\t\t\t\t\t<CanvasTypeSelect value={canvasTypeValue} onChange={onChange} />\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} md={3}>\n\t\t\t\t\t<CanvasTimeFrameSelect\n\t\t\t\t\t\tvalue={canvasTimeframeValue}\n\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t<DateRange\n\t\t\t\t\t\tstartDate={startDate}\n\t\t\t\t\t\tendDate={endDate}\n\t\t\t\t\t\tonChange={onDateChange}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</>\n\t)\n})\n\n/**\n * Config panel component found at the top of the CFC form\n *\n * @export\n * @param {ConfigPanelProps} {\n * \tcanvasTimeframeValue,\n * \tcanvasTypeValue,\n * \tstartDate,\n * \tendDate,\n * \tonChange,\n * \tonDateChange,\n * \tcustomTitle,\n * \tchangeCheck,\n * \tuseCustomTitle,\n * }\n * @returns {ReactElement}\n */\nfunction ConfigPanel({\n\tcanvasTimeframeValue,\n\tcanvasTypeValue,\n\tstartDate,\n\tendDate,\n\tonChange,\n\tonDateChange,\n\tcustomTitle,\n\tchangeCheck,\n\tuseCustomTitle,\n\twrapped = true,\n\tshowDuplicateError = true,\n}: ConfigPanelProps): ReactElement {\n\tconst wrapperCls = useInputWrapper()\n\tconst { duplicateError } = useContext(CFCContext)\n\n\treturn (\n\t\t<Box className={`${wrapped ? wrapperCls.wrapper : \"\"}`}>\n\t\t\t<UseCustomTitle\n\t\t\t\ttitle={customTitle}\n\t\t\t\tonChange={onChange}\n\t\t\t\tuseCustom={useCustomTitle}\n\t\t\t\tchangeCheck={changeCheck}\n\t\t\t/>\n\t\t\t<Panel\n\t\t\t\tcanvasTypeValue={canvasTypeValue}\n\t\t\t\tcanvasTimeframeValue={canvasTimeframeValue}\n\t\t\t\tstartDate={startDate}\n\t\t\t\tendDate={endDate}\n\t\t\t\tonDateChange={onDateChange}\n\t\t\t\tonChange={onChange}\n\t\t\t\tcustomTitle={customTitle}\n\t\t\t\tuseCustomTitle={useCustomTitle}\n\t\t\t/>\n\t\t\t{showDuplicateError && duplicateError && (\n\t\t\t\t<>\n\t\t\t\t\t<Spacer />\n\t\t\t\t\t<DuplicateCanvasError />\n\t\t\t\t</>\n\t\t\t)}\n\t\t</Box>\n\t)\n}\n\nexport default memo(ConfigPanel)\n","import { makeStyles } from \"@material-ui/core\"\n\nconst usePrimaryStyles = makeStyles((theme) => ({\n\tclientCaption: {\n\t\ttextTransform: \"uppercase\",\n\t\tlineHeight: 1,\n\t\tdisplay: \"block\",\n\t},\n\tclientName: {\n\t\tlineHeight: 1,\n\t\t[theme.breakpoints.down(\"sm\")]: {\n\t\t\tfontSize: theme.typography.pxToRem(18),\n\t\t},\n\t},\n\tclientGridItem: {\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"column\",\n\t\tjustifyContent: \"center\",\n\t},\n}))\n\nexport default usePrimaryStyles\n","/* eslint-disable import/prefer-default-export */\nimport RecentActorsIcon from \"@material-ui/icons/RecentActors\"\nimport DescriptionIcon from \"@material-ui/icons/Description\"\nimport { PrivateRoutes } from \"../../../../util/routes/routes\"\nimport { INavRoutes } from \"../../_config/shape\"\n\n// Nav routes definition for the Primary navigation\nexport const routes: INavRoutes[] = [\n\t{\n\t\troute: PrivateRoutes.ClientList,\n\t\ttitle: \"Client List\",\n\t\tIcon: RecentActorsIcon,\n\t},\n\t{\n\t\troute: PrivateRoutes.SessionFiles,\n\t\ttitle: \"Downloads\",\n\t\tIcon: DescriptionIcon,\n\t},\n]\n","/* eslint-disable import/prefer-default-export */\nimport {\n\tPrivateRoutes,\n\trouteVarReplacement,\n} from \"../../../../util/routes/routes\"\nimport { INavRoutes } from \"../../_config/shape\"\n\n// Nav routes definition for the Secondary navigation\nexport const routes: INavRoutes[] = [\n\t{\n\t\troute: PrivateRoutes.CoachingKit,\n\t\ttitle: \"Get Started\",\n\t},\n\t{\n\t\troute: routeVarReplacement(PrivateRoutes.HealthCheckQuiz, [[\":id?\", \"\"]]),\n\t\ttitle: \"Health Check\",\n\t},\n\t{\n\t\troute: PrivateRoutes.DiscoverTopics,\n\t\ttitle: \"Discover Topics\",\n\t},\n\t{\n\t\troute: PrivateRoutes.CFC,\n\t\ttitle: \"Cash Flow Canvas\",\n\t},\n\t{\n\t\troute: PrivateRoutes.ChangeLevers,\n\t\ttitle: \"Change Levers\",\n\t},\n\t{\n\t\troute: PrivateRoutes.ActionChecklist,\n\t\ttitle: \"Action Checklist\",\n\t},\n]\n","import React, { ReactElement, useState } from \"react\"\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\"\nimport {\n\tButton,\n\tDialog,\n\tDialogTitle,\n\tDialogContent,\n\tDialogContentText,\n\tDialogActions,\n\tmakeStyles,\n\tTheme,\n\tcreateStyles,\n\tBackdrop,\n\tCircularProgress,\n} from \"@material-ui/core\"\nimport { useSharedNavStyles } from \"../Navbar/_config/style\"\nimport ClientDB from \"../../data/client/ClientDatabase\"\nimport HealthCheckDB from \"../../data/healthChecks/HealthCheckDatabase\"\nimport ActionChecklistDB from \"../../data/ActionChecklist/ActionChecklistDatabase\"\nimport CFCDB from \"../../data/CFC/CFCDatabase\"\n\nconst useStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\tbackdrop: {\n\t\t\tzIndex: theme.zIndex.drawer + 1,\n\t\t\tcolor: \"#fff\",\n\t\t},\n\t})\n)\n\ninterface LogoutProps {\n\tcolor?: \"inherit\" | \"primary\" | \"secondary\" | \"default\"\n\tvariant?: \"text\" | \"outlined\" | \"contained\"\n}\n\nexport default function Logout({\n\tcolor = \"inherit\",\n\tvariant = \"text\",\n}: LogoutProps): ReactElement {\n\tconst sharedStyle = useSharedNavStyles()\n\tconst classes = useStyles()\n\tconst [open, setOpen] = useState(false)\n\tconst [loading, setLoading] = useState(false)\n\n\tconst handleOpen = (): void => setOpen(true)\n\tconst handleClose = (): void => setOpen(false)\n\n\tconst exitApplication = async (): Promise<void> => {\n\t\tsetLoading(true)\n\t\tClientDB.close()\n\t\tHealthCheckDB.close()\n\t\tActionChecklistDB.close()\n\t\tCFCDB.close()\n\n\t\tawait ClientDB.delete()\n\t\tawait HealthCheckDB.delete()\n\t\tawait ActionChecklistDB.delete()\n\t\tawait CFCDB.delete()\n\n\t\twindow.location.replace(\"/\")\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Button\n\t\t\t\tclassName={sharedStyle.button}\n\t\t\t\tcolor={color}\n\t\t\t\tstartIcon={<PowerSettingsNewIcon />}\n\t\t\t\tonClick={handleOpen}\n\t\t\t\tvariant={variant}\n\t\t\t>\n\t\t\t\tExit\n\t\t\t</Button>\n\t\t\t<Dialog open={open} onClose={handleClose} fullWidth maxWidth=\"sm\">\n\t\t\t\t<DialogTitle>Are you sure you want to exit?</DialogTitle>\n\t\t\t\t<DialogContent>\n\t\t\t\t\t<DialogContentText>\n\t\t\t\t\t\tMake sure you have saved all your data before you leave as all\n\t\t\t\t\t\texisting data will be deleted.\n\t\t\t\t\t</DialogContentText>\n\t\t\t\t</DialogContent>\n\t\t\t\t<DialogActions>\n\t\t\t\t\t<Button onClick={handleClose} disabled={loading}>\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={exitApplication}\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t>\n\t\t\t\t\t\tExit\n\t\t\t\t\t</Button>\n\t\t\t\t</DialogActions>\n\t\t\t\t<Backdrop className={classes.backdrop} open={loading}>\n\t\t\t\t\t<CircularProgress color=\"inherit\" />\n\t\t\t\t</Backdrop>\n\t\t\t</Dialog>\n\t\t</>\n\t)\n}\n","import React, { ReactElement, useState, useCallback, useEffect } from \"react\"\nimport { Button } from \"@material-ui/core\"\nimport { useLocation } from \"react-router-dom\"\nimport { defer } from \"lodash-es\"\nimport { useSharedNavStyles } from \"../Navbar/_config/style\"\n\ntype ShowMeHowProps = {\n\ttriggerCallback?: () => void\n}\n\n/**\n * Show me how button\n *\n * @export\n * @returns {ReactElement}\n */\nexport default function ShowMeHow({\n\ttriggerCallback,\n}: ShowMeHowProps): ReactElement {\n\tconst sharedStyle = useSharedNavStyles()\n\tconst location = useLocation()\n\tconst [show, setShow] = useState(false)\n\n\t// Checks if a page has the start tour button and sets the show state\n\t// accordingly\n\tuseEffect(() => {\n\t\tdefer(() => {\n\t\t\tconst elem = document.getElementById(\"start-a-tour\")\n\t\t\treturn setShow(Boolean(elem))\n\t\t})\n\t}, [location])\n\n\t// Triggers the start tour button\n\tconst triggerTour = useCallback(() => {\n\t\tconst elem = document.getElementById(\"start-a-tour\")\n\t\tif (elem) {\n\t\t\telem.click()\n\t\t\tif (typeof triggerCallback !== \"undefined\") {\n\t\t\t\ttriggerCallback()\n\t\t\t}\n\t\t}\n\t}, [triggerCallback])\n\n\treturn show ? (\n\t\t<Button\n\t\t\tclassName={sharedStyle.button}\n\t\t\tcolor=\"inherit\"\n\t\t\tvariant=\"outlined\"\n\t\t\tonClick={triggerTour}\n\t\t>\n\t\t\tShow me how\n\t\t</Button>\n\t) : (\n\t\t<></>\n\t)\n}\n","import React, {\n\tReactElement,\n\tmemo,\n\tChangeEvent,\n\tuseState,\n\tuseRef,\n\tMouseEvent,\n} from \"react\"\nimport {\n\tTextField,\n\tInputAdornment,\n\tOutlinedTextFieldProps,\n} from \"@material-ui/core\"\nimport { formatNumber } from \"../../util/money/formatting\"\n\n/**\n * Abstraction for a textfield used to input money\n *\n * @export\n * @param {TextFieldProps} props\n * @returns {ReactElement}\n */\nexport default memo(function MoneyInput({\n\tonChange,\n\tvalue,\n\t// eslint-disable-next-line\n\t...props\n}: OutlinedTextFieldProps): ReactElement {\n\tconst [useMimic, setUseMimic] = useState(true)\n\tconst [error, setError] = useState(\"\")\n\tconst input = useRef<HTMLInputElement>()\n\n\t/**\n\t * Does some input value checks before firing the onChange method\n\t *\n\t * @param {ChangeEvent<HTMLInputElement>} e\n\t */\n\tfunction onChangePreCheck(e: ChangeEvent<HTMLInputElement>): void {\n\t\tconst inputVal: string = e.target.value === \"\" ? \"0\" : e.target.value\n\t\tif (\n\t\t\t`${inputVal}`.startsWith(\"00\") ||\n\t\t\t(`${value}`.startsWith(\"0\") && `${inputVal}`.length > 1)\n\t\t) {\n\t\t\tsetError(\"Amount can't start with a zero\")\n\t\t\treturn\n\t\t}\n\n\t\tif (inputVal.match(/\\D/g)) {\n\t\t\tsetError(\"Amount can only include digits\")\n\t\t\treturn\n\t\t}\n\n\t\tconst val = parseInt(inputVal, 10)\n\t\t// eslint-disable-next-line no-restricted-globals\n\t\tif (isNaN(val) || val > 999999999) {\n\t\t\tsetError(\"Please enter a valid number between 0 and 999,999,999\")\n\t\t\treturn\n\t\t}\n\t\tsetError(\"\")\n\n\t\tif (typeof onChange !== \"undefined\") {\n\t\t\tonChange(e)\n\t\t}\n\t}\n\n\tfunction onBlur(): void {\n\t\tsetUseMimic(true)\n\t}\n\n\tfunction onFocus(): void {\n\t\tsetUseMimic(false)\n\t\tif (value === 0 && input.current) {\n\t\t\t// input.current.select()\n\t\t\tinput.current.setSelectionRange(0, 9999)\n\t\t}\n\t}\n\n\tfunction onMouseUp(e: MouseEvent): void {\n\t\te.preventDefault()\n\t}\n\n\treturn (\n\t\t<TextField\n\t\t\tfullWidth\n\t\t\tInputProps={{\n\t\t\t\tstartAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n\t\t\t\tendAdornment: <InputAdornment position=\"end\">.00</InputAdornment>,\n\t\t\t\tinputProps: {\n\t\t\t\t\tmin: 0,\n\t\t\t\t\tmax: 999999999,\n\t\t\t\t\tstep: 1,\n\t\t\t\t\tref: input,\n\t\t\t\t},\n\t\t\t}}\n\t\t\tlabel=\"Amount\"\n\t\t\tInputLabelProps={{\n\t\t\t\thtmlFor: props.name,\n\t\t\t}}\n\t\t\tid={props.name}\n\t\t\tplaceholder=\"0\"\n\t\t\tonChange={onChangePreCheck}\n\t\t\tonBlur={onBlur}\n\t\t\tonFocus={onFocus}\n\t\t\tonMouseUp={onMouseUp}\n\t\t\tvalue={useMimic ? formatNumber(`${value}`) : value}\n\t\t\terror={error !== \"\"}\n\t\t\thelperText={error}\n\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t{...props}\n\t\t/>\n\t)\n})\n","import { RouteProps } from \"react-router-dom\"\nimport { PublicRoutes } from \"./routes\"\n\n/**\n * Checks if the current location path is in the Public Routes enum\n *\n * @param {RouteProps[\"location\"]} location\n * @returns boolean\n */\nconst checkIfPublic = (location: RouteProps[\"location\"]): boolean => {\n\tif (location) {\n\t\treturn (\n\t\t\t(Object.values(PublicRoutes) as string[]).indexOf(location.pathname) !==\n\t\t\t-1\n\t\t)\n\t}\n\n\treturn false\n}\n\nexport default checkIfPublic\n","import React, { ReactElement, useState, Fragment, useEffect } from \"react\"\nimport {\n\tAppBar,\n\tToolbar,\n\tIconButton,\n\tDrawer,\n\tmakeStyles,\n\tList,\n\tListItem,\n\tListItemText,\n\tDivider,\n\tListItemIcon,\n\tBox,\n\tTypography,\n} from \"@material-ui/core\"\nimport MenuIcon from \"@material-ui/icons/Menu\"\nimport { NavLink, useLocation } from \"react-router-dom\"\nimport Logo from \"../../Logo\"\nimport { PublicRoutes } from \"../../../util/routes/routes\"\nimport { routes as secondaryRoutes } from \"../Secondary/_config/data\"\nimport { routes as primaryRoutes } from \"../Primary/_config/data\"\nimport { INavRoutes } from \"../_config/shape\"\nimport useCurrentClient from \"../../../state/client/useCurrentClient\"\nimport usePrimaryStyles from \"../Primary/_config/styles\"\nimport ShowMeHow from \"../../ShowMeHow\"\nimport Logout from \"../../Logout\"\nimport Spacer from \"../../Spacer\"\n\nconst useStyles = makeStyles((theme) => ({\n\tdrawer: {\n\t\tmaxWidth: \"300px\",\n\t\twidth: \"100%\",\n\t},\n\ttoolbar: {\n\t\tmaxWidth: \"100%\",\n\t\toverflow: \"hidden\",\n\t},\n\tlogo: {\n\t\t\"& h6\": {\n\t\t\tcolor: \"white\",\n\t\t},\n\t},\n\tdivider: {\n\t\tmargin: `0 ${theme.spacing(2)}px 0 ${theme.spacing(1)}px`,\n\t},\n\tclientBox: {\n\t\tflexGrow: 2,\n\t\tminWidth: 0,\n\t},\n\tchildList: {\n\t\tmarginLeft: theme.spacing(3),\n\t\tmarginBottom: theme.spacing(1),\n\t\tpaddingTop: 0,\n\t\tborderBottom: `1px solid ${theme.palette.divider}`,\n\t},\n\titem: {\n\t\tcolor: \"inherit\",\n\t\t\"&.active\": {\n\t\t\tfontWeight: theme.typography.fontWeightBold,\n\t\t\t\"& *\": {\n\t\t\t\tfontWeight: \"inherit\",\n\t\t\t},\n\t\t},\n\t},\n}))\n\n/**\n * Renders the mobile navigation for the Private side of the app\n *\n * @export\n * @returns {ReactElement}\n */\nexport default function MobileNavbar(): ReactElement {\n\tconst [currentClient] = useCurrentClient()\n\tconst [open, setOpen] = useState(false)\n\tconst cls = useStyles()\n\tconst primaryStyle = usePrimaryStyles()\n\tconst location = useLocation()\n\n\tconst openDrawer = (): void => setOpen(true)\n\tconst closeDrawer = (): void => setOpen(false)\n\n\tuseEffect(() => {\n\t\tcloseDrawer()\n\t}, [location.pathname])\n\n\tconst renderRoutes = (route: INavRoutes): ReactElement => {\n\t\treturn (\n\t\t\t<Fragment key={route.route}>\n\t\t\t\t<ListItem component={NavLink} to={route.route} className={cls.item}>\n\t\t\t\t\t{route.Icon && (\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<route.Icon />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t)}\n\t\t\t\t\t<ListItemText primary={route.title} />\n\t\t\t\t</ListItem>\n\n\t\t\t\t{route.children ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<List className={cls.childList}>\n\t\t\t\t\t\t\t{route.children.map(renderRoutes)}\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<></>\n\t\t\t\t)}\n\t\t\t</Fragment>\n\t\t)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<AppBar position=\"static\">\n\t\t\t\t<Toolbar className={cls.toolbar}>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\taria-label=\"open drawer\"\n\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\tonClick={openDrawer}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<Box className={cls.logo}>\n\t\t\t\t\t\t<Logo to={PublicRoutes.Home} />\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Divider orientation=\"vertical\" flexItem className={cls.divider} />\n\t\t\t\t\t<Box className={cls.clientBox}>\n\t\t\t\t\t\t{currentClient && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tclassName={primaryStyle.clientCaption}\n\t\t\t\t\t\t\t\t\tvariant=\"caption\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tClient\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tclassName={`${primaryStyle.clientName} truncate`}\n\t\t\t\t\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<span>{currentClient?.name || \"\"}</span>\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Box>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t\t<Drawer\n\t\t\t\tanchor=\"left\"\n\t\t\t\topen={open}\n\t\t\t\tonClose={closeDrawer}\n\t\t\t\tclasses={{ paper: cls.drawer }}\n\t\t\t>\n\t\t\t\t<List component=\"div\" className=\"MuiListItem-gutters\">\n\t\t\t\t\t<ShowMeHow triggerCallback={closeDrawer} />\n\t\t\t\t</List>\n\t\t\t\t<Divider />\n\t\t\t\t<List>{secondaryRoutes.map(renderRoutes)}</List>\n\t\t\t\t<Divider />\n\t\t\t\t<List>{primaryRoutes.map(renderRoutes)}</List>\n\t\t\t\t<Divider />\n\t\t\t\t<Spacer />\n\t\t\t\t<Box style={{ padding: \"0 16px\" }}>\n\t\t\t\t\t<Logout color=\"primary\" variant=\"contained\" />\n\t\t\t\t</Box>\n\t\t\t</Drawer>\n\t\t</>\n\t)\n}\n","import { ThemeOptions, createMuiTheme } from \"@material-ui/core\"\nimport {\n\tgreen,\n\tdeepOrange,\n\tlightBlue,\n\tpurple,\n\tindigo,\n} from \"@material-ui/core/colors\"\n\nexport const defaultTheme: ThemeOptions = {\n\t...createMuiTheme(),\n\tpalette: {\n\t\tprimary: {\n\t\t\tmain: indigo[\"500\"],\n\t\t},\n\t\tsecondary: {\n\t\t\tmain: indigo[\"300\"],\n\t\t},\n\t},\n}\n\nexport const applyTheme: ThemeOptions = {\n\t...defaultTheme,\n\tpalette: {\n\t\tprimary: {\n\t\t\tmain: green[\"800\"],\n\t\t},\n\t\tsecondary: {\n\t\t\tmain: green[\"200\"],\n\t\t},\n\t},\n}\n\nexport const discoverTheme: ThemeOptions = {\n\t...defaultTheme,\n\tpalette: {\n\t\tprimary: {\n\t\t\tmain: purple[\"500\"],\n\t\t},\n\t\tsecondary: {\n\t\t\tmain: purple[\"200\"],\n\t\t},\n\t},\n}\n\nexport const planActionTheme: ThemeOptions = {\n\t...defaultTheme,\n\tpalette: {\n\t\tprimary: {\n\t\t\tmain: lightBlue[\"800\"],\n\t\t},\n\t\tsecondary: {\n\t\t\tmain: lightBlue[\"200\"],\n\t\t},\n\t},\n}\n\nexport const settingsTheme: ThemeOptions = {\n\t...defaultTheme,\n\tpalette: {\n\t\tprimary: {\n\t\t\tmain: deepOrange.A700,\n\t\t},\n\t\tsecondary: {\n\t\t\tmain: deepOrange[\"300\"],\n\t\t},\n\t},\n}\n","import { Theme, createMuiTheme } from \"@material-ui/core\"\nimport {\n\tapplyTheme,\n\tdefaultTheme,\n\tdiscoverTheme,\n\tplanActionTheme,\n\tsettingsTheme,\n} from \"../../theme/mui/themes\"\nimport { PrivateRoutes, routeVarReplacement } from \"./routes\"\n\nconst applyThemeRoutes: string[] = [\n\tPrivateRoutes.CFC,\n\tPrivateRoutes.CFCCompare,\n\trouteVarReplacement(PrivateRoutes.CFCEdit, [[\":id\", \"\"]]),\n\tPrivateRoutes.CFCListing,\n\tPrivateRoutes.ChangeLevers,\n]\nconst discoverThemeRoutes: string[] = [\n\tPrivateRoutes.ClientList,\n\tPrivateRoutes.DiscoverTopics,\n\tPrivateRoutes.DTTrackingPerformance,\n\tPrivateRoutes.DTSellingClosingSuccession,\n\tPrivateRoutes.DTRecordKeeping,\n\tPrivateRoutes.DTPlanningFinanicalCommitments,\n\tPrivateRoutes.DTPlanningBusiness,\n\tPrivateRoutes.DTManagingCashFlow,\n\tPrivateRoutes.DTFundingBusiness,\n\tPrivateRoutes.HealthCheckList,\n\trouteVarReplacement(PrivateRoutes.HealthCheckQuiz, [[\":id?\", \"\"]]),\n\trouteVarReplacement(PrivateRoutes.HealthCheckSummary, [[\":id\", \"\"]]),\n]\nconst planActionThemeRoutes: string[] = [PrivateRoutes.ActionChecklist]\nconst settingsThemeRoutes: string[] = [PrivateRoutes.SessionFiles]\n\nfunction determineTheme(pathname: string): Theme {\n\tconst path = `${pathname.replace(/[\\d]+?$/g, \"\")}`\n\n\tif (applyThemeRoutes.indexOf(path) !== -1) {\n\t\treturn createMuiTheme(applyTheme)\n\t}\n\n\tif (discoverThemeRoutes.indexOf(path) !== -1) {\n\t\treturn createMuiTheme(discoverTheme)\n\t}\n\n\tif (planActionThemeRoutes.indexOf(path) !== -1) {\n\t\treturn createMuiTheme(planActionTheme)\n\t}\n\n\tif (settingsThemeRoutes.indexOf(path) !== -1) {\n\t\treturn createMuiTheme(settingsTheme)\n\t}\n\n\treturn createMuiTheme(defaultTheme)\n}\n\nexport default determineTheme\n","import React, { ReactElement, useEffect, useMemo } from \"react\"\nimport { useLocation, RouteProps, useHistory } from \"react-router-dom\"\nimport { makeStyles, Box, ThemeProvider } from \"@material-ui/core\"\nimport { PrimaryNavbar, SecondaryNavbar } from \"../../Navbar\"\nimport { IPrivatePage } from \"./_config/shape\"\nimport checkIfPublic from \"../../../util/routes/checkIfPublic\"\nimport MobileNavbar from \"../../Navbar/Mobile\"\nimport useCurrentClient from \"../../../state/client/useCurrentClient\"\nimport { PrivateRoutes, PublicRoutes } from \"../../../util/routes/routes\"\nimport determineTheme from \"../../../util/routes/routeTheming\"\n\nconst useStyles = makeStyles((theme) => ({\n\tdesktop: {\n\t\tdisplay: \"none\",\n\t\t[theme.breakpoints.up(\"md\")]: {\n\t\t\tdisplay: \"block\",\n\t\t},\n\t},\n\tmobile: {\n\t\tdisplay: \"block\",\n\t\t[theme.breakpoints.up(\"md\")]: {\n\t\t\tdisplay: \"none\",\n\t\t},\n\t},\n}))\n\n/**\n * Private page layout, renders the navigation and the children provided to it.\n *\n * @param {ReactNode} { children } Page content to render below the navigation\n * @returns {ReactElement}\n */\nconst PrivatePage = ({ children }: IPrivatePage): ReactElement => {\n\tconst location: RouteProps[\"location\"] = useLocation()\n\tconst styles = useStyles()\n\tconst history = useHistory()\n\tconst [currentClient, clientSynced] = useCurrentClient()\n\n\tuseEffect(() => {\n\t\tif (clientSynced) {\n\t\t\tif (!currentClient || !currentClient?.id) {\n\t\t\t\tconst allowed = [\n\t\t\t\t\tPrivateRoutes.ClientList as string,\n\t\t\t\t\tPublicRoutes.Home as string,\n\t\t\t\t]\n\t\t\t\tif (allowed.indexOf(location.pathname) === -1) {\n\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\thistory.push(PublicRoutes.Home)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, [clientSynced, currentClient, location, history])\n\n\tconst theme = useMemo(() => {\n\t\treturn determineTheme(location.pathname)\n\t}, [location])\n\n\treturn (\n\t\t<>\n\t\t\t{!checkIfPublic(location) && (\n\t\t\t\t<>\n\t\t\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t\t\t<Box className={styles.desktop}>\n\t\t\t\t\t\t\t<PrimaryNavbar />\n\t\t\t\t\t\t\t<SecondaryNavbar />\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box className={styles.mobile}>\n\t\t\t\t\t\t\t<MobileNavbar />\n\t\t\t\t\t\t</Box>\n\n\t\t\t\t\t\t<div className=\"private-page\">{children}</div>\n\t\t\t\t\t</ThemeProvider>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</>\n\t)\n}\n\nexport default PrivatePage\n","import { makeStyles } from \"@material-ui/core\"\n\n// Styles for the Page Container\nconst usePCStyles = makeStyles((theme) => ({\n\tcontainer: {\n\t\tpaddingTop: theme.spacing(5),\n\t\tpaddingBottom: theme.spacing(15),\n\t},\n}))\n\nexport default usePCStyles\n","import React, { ReactElement } from \"react\"\nimport { Container } from \"@material-ui/core\"\nimport { IPageContainer } from \"./_config/shape\"\nimport usePCStyles from \"./_config/styles\"\n\n/**\n * Abstraction on the `<Container>` component for a consistent page spacing\n *\n * @param {IPageContainer} props Default props for the material-ui Container component\n */\nconst PageContainer = ({\n\tchildren,\n\tclassName,\n\tid,\n\t// eslint-disable-next-line\n\t...rest\n}: IPageContainer): ReactElement => {\n\tconst styles = usePCStyles()\n\n\treturn (\n\t\t<>\n\t\t\t{/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n\t\t\t<a id=\"main-page-container\" tabIndex={-1} className=\"visually-hidden\">\n\t\t\t\tMain content anchor\n\t\t\t</a>\n\t\t\t<Container\n\t\t\t\tclassName={`${styles.container} ${className || \"\"}`}\n\t\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t\t{...rest}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</Container>\n\t\t</>\n\t)\n}\n\nexport default PageContainer\n","import React, { ReactElement } from \"react\"\nimport { Box } from \"@material-ui/core\"\nimport DescriptiveMoneyInput from \"../DescriptiveMoneyInput\"\nimport { useInputWrapper } from \"./__config/styles\"\nimport { ControlProps } from \"./__config/shape\"\n\n/**\n * Component for the opening balance field used in the CFC form\n *\n * @export\n * @param {OBProps} { onChange }\n * @returns {ReactElement}\n */\nexport default function OpeningBalance({\n\tonChange,\n\tvalue,\n}: ControlProps<number>): ReactElement {\n\tconst wrapperCls = useInputWrapper()\n\n\treturn (\n\t\t<Box className={`${wrapperCls.wrapper}`}>\n\t\t\t<DescriptiveMoneyInput\n\t\t\t\ttitle=\"Opening Balance\"\n\t\t\t\tdescription=\"Your cash at bank at the start of the period\"\n\t\t\t\tvariant=\"outlined\"\n\t\t\t\tname=\"openingBalance\"\n\t\t\t\tonChange={onChange}\n\t\t\t\tvalue={value}\n\t\t\t/>\n\t\t</Box>\n\t)\n}\n","import React, { ReactElement } from \"react\"\nimport { Box, Typography, makeStyles } from \"@material-ui/core\"\nimport { useInputWrapper } from \"../CFC/__config/styles\"\nimport useStyles from \"../DescriptiveMoneyInput/__config/styles\"\n\n/**\n * Prop definition for the ComputedPanels component\n *\n * @interface ComputedPanelsProps\n */\ninterface ComputedPanelsProps {\n\ttitle: string\n\tdescription?: string\n\tvalue: string\n\tmini?: boolean\n\twrapped?: boolean\n}\n\nconst useComputedStyles = makeStyles((theme) => ({\n\troot: {\n\t\t[theme.breakpoints.up(\"md\")]: {\n\t\t\talignItems: \"center\",\n\t\t},\n\t},\n}))\n\n/**\n * Displays a title, description and a computed value\n *\n * @export\n * @param {ComputedPanelsProps} {\n * \ttitle,\n * \tdescription,\n * \tvalue,\n * }\n * @returns {ReactElement}\n */\nexport default React.memo(function ComputedPanels({\n\ttitle,\n\tdescription,\n\tvalue,\n\tmini = false,\n\twrapped = true,\n}: ComputedPanelsProps): ReactElement {\n\tconst wrapperCls = useInputWrapper()\n\tconst dmiCls = useStyles({ stacked: false, mini })\n\tconst computedCls = useComputedStyles()\n\n\treturn (\n\t\t<Box\n\t\t\tclassName={`${wrapped ? wrapperCls.wrapper : \"\"} ${dmiCls.root} ${\n\t\t\t\tcomputedCls.root\n\t\t\t}`}\n\t\t>\n\t\t\t<Box className={dmiCls.type}>\n\t\t\t\t<Typography variant=\"h6\" component=\"p\">\n\t\t\t\t\t{title}\n\t\t\t\t</Typography>\n\t\t\t\t{description && <Typography component=\"span\">{description}</Typography>}\n\t\t\t</Box>\n\t\t\t<Typography variant=\"h6\">{value}</Typography>\n\t\t</Box>\n\t)\n})\n","import React, { ReactElement } from \"react\"\nimport { ComputedProps } from \"./__config/shape\"\nimport ComputedPanels from \"../ComputedPanels\"\nimport { addDollarSign, formatNumber } from \"../../util/money/formatting\"\n\n/**\n * Component used to display the Cash Surplus value\n *\n * @export\n * @param {ComputedProps} { value }\n * @returns {ReactElement}\n */\nexport default function CashSurplus({ value }: ComputedProps): ReactElement {\n\treturn (\n\t\t<ComputedPanels\n\t\t\ttitle=\"Cash Surplus\"\n\t\t\tdescription=\"The difference between Cash IN and Cash OUT (excluding GST amounts).\"\n\t\t\tvalue={addDollarSign(formatNumber(value))}\n\t\t/>\n\t)\n}\n","import React, { ReactElement } from \"react\"\nimport { ComputedProps } from \"./__config/shape\"\nimport ComputedPanels from \"../ComputedPanels\"\nimport { addDollarSign, formatNumber } from \"../../util/money/formatting\"\n\n/**\n * Component used to display the Available to Spend value\n *\n * @export\n * @param {ComputedProps} {\n * \tvalue,\n * }\n * @returns {ReactElement}\n */\nexport default React.memo(function AvailableToSpend({\n\tvalue,\n}: ComputedProps): ReactElement {\n\treturn (\n\t\t<ComputedPanels\n\t\t\ttitle=\"Available to Spend (exc GST and Tax)\"\n\t\t\tdescription=\"The Opening Balance plus any Cash Surplus.\"\n\t\t\tvalue={addDollarSign(formatNumber(value))}\n\t\t/>\n\t)\n})\n","import React, { ReactElement, useState, useEffect } from \"react\"\nimport { Typography, makeStyles } from \"@material-ui/core\"\nimport { useParams } from \"react-router-dom\"\nimport { CFCTimeFrame, CanvasType } from \"../../data/_config/shape\"\nimport { generateTitle } from \"./__config/utilities\"\n\n/**\n * Prop definition for the CanvasTitle component\n *\n * @interface CanvasTitleProps\n */\ninterface CanvasTitleProps {\n\ttype: CanvasType\n\ttimeframe: CFCTimeFrame\n\tstartDate: Date\n\tendDate: Date\n\tcustomTitle: string\n\tuseCustomTitle: boolean\n}\n\n// Canvas title styles\nconst useStyles = makeStyles((theme) => ({\n\tcaption: {\n\t\tlineHeight: 1.2,\n\t},\n\ttitle: {\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\tnoTitle: {\n\t\tcolor: theme.palette.grey[600],\n\t},\n}))\n\n/**\n * Displays the compiled canvas title or the custom title\n *\n * @export\n * @param {CanvasTitleProps} {\n * \ttype,\n * \ttimeframe,\n * \tstartDate,\n * \tendDate,\n * }\n * @returns {ReactElement}\n */\nexport default React.memo(function CanvasTitle({\n\ttype,\n\ttimeframe,\n\tstartDate,\n\tendDate,\n\tcustomTitle,\n\tuseCustomTitle,\n}: CanvasTitleProps): ReactElement {\n\tconst cls = useStyles()\n\tconst { id } = useParams()\n\tconst [comp, setComp] = useState<\"h3\" | \"h1\">(\"h3\")\n\n\tuseEffect(() => {\n\t\tsetComp(typeof id === \"undefined\" ? \"h3\" : \"h1\")\n\t}, [id, setComp])\n\n\t/**\n\t * Placeholder component when there is no custom title\n\t *\n\t * @returns {ReactElement}\n\t */\n\tfunction AddTitle(): ReactElement {\n\t\treturn (\n\t\t\t<Typography\n\t\t\t\tvariant=\"h5\"\n\t\t\t\tcomponent=\"span\"\n\t\t\t\tclassName={`${cls.title} ${cls.noTitle}`}\n\t\t\t>\n\t\t\t\tAdd a title below\n\t\t\t</Typography>\n\t\t)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Typography variant=\"overline\" component=\"span\" className={cls.caption}>\n\t\t\t\tCanvas title\n\t\t\t</Typography>\n\t\t\t<Typography variant=\"h5\" className={cls.title} component={comp}>\n\t\t\t\t{useCustomTitle\n\t\t\t\t\t? customTitle || <AddTitle />\n\t\t\t\t\t: generateTitle(type, timeframe, startDate, endDate)}\n\t\t\t</Typography>\n\t\t</>\n\t)\n})\n","import React, { ReactElement } from \"react\"\nimport { ControlProps } from \"./__config/shape\"\nimport DescriptiveMoneyInput from \"../DescriptiveMoneyInput\"\n\n/**\n * Input field for the Cash To Owner value\n *\n * @export\n * @param {ControlProps<number>} {\n * \tvalue,\n * \tonChange,\n * }\n * @returns {ReactElement}\n */\nexport default function CashToOwner({\n\tvalue,\n\tonChange,\n}: ControlProps<number>): ReactElement {\n\treturn (\n\t\t<DescriptiveMoneyInput\n\t\t\tvariant=\"outlined\"\n\t\t\ttitle=\"Cash to Owner\"\n\t\t\tdescription=\"The amounts you withdraw from the business.\"\n\t\t\tvalue={value}\n\t\t\tonChange={onChange}\n\t\t\tname=\"cashToOwner\"\n\t\t\tmini\n\t\t/>\n\t)\n}\n","import React, { ReactElement } from \"react\"\nimport { ComputedProps } from \"./__config/shape\"\nimport ComputedPanels from \"../ComputedPanels\"\n\n/**\n * Computed panel for the Closing Balance value\n *\n * @export\n * @param {ComputedProps} { value }\n * @returns {ReactElement}\n */\nexport default function ClosingBalance({ value }: ComputedProps): ReactElement {\n\treturn (\n\t\t<ComputedPanels\n\t\t\tvalue={value}\n\t\t\ttitle=\"Your Closing Cash Balance\"\n\t\t\tdescription=\"The amount of cash you have left at the bank\"\n\t\t\tmini\n\t\t\twrapped={false}\n\t\t/>\n\t)\n}\n","import React, { ReactElement } from \"react\"\nimport { Box, Typography, Grid, Divider } from \"@material-ui/core\"\nimport { useInputWrapper } from \"./__config/styles\"\nimport { ClosingBalance, CashToOwner } from \".\"\nimport { addDollarSign, formatNumber } from \"../../util/money/formatting\"\nimport Spacer from \"../Spacer/Spacer\"\n\n/**\n * Prop definition for the CashBalance component\n *\n * @interface CashBalanceProps\n */\ninterface CashBalanceProps {\n\tcashToOwner: number\n\tclosingBalance: number\n\tonChange: InputChange\n}\n\n/**\n * Component for the \"Your Cash Balance\" panel\n *\n * @export\n * @param {CashBalanceProps} {\n * \tcashToOwner,\n * \tclosingBalance,\n * \tonChange,\n * }\n * @returns {ReactElement}\n */\nexport default function CashBalance({\n\tcashToOwner,\n\tclosingBalance,\n\tonChange,\n}: CashBalanceProps): ReactElement {\n\tconst cls = useInputWrapper()\n\n\treturn (\n\t\t<Box className={cls.wrapper}>\n\t\t\t<Typography variant=\"h6\" component=\"h2\">\n\t\t\t\tYour Cash Balance\n\t\t\t</Typography>\n\t\t\t<Spacer />\n\t\t\t<Grid container spacing={2}>\n\t\t\t\t<Grid item sm={12}>\n\t\t\t\t\t<CashToOwner value={cashToOwner} onChange={onChange} />\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item sm={12}>\n\t\t\t\t\t<Divider />\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item sm={12}>\n\t\t\t\t\t<ClosingBalance\n\t\t\t\t\t\tvalue={addDollarSign(formatNumber(`${closingBalance}`))}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Box>\n\t)\n}\n","import React, { ReactElement, ChangeEvent, useState } from \"react\"\nimport {\n\tBox,\n\tTypography,\n\tTextField,\n\tInputAdornment,\n\tmakeStyles,\n} from \"@material-ui/core\"\nimport { ControlProps } from \"./__config/shape\"\nimport { useInputWrapper } from \"./__config/styles\"\nimport useStyles from \"../DescriptiveMoneyInput/__config/styles\"\nimport { addDollarSign, formatNumber } from \"../../util/money/formatting\"\n\ntype IncomeTaxProps = {\n\tcalculated: number\n} & ControlProps<number>\n\nconst useCustomStyles = makeStyles((theme) => ({\n\tbox: {\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"row\",\n\t\talignItems: \"center\",\n\t\t\"& > div\": {\n\t\t\tmargin: 0,\n\t\t\tmarginRight: theme.spacing(1),\n\t\t},\n\t},\n\ttextfield: {\n\t\tmarginTop: theme.spacing(2),\n\t},\n}))\n\n/**\n * Input field for the Income tax value\n *\n * @export\n * @param {ControlProps<number>} {\n * \tvalue,\n * \tonChange,\n * }\n * @returns {ReactElement}\n */\nexport default React.memo(function IncomeTax({\n\tvalue,\n\tonChange,\n\tcalculated,\n}: IncomeTaxProps): ReactElement {\n\tconst cls = useInputWrapper()\n\tconst [error, setError] = useState(\"\")\n\tconst styles = useStyles({ stacked: true, mini: true, fullHeight: false })\n\tconst cusCls = useCustomStyles()\n\n\tfunction onPercentageChange(e: ChangeEvent<HTMLInputElement>): void {\n\t\tconst inputVal = e.target.value.trim() === \"\" ? \"0\" : e.target.value.trim()\n\t\tif (\n\t\t\t`${inputVal}`.startsWith(\"00\") ||\n\t\t\t(`${value}`.startsWith(\"0\") && `${inputVal}`.length > 1)\n\t\t) {\n\t\t\tsetError(\"Amount can't start with a zero\")\n\t\t\treturn\n\t\t}\n\n\t\tif (inputVal.match(/\\D/g)) {\n\t\t\tsetError(\"Amount can only include digits\")\n\t\t\treturn\n\t\t}\n\n\t\tconst val = parseInt(inputVal, 10)\n\t\t// eslint-disable-next-line no-restricted-globals\n\t\tif (isNaN(val) || val > 100 || val < 0) {\n\t\t\tsetError(\"Please enter a valid number between 0 and 100\")\n\t\t\treturn\n\t\t}\n\t\tsetError(\"\")\n\n\t\tif (typeof onChange !== \"undefined\") {\n\t\t\tonChange(e)\n\t\t}\n\t}\n\n\treturn (\n\t\t<Box\n\t\t\tclassName={`${cls.wrapper} ${cls.highlight} ${styles.root} ${cusCls.box}`}\n\t\t>\n\t\t\t<Box className={styles.type}>\n\t\t\t\t<Typography variant=\"h6\" component=\"p\">\n\t\t\t\t\tIncome Tax or Company Tax\n\t\t\t\t</Typography>\n\t\t\t\t<Typography component=\"span\">\n\t\t\t\t\tEstimated amount to pay your tax; approximately {value}% of your Cash\n\t\t\t\t\tSurplus.\n\t\t\t\t</Typography>\n\t\t\t\t<TextField\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tonChange={onPercentageChange}\n\t\t\t\t\tname=\"incomeTax\"\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tlabel=\"Income tax percent\"\n\t\t\t\t\tInputProps={{\n\t\t\t\t\t\tendAdornment: <InputAdornment position=\"end\">%</InputAdornment>,\n\t\t\t\t\t}}\n\t\t\t\t\tclassName={cusCls.textfield}\n\t\t\t\t\terror={error !== \"\"}\n\t\t\t\t\thelperText={error}\n\t\t\t\t/>\n\t\t\t</Box>\n\t\t\t<Typography variant=\"h6\">\n\t\t\t\t{/* eslint-disable-next-line no-restricted-globals */}\n\t\t\t\t{addDollarSign(formatNumber(`${isNaN(calculated) ? 0 : calculated}`))}\n\t\t\t</Typography>\n\t\t</Box>\n\t)\n})\n","import React, { ReactElement } from \"react\"\nimport { Box, makeStyles, Grid } from \"@material-ui/core\"\nimport ExpandableNav from \"../ExpandableNav\"\nimport { Debtors, Creditors, Assets, Loans, Stock } from \".\"\nimport ComputedPanels from \"../ComputedPanels\"\nimport { addDollarSign, formatNumber } from \"../../util/money/formatting\"\n\n/**\n * Prop definition for the FallingBehind component\n *\n * @interface FallingBehindProps\n */\ninterface FallingBehindProps {\n\tstock: number\n\tcreditors: number\n\tdebtors: number\n\tassets: number\n\tloans: number\n\ttotalNetAssets: number\n\tonChange: InputChange\n}\n\nconst useStyles = makeStyles((theme) => ({\n\tbox: {\n\t\tpaddingRight: theme.spacing(2),\n\t\tpaddingLeft: theme.spacing(2),\n\t\tpaddingBottom: theme.spacing(2),\n\t},\n\ttotal: {\n\t\tdisplay: \"flex\",\n\t\talignItems: \"flex-end\",\n\t\t\"& > div\": {\n\t\t\twidth: \"100%\",\n\t\t},\n\t},\n}))\n\n/**\n * Component to wrap all the inputs in the Falling Behind section of the CFC\n * form\n *\n * @export\n * @param {FallingBehindProps} {\n * \tstock,\n * \tcreditors,\n * \tdebtors,\n * \tassets,\n * \tloans,\n * \ttotalNetAssets,\n * \tonChange,\n * }\n * @returns {ReactElement}\n */\nexport default React.memo(function FallingBehind({\n\tstock,\n\tcreditors,\n\tdebtors,\n\tassets,\n\tloans,\n\ttotalNetAssets,\n\tonChange,\n}: FallingBehindProps): ReactElement {\n\tconst cls = useStyles()\n\n\treturn (\n\t\t<ExpandableNav\n\t\t\ttitle=\"Is my business improving its financial position?\"\n\t\t\tsubHeading=\"Complete these fields to record your net asset position.\"\n\t\t\tdefaultExpanded={false}\n\t\t>\n\t\t\t<Box className={cls.box}>\n\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t<Debtors value={debtors} onChange={onChange} />\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t<Creditors value={creditors} onChange={onChange} />\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t<Assets value={assets} onChange={onChange} />\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t<Loans value={loans} onChange={onChange} />\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t<Stock value={stock} onChange={onChange} />\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} sm={6} className={cls.total}>\n\t\t\t\t\t\t<ComputedPanels\n\t\t\t\t\t\t\ttitle=\"Total net assets\"\n\t\t\t\t\t\t\tvalue={addDollarSign(formatNumber(`${totalNetAssets}`))}\n\t\t\t\t\t\t\twrapped={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Box>\n\t\t</ExpandableNav>\n\t)\n})\n","import React, { ReactElement } from \"react\"\nimport { ControlProps } from \"./__config/shape\"\nimport DescriptiveMoneyInput from \"../DescriptiveMoneyInput\"\n\n/**\n * Input field for the Debtors value\n *\n * @export\n * @param {ControlProps<number>} {\n * \tvalue,\n * \tonChange,\n * }\n * @returns {ReactElement}\n */\nexport default function Debtors({\n\tvalue,\n\tonChange,\n}: ControlProps<number>): ReactElement {\n\treturn (\n\t\t<DescriptiveMoneyInput\n\t\t\tmini\n\t\t\tstacked\n\t\t\tfullHeight\n\t\t\tvariant=\"outlined\"\n\t\t\tonChange={onChange}\n\t\t\tvalue={value}\n\t\t\tname=\"debtors\"\n\t\t\ttitle=\"Debtors\"\n\t\t\tdescription=\"The amount others owe to your business at the close of the period.\"\n\t\t/>\n\t)\n}\n","import React, { ReactElement } from \"react\"\nimport { ControlProps } from \"./__config/shape\"\nimport DescriptiveMoneyInput from \"../DescriptiveMoneyInput\"\n\n/**\n * Input field for the Creditors value\n *\n * @export\n * @param {ControlProps<number>} {\n * \tvalue,\n * \tonChange,\n * }\n * @returns {ReactElement}\n */\nexport default function Creditors({\n\tvalue,\n\tonChange,\n}: ControlProps<number>): ReactElement {\n\treturn (\n\t\t<DescriptiveMoneyInput\n\t\t\tmini\n\t\t\tstacked\n\t\t\tfullHeight\n\t\t\tvariant=\"outlined\"\n\t\t\tonChange={onChange}\n\t\t\tvalue={value}\n\t\t\tname=\"creditors\"\n\t\t\ttitle=\"Creditors\"\n\t\t\tdescription=\"The amount your business owes to others at the close of the period.\"\n\t\t/>\n\t)\n}\n","import React, { ReactElement } from \"react\"\nimport { ControlProps } from \"./__config/shape\"\nimport DescriptiveMoneyInput from \"../DescriptiveMoneyInput\"\n\n/**\n * Input field for the Assets value\n *\n * @export\n * @param {ControlProps<number>} {\n * \tvalue,\n * \tonChange,\n * }\n * @returns {ReactElement}\n */\nexport default React.memo(function Assets({\n\tvalue,\n\tonChange,\n}: ControlProps<number>): ReactElement {\n\treturn (\n\t\t<DescriptiveMoneyInput\n\t\t\tmini\n\t\t\tstacked\n\t\t\tfullHeight\n\t\t\tvariant=\"outlined\"\n\t\t\tonChange={onChange}\n\t\t\tvalue={value}\n\t\t\tname=\"assets\"\n\t\t\ttitle=\"Assets\"\n\t\t\tdescription=\"The value of your business assets at the close of the period.\"\n\t\t/>\n\t)\n})\n","import React, { ReactElement } from \"react\"\nimport { ControlProps } from \"./__config/shape\"\nimport DescriptiveMoneyInput from \"../DescriptiveMoneyInput\"\n\n/**\n * Input field for the Loans value\n *\n * @export\n * @param {ControlProps<number>} {\n * \tvalue,\n * \tonChange,\n * }\n * @returns {ReactElement}\n */\nexport default function Loans({\n\tvalue,\n\tonChange,\n}: ControlProps<number>): ReactElement {\n\treturn (\n\t\t<DescriptiveMoneyInput\n\t\t\tmini\n\t\t\tstacked\n\t\t\tfullHeight\n\t\t\tvariant=\"outlined\"\n\t\t\tonChange={onChange}\n\t\t\tvalue={value}\n\t\t\tname=\"loans\"\n\t\t\ttitle=\"Loans\"\n\t\t\tdescription=\"The amount outstanding on your loans at the close of the period.\"\n\t\t/>\n\t)\n}\n","import React, { ReactElement } from \"react\"\nimport { ControlProps } from \"./__config/shape\"\nimport DescriptiveMoneyInput from \"../DescriptiveMoneyInput\"\n\n/**\n * Input field for the Stock value\n *\n * @export\n * @param {ControlProps<number>} {\n * \tvalue,\n * \tonChange,\n * }\n * @returns {ReactElement}\n */\nexport default function Stock({\n\tvalue,\n\tonChange,\n}: ControlProps<number>): ReactElement {\n\treturn (\n\t\t<DescriptiveMoneyInput\n\t\t\tmini\n\t\t\tstacked\n\t\t\tfullHeight\n\t\t\tvariant=\"outlined\"\n\t\t\tonChange={onChange}\n\t\t\tvalue={value}\n\t\t\tname=\"stock\"\n\t\t\ttitle=\"Stock\"\n\t\t\tdescription=\"The value of your stock on hand at the close of the period.\"\n\t\t/>\n\t)\n}\n","import React, { ReactElement, memo } from \"react\"\nimport { Grid, Typography, makeStyles, Divider } from \"@material-ui/core\"\nimport {\n\tDescriptionSize,\n\tAmountSize,\n\tApplyGSTSize,\n\tActionsSize,\n} from \"./__config/utilities\"\nimport Spacer from \"../Spacer/Spacer\"\n\nconst useStyles = makeStyles((theme) => ({\n\tlabel: {\n\t\tfontWeight: theme.typography.fontWeightMedium,\n\t\tfontSize: theme.typography.fontSize,\n\t\tpaddingBottom: \"4px\",\n\t},\n}))\n\n/**\n * Component to render the header of the form\n *\n * @export\n * @returns {ReactElement}\n */\nexport default memo(function FormHeader(): ReactElement {\n\tconst cls = useStyles()\n\n\treturn (\n\t\t<>\n\t\t\t<Grid container spacing={2}>\n\t\t\t\t<Grid item xs={DescriptionSize}>\n\t\t\t\t\t<Typography className={cls.label}>Description</Typography>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={AmountSize}>\n\t\t\t\t\t<Typography className={cls.label}>Amount</Typography>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={ApplyGSTSize}>\n\t\t\t\t\t<Typography className={cls.label}>Apply GST</Typography>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={ActionsSize}>\n\t\t\t\t\t<Typography className={cls.label}>Actions</Typography>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<Divider />\n\t\t\t<Spacer />\n\t\t</>\n\t)\n})\n","import React, { ReactElement, MouseEvent } from \"react\"\nimport { Box, Button } from \"@material-ui/core\"\nimport AddIcon from \"@material-ui/icons/Add\"\n\n/**\n * Prop definition for the Form Actions component\n *\n * @interface FormActionsProps\n */\ninterface FormActionsProps {\n\taddItem: () => void\n\taddDisabled: boolean\n}\n\n/**\n * Form actions for the repeater form. This triggers a method to add a item to\n * a particular group\n *\n * @export\n * @param {FormActionsProps} {\n * \taddItem,\n * \taddDisabled\n * }\n * @returns {ReactElement}\n */\nexport default function FormActions({\n\taddItem,\n\taddDisabled,\n}: FormActionsProps): ReactElement {\n\treturn (\n\t\t<Box style={{ display: \"flex\" }} justifyContent=\"flex-end\">\n\t\t\t<Button\n\t\t\t\tvariant=\"outlined\"\n\t\t\t\tcolor=\"primary\"\n\t\t\t\tstartIcon={<AddIcon />}\n\t\t\t\tonClick={(e: MouseEvent<HTMLButtonElement>): void => {\n\t\t\t\t\te.preventDefault()\n\t\t\t\t\taddItem()\n\t\t\t\t}}\n\t\t\t\tdisabled={addDisabled}\n\t\t\t>\n\t\t\t\tAdd new\n\t\t\t</Button>\n\t\t</Box>\n\t)\n}\n","import React, { ReactElement, MouseEvent, useState } from \"react\"\nimport {\n\tGrid,\n\tTextField,\n\tCheckbox,\n\tTooltip,\n\tIconButton,\n\tmakeStyles,\n} from \"@material-ui/core\"\nimport GroupWorkIcon from \"@material-ui/icons/GroupWork\"\nimport { RepeaterFormProps } from \"./__config/shape\"\nimport { CashFlow } from \"../../data/_config/shape\"\nimport {\n\tDescriptionSize,\n\tActionsSize,\n\tAmountSize,\n\tApplyGSTSize,\n} from \"./__config/utilities\"\nimport MoneyInput from \"../MoneyInput\"\nimport IconDeleteButton from \"../IconDeleteButton\"\nimport ConfirmDialogue from \"../ConfirmDialogue\"\n\n/**\n * Prop definition for the form item component\n *\n * @interface FormItemProps\n */\ninterface FormItemProps {\n\tname: RepeaterFormProps[\"name\"]\n\tvalue: CashFlow\n\tonChange: InputChange\n\tremoveItem: (e: MouseEvent<HTMLButtonElement>) => void\n\tindex: number\n}\n\nconst useStyles = makeStyles((theme) => ({\n\tactionGridItem: {\n\t\theight: theme.typography.pxToRem(72),\n\t\tdisplay: \"flex\",\n\t},\n}))\n\n/**\n * A single form item in the repeater form\n *\n * @export\n * @param {FormItemProps} {\n * \tname,\n * \tvalue,\n * \tonChange,\n * \tindex,\n * \tremoveItem,\n * }\n * @returns {ReactElement}\n */\nexport default React.memo(function FormItem({\n\tname,\n\tvalue,\n\tonChange,\n\tindex,\n\tremoveItem,\n}: FormItemProps): ReactElement {\n\tconst cls = useStyles()\n\tconst [dialogOpen, setDialogOpen] = useState<boolean>(false)\n\tconst onDialogClose = (): void => {\n\t\tsetDialogOpen(false)\n\t}\n\tconst onDialogConfirm = (e: MouseEvent<HTMLButtonElement>): void => {\n\t\tremoveItem(e)\n\t\tsetDialogOpen(false)\n\t}\n\tconst triggerDialog = (e: MouseEvent<HTMLButtonElement>): void => {\n\t\te.preventDefault()\n\t\tsetDialogOpen(true)\n\t}\n\n\treturn (\n\t\t<Grid container spacing={2} alignItems=\"stretch\">\n\t\t\t<Grid item xs={DescriptionSize}>\n\t\t\t\t<TextField\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tname={`${name}[${index}].description`}\n\t\t\t\t\tid={`${name}[${index}].description`}\n\t\t\t\t\tvalue={value.description}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\tlabel=\"Description\"\n\t\t\t\t\tfullWidth\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={AmountSize}>\n\t\t\t\t<MoneyInput\n\t\t\t\t\tvalue={value.amount}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\tname={`${name}[${index}].amount`}\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={ApplyGSTSize} className={cls.actionGridItem}>\n\t\t\t\t<Checkbox\n\t\t\t\t\tchecked={value.gstApplicable}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\tname={`${name}[${index}].gstApplicable`}\n\t\t\t\t\tinputProps={{ \"aria-label\": \"Apply GST\" }}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={ActionsSize} className={cls.actionGridItem}>\n\t\t\t\t<IconDeleteButton onClick={triggerDialog} />\n\t\t\t\t<ConfirmDialogue\n\t\t\t\t\topen={dialogOpen}\n\t\t\t\t\tonClose={onDialogClose}\n\t\t\t\t\tonCancel={onDialogClose}\n\t\t\t\t\tonConfirm={onDialogConfirm}\n\t\t\t\t>\n\t\t\t\t\tAre you sure you want to remove this item?\n\t\t\t\t</ConfirmDialogue>\n\t\t\t\t<Tooltip title=\"Group data\">\n\t\t\t\t\t<IconButton>\n\t\t\t\t\t\t<GroupWorkIcon />\n\t\t\t\t\t\t<span className=\"MuiTypography-srOnly\">Group imported data</span>\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Tooltip>\n\t\t\t</Grid>\n\t\t</Grid>\n\t)\n})\n","import React, { ReactElement, memo, useCallback, MouseEvent } from \"react\"\nimport { Divider, Box, Typography } from \"@material-ui/core\"\nimport Spacer from \"../Spacer/Spacer\"\nimport ComputedPanels from \"../ComputedPanels\"\nimport { addDollarSign, formatNumber } from \"../../util/money/formatting\"\nimport FormHeader from \"./FormHeader\"\nimport { RepeaterFormProps } from \"./__config/shape\"\nimport { useRepeaterStyles as useStyles } from \"./__config/styles\"\nimport FormActions from \"./FormActions\"\nimport FormItem from \"./FormItem\"\nimport { CashFlow } from \"../../data/_config/shape\"\n\n/**\n * Repeater form using for Cash Flow items\n *\n * @export\n * @param {RepeaterFormProps} {\n * \tname,\n * \tvalues,\n * \tonChange,\n * \ttotal,\n * \tgst,\n * \taddItem,\n * \tremoveItem,\n * }\n * @returns {ReactElement}\n */\nexport default memo(function RepeaterForm({\n\tname,\n\tvalues,\n\tonChange,\n\ttotal,\n\tgst,\n\taddItem,\n\tremoveItem,\n\tbeforeTotalChild,\n}: RepeaterFormProps): ReactElement {\n\tconst cls = useStyles()\n\n\t/**\n\t * Method to remove a item from the form\n\t *\n\t * @param {CashFlow[\"id\"]} id\n\t * @returns {void}\n\t */\n\tconst removeFormItem = useCallback(\n\t\t(id: CashFlow[\"id\"]) => (e: MouseEvent<HTMLButtonElement>): void => {\n\t\t\te.preventDefault()\n\t\t\tremoveItem(id)\n\t\t},\n\t\t[removeItem]\n\t)\n\n\t/**\n\t * Checks if the add new button should be disabled\n\t *\n\t * @returns {boolean}\n\t */\n\tconst isAddDisabled = useCallback(() => {\n\t\treturn values.findIndex((item) => item.description === \"\") !== -1\n\t}, [values])\n\n\treturn (\n\t\t<>\n\t\t\t<Box className={cls.body}>\n\t\t\t\t<Typography\n\t\t\t\t\tclassName={cls.mobileNotice}\n\t\t\t\t\tstyle={{ fontStyle: \"italic\" }}\n\t\t\t\t>\n\t\t\t\t\tIt appears that you are using a mobile device. Remember to scroll to\n\t\t\t\t\tview the full form below\n\t\t\t\t\t<Spacer />\n\t\t\t\t</Typography>\n\t\t\t\t<Box className={cls.form}>\n\t\t\t\t\t<Box className={cls.formInner}>\n\t\t\t\t\t\t<FormHeader />\n\t\t\t\t\t\t{values.map((item, idx) => (\n\t\t\t\t\t\t\t<FormItem\n\t\t\t\t\t\t\t\tname={name}\n\t\t\t\t\t\t\t\tvalue={item}\n\t\t\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\t\t\tindex={idx}\n\t\t\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t\t\t\tremoveItem={removeFormItem(item.id)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t\t<Spacer />\n\t\t\t\t<FormActions addItem={addItem} addDisabled={isAddDisabled()} />\n\t\t\t</Box>\n\t\t\t{typeof beforeTotalChild !== \"undefined\" && (\n\t\t\t\t<>\n\t\t\t\t\t<Spacer />\n\t\t\t\t\t<Divider />\n\t\t\t\t\t<Spacer />\n\t\t\t\t\t{beforeTotalChild()}\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t<Spacer />\n\t\t\t<Divider />\n\t\t\t<Spacer />\n\t\t\t<Box className={cls.body}>\n\t\t\t\t<ComputedPanels\n\t\t\t\t\ttitle=\"Total (exc GST)\"\n\t\t\t\t\twrapped={false}\n\t\t\t\t\tvalue={addDollarSign(formatNumber(`${total}`))}\n\t\t\t\t/>\n\t\t\t\t<ComputedPanels\n\t\t\t\t\ttitle=\"GST\"\n\t\t\t\t\tmini\n\t\t\t\t\twrapped={false}\n\t\t\t\t\tvalue={addDollarSign(formatNumber(`${gst}`))}\n\t\t\t\t/>\n\t\t\t</Box>\n\t\t</>\n\t)\n})\n","import React, { ReactElement } from \"react\"\nimport {\n\tBox,\n\tList,\n\tListItem,\n\tListItemText,\n\tTypography,\n\tmakeStyles,\n\tTooltip,\n} from \"@material-ui/core\"\nimport InfoIcon from \"@material-ui/icons/Info\"\nimport orange from \"@material-ui/core/colors/orange\"\nimport useFourQsStyles from \"../HealthCheck/FourQuestions/_config/styles\"\nimport ExpandableNav from \"../ExpandableNav\"\nimport { fourQuestionsContent } from \"../HealthCheck/_config/data\"\nimport { ICFCState } from \"../../state/CFC/shape\"\nimport { addDollarSign, formatNumber } from \"../../util/money/formatting\"\n\ntype CFC4QsProps = {\n\tvalues: ICFCState[\"questionValues\"]\n}\n\nconst tooltipContent = [\n\t\"Total Cash In (exc GST) – Total Cash Out (exc GST).\",\n\t\"GST on Sales – GST on Purchases + PAYG Withholding + Super + Income Tax or Company Tax.\",\n\t\"Opening Balance + Cash Surplus (exc GST) – Income Tax or Company Tax.\",\n\t\"Total net assets (later period, eg. Forecast) – Total net assets (earlier period, eg. Review).\",\n]\n\nconst useStyles = makeStyles((theme) => ({\n\tvalueText: {\n\t\tfontWeight: theme.typography.fontWeightMedium,\n\t\tmarginTop: \"4px\",\n\t\tdisplay: \"flex\",\n\t\talignItems: \"center\",\n\t\t\"& svg\": {\n\t\t\tmarginLeft: theme.spacing(1),\n\t\t},\n\t},\n\tquestionTwo: {\n\t\tposition: \"relative\",\n\t\t\"&:before\": {\n\t\t\tcontent: \"''\",\n\t\t\twidth: \"5px\",\n\t\t\tbackground: orange[500],\n\t\t\theight: \"100%\",\n\t\t\tposition: \"absolute\",\n\t\t\ttop: \"0px\",\n\t\t\tleft: `-${theme.spacing(2)}px`,\n\t\t},\n\t},\n}))\n\nexport default function CFCFourQuestions({\n\tvalues,\n}: CFC4QsProps): ReactElement {\n\tconst styles = useFourQsStyles()\n\tconst cls = useStyles()\n\n\tfunction getValueText(idx: number): string {\n\t\tconst vals = Object.values(values)\n\t\tif (typeof vals[idx] !== \"undefined\") {\n\t\t\treturn addDollarSign(formatNumber(`${vals[idx]}`))\n\t\t}\n\t\treturn idx === 3\n\t\t\t? \"Compare two canvasses for different dates to find out.\"\n\t\t\t: addDollarSign(\"0\")\n\t}\n\n\treturn (\n\t\t<ExpandableNav\n\t\t\ttitle=\"Four key questions\"\n\t\t\treactourLabel=\"cfc-four-questions\"\n\t\t>\n\t\t\t<Box className={styles.box}>\n\t\t\t\t<List className={styles.list}>\n\t\t\t\t\t{fourQuestionsContent.map(\n\t\t\t\t\t\t(content: string, idx: number): ReactElement => (\n\t\t\t\t\t\t\t<Box key={content} component=\"li\">\n\t\t\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t\t\tcomponent=\"div\"\n\t\t\t\t\t\t\t\t\tclassName={`${styles.listItem} ${\n\t\t\t\t\t\t\t\t\t\tidx === 0 ? styles.listItemFirst : \"\"\n\t\t\t\t\t\t\t\t\t} ${idx === 1 ? cls.questionTwo : \"\"}`}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<ListItemText className={styles.listItemText}>\n\t\t\t\t\t\t\t\t\t\t{`${idx + 1}. ${content}`}\n\t\t\t\t\t\t\t\t\t\t<Typography className={cls.valueText}>\n\t\t\t\t\t\t\t\t\t\t\t{getValueText(idx)}\n\t\t\t\t\t\t\t\t\t\t\t<Tooltip title={tooltipContent[idx]}>\n\t\t\t\t\t\t\t\t\t\t\t\t<InfoIcon color=\"primary\" />\n\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t</ListItemText>\n\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t)\n\t\t\t\t\t)}\n\t\t\t\t</List>\n\t\t\t</Box>\n\t\t</ExpandableNav>\n\t)\n}\n","import { pipe } from \"../reduce/math\"\n\n/**\n * Removes unused decimal points to a certain value\n * Value must be between 0 - 20\n *\n * @param {number} val\n * @returns {NumToStrHOF}\n */\nexport function toFixed(val: number): NumToStrHOF {\n\treturn (x: number): string => {\n\t\treturn x.toFixed(val)\n\t}\n}\n\n/**\n * Converts a number to a string\n *\n * @param {number} val\n * @returns {string}\n */\nexport function toString(val: number): string {\n\treturn `${val}`\n}\n\n/**\n * Takes a string value and returns a number with 2 decimal points\n *\n * @param {string} num\n * @returns {string}\n */\nexport function toTwoDecimal(num: string): string {\n\treturn pipe<string, string, [StrToNumHOF, NumToStrHOF]>(\n\t\tNumber.parseFloat,\n\t\ttoFixed(2)\n\t)(num)\n}\n\n/**\n * Appends a value to a another value\n *\n * @param {string} c\n * @returns {StrToStrHOF}\n */\nexport function appendWith(c: string): StrToStrHOF {\n\treturn (s: string): string => {\n\t\tif (!s.startsWith(c)) {\n\t\t\treturn `${c}${s}`\n\t\t}\n\t\treturn s\n\t}\n}\n\n/**\n * Adds a dollar sign ($) to the front of a string\n *\n * @param {string} val\n * @returns {string}\n */\nexport function addDollarSign(val: string): string {\n\treturn appendWith(\"$\")(val)\n}\n\n/**\n * Removed trailing zeros and dots\n *\n * ## Example\n *\n * * 100.00 -> 100\n * * 100.0 -> 100\n * * 10. -> 10\n * * 6.00000000 -> 6\n *\n * @export\n * @param {string} val\n * @returns {string}\n */\nexport function removeTrailingZeros(val: string): string {\n\tconst re = new RegExp(/\\.(0+)?$/, \"g\")\n\treturn val.replace(re, \"\")\n}\n\n/**\n * Takes a number value and formats it to be a dollar value\n *\n * @param {number} num\n * @returns {string}\n */\nexport function formatMoney(num: number): string {\n\treturn pipe<number, string, [NumToStrHOF, StrToStrHOF, StrToStrHOF]>(\n\t\ttoString,\n\t\ttoTwoDecimal,\n\t\taddDollarSign\n\t)(num)\n}\n\n/**\n * Transforms a number to the decimal version\n * 1000 -> 1,000\n *\n * @param {string} n\n * @returns {string}\n */\nexport function formatNumber(n: string): string {\n\t// format number 1000000 to 1,234,567\n\treturn n.replace(/\\D/g, \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n}\n","import { CashFlow } from \"../../data/_config/shape\"\n\n/**\n * Used with the array `filter` method, this allows you to\n * filter a object using the `gstApplicable` property.\n * The objects interface must use `CashFlow`\n * to work\n *\n * @param {boolean} reject\n * @returns CashFlow[]\n */\nconst GSTApplicable = (reject = false) => (item: CashFlow): boolean => {\n\tconst res = item.gstApplicable\n\treturn reject ? !res : res\n}\n\nexport default GSTApplicable\n","import { divideBy, minusBy, pipe } from \"../reduce/math\"\n\n/**\n * Calculates a GST value\n *\n * @param {number} x\n * @returns {number}\n */\nfunction calculateGST(x: number): number {\n\treturn divideBy(11)(x)\n}\n\n/**\n * Removes the GST value from a given value\n *\n * @param {number} x\n * @returns {number}\n */\nfunction removeGST(x: number): number {\n\tconst gst = calculateGST(x)\n\treturn pipe<number, number, [MathHOF, MathHOF]>(minusBy(gst), Math.round)(x)\n}\n\nexport { calculateGST, removeGST }\n","/* eslint-disable no-restricted-globals */\nimport { BaseCFCStruct, CashFlow } from \"../../data/_config/shape\"\nimport GSTApplicable from \"../../util/filters/ByGSTApplicable\"\nimport { sum, pipe, add, minusBy, numOrZero } from \"../../util/reduce/math\"\nimport { removeGST, calculateGST } from \"../../util/money/gst\"\n\n/**\n * Extracts the values for a specific key\n *\n * @export\n * @template T\n * @template K\n * @param {K} k\n * @returns {ReducerHOF<T[K][], T>}\n */\nexport function getKeyValue<T, K extends keyof T>(k: K): ReducerHOF<T[K][], T> {\n\treturn (acc, cur): T[K][] => acc.concat(cur[k])\n}\n\n/**\n * Calcultes the GST value for a cash flow group\n *\n * @export\n * @param {CashFlow[]} values\n * @returns {number}\n */\nexport function calcCashFlowGST(values: CashFlow[]): number {\n\tconst total = values\n\t\t.filter(GSTApplicable())\n\t\t.reduce(getKeyValue(\"amount\"), [])\n\t\t.reduce(sum(), 0)\n\n\treturn Math.round(calculateGST(total))\n}\n\n/**\n * Calculates the sum for a cash flow group (exec GST) for the items that\n * GST is applied to\n *\n * @export\n * @param {CashFlow[]} values\n * @returns {number}\n */\nexport function calcCashFlowGSTTotal(values: CashFlow[]): number {\n\tconst total = values\n\t\t.filter(GSTApplicable())\n\t\t.reduce(getKeyValue(\"amount\"), [])\n\t\t.reduce(sum(), 0)\n\n\treturn removeGST(total)\n}\n\n/**\n * Calculates the sum for a cash flow group for items that GST is not applied\n * to\n *\n * @export\n * @param {CashFlow[]} values\n * @returns {number}\n */\nexport function calcCashFlowNonGSTTotal(values: CashFlow[]): number {\n\treturn values\n\t\t.filter(GSTApplicable(true)) // rejects gstApplicable: true\n\t\t.reduce(getKeyValue(\"amount\"), [])\n\t\t.reduce(sum(), 0)\n}\n\n/**\n * Calculates the sum total for a cash flow group\n *\n * @export\n * @param {CashFlow[]} values\n * @returns {number}\n */\nexport function calcCashFlowTotal(values: CashFlow[]): number {\n\treturn numOrZero(\n\t\tpipe(\n\t\t\tadd(calcCashFlowGSTTotal(values)),\n\t\t\tadd(calcCashFlowNonGSTTotal(values))\n\t\t)(0)\n\t)\n}\n\nexport function calcTotalCashOut(values: BaseCFCStruct): number {\n\treturn numOrZero(\n\t\tpipe(\n\t\t\tadd(values.paygWithholding),\n\t\t\tadd(values.superAmount)\n\t\t)(calcCashFlowTotal(values.cashOutItems))\n\t)\n}\n\n/**\n * Calculates the Cash Surplus value\n *\n * @export\n * @param {BaseCFCStruct} values\n * @returns {number}\n */\nexport function calcCashSurplus(values: BaseCFCStruct): number {\n\treturn calcCashFlowTotal(values.cashInItems) - calcTotalCashOut(values)\n}\n\n/**\n * Calculates the income/company tax based on the form incomeTax percentage\n *\n * @export\n * @param {BaseCFCStruct} values\n * @returns {number}\n */\nexport function calcIncomeTaxPer(values: BaseCFCStruct): number {\n\tconst num = parseInt(`${values.incomeTax}`, 10)\n\tif (isNaN(num) || num === 0) {\n\t\treturn 0\n\t}\n\n\treturn Math.round(calcCashSurplus(values) * (num / 100))\n}\n\n/**\n * Calculates the amount available to spend\n *\n * @export\n * @param {BaseCFCStruct} values\n * @returns {number}\n */\nexport function calcAvailableToSpend(values: BaseCFCStruct): number {\n\treturn numOrZero(\n\t\tpipe(\n\t\t\tadd(values.openingBalance),\n\t\t\tminusBy(calcIncomeTaxPer(values))\n\t\t)(calcCashSurplus(values))\n\t)\n}\n\n/**\n * Calculates the closing balance\n *\n * @export\n * @param {BaseCFCStruct} values\n * @returns {number}\n */\nexport function calcClosingBalance(values: BaseCFCStruct): number {\n\treturn calcAvailableToSpend(values) - numOrZero(values.cashToOwner)\n}\n\n/**\n * Calculates the Total net assets value\n *\n * @export\n * @param {BaseCFCStruct} values\n * @returns {number}\n */\nexport function calcTotalNetAssets(values: BaseCFCStruct): number {\n\treturn numOrZero(\n\t\tpipe(\n\t\t\tadd(values.stock),\n\t\t\tminusBy(values.creditors),\n\t\t\tadd(values.assets),\n\t\t\tadd(values.debtors),\n\t\t\tminusBy(values.loans)\n\t\t)(calcClosingBalance(values))\n\t)\n}\n","import EmojiEmotionsOutlinedIcon from \"@material-ui/icons/EmojiEmotionsOutlined\"\nimport SentimentDissatisfiedIcon from \"@material-ui/icons/SentimentDissatisfied\"\nimport SentimentVeryDissatisfiedIcon from \"@material-ui/icons/SentimentVeryDissatisfied\"\nimport { green, red, orange } from \"@material-ui/core/colors\"\nimport {\n\tIQuestionStructure,\n\tIAnswerTheme,\n\tQuestionOptionsRecord,\n} from \"./shape\"\nimport { PrivateRoutes } from \"../../../util/routes/routes\"\nimport { questionOptionsMap } from \"./utilities\"\n\n/**\n * Four key questions\n *\n * @exports\n */\nexport const fourQuestionsContent = [\n\t\"Are you trading profitably?\",\n\t\"Have you put enough money aside to meet your regular financial commitments?\",\n\t\"Does your business have enough to spend on yourself and pay others?\",\n\t\"Is your business improving its financial position?\",\n]\n\n/**\n * Options for the four key questions\n *\n */\nconst fourQuestionOptions: QuestionOptionsRecord = {\n\tpositive: \"Yes\",\n\tnegative: \"No\",\n\tneutral: \"Not sure\",\n}\n\n/**\n * Generic options for the questions in the health check\n *\n */\nconst additionalQuestionsOptions: QuestionOptionsRecord = {\n\tpositive: \"Confident\",\n\tnegative: \"Not Confident\",\n\tneutral: \"Not sure\",\n}\n\n/**\n * Defines a list of questions used in the health check\n *\n */\nexport const questions: IQuestionStructure[] = [\n\t...questionOptionsMap(fourQuestionsContent, fourQuestionOptions),\n\t{\n\t\tquestion: \"How do you feel about planning your business?\",\n\t\toptions: { ...additionalQuestionsOptions },\n\t\tlearnMore: PrivateRoutes.DTPlanningBusiness,\n\t},\n\t{\n\t\tquestion: \"How do you feel about understanding your cash flow?\",\n\t\toptions: { ...additionalQuestionsOptions },\n\t\tlearnMore: PrivateRoutes.DTManagingCashFlow,\n\t},\n\t{\n\t\tquestion: \"How do you feel about keeping your books and records?\",\n\t\toptions: { ...additionalQuestionsOptions },\n\t\tlearnMore: PrivateRoutes.DTRecordKeeping,\n\t},\n\t{\n\t\tquestion:\n\t\t\t\"How do you feel about meeting your regular financial commitments?\",\n\t\toptions: { ...additionalQuestionsOptions },\n\t\tlearnMore: PrivateRoutes.DTPlanningFinanicalCommitments,\n\t},\n\t{\n\t\tquestion: \"How do you feel about funding your business?\",\n\t\toptions: { ...additionalQuestionsOptions },\n\t\tlearnMore: PrivateRoutes.DTFundingBusiness,\n\t},\n\t{\n\t\tquestion: \"How do you feel about tracking your business performance?\",\n\t\toptions: { ...additionalQuestionsOptions },\n\t\tlearnMore: PrivateRoutes.DTTrackingPerformance,\n\t},\n]\n\n/**\n * Theming for the different health check answers\n *\n * @exports\n */\nexport const answerTheming: IAnswerTheme[] = [\n\t{\n\t\tIcon: EmojiEmotionsOutlinedIcon,\n\t\tcolor: green[500],\n\t\tanswer: \"positive\",\n\t},\n\t{\n\t\tIcon: SentimentVeryDissatisfiedIcon,\n\t\tcolor: red[500],\n\t\tanswer: \"negative\",\n\t},\n\t{\n\t\tIcon: SentimentDissatisfiedIcon,\n\t\tcolor: orange[500],\n\t\tanswer: \"neutral\",\n\t},\n]\n","import { createContext } from \"react\"\nimport { IActionChecklistState } from \"./shape\"\n\n// Default context for action checklist\nexport const defaultActionChecklistState: IActionChecklistState = {\n\tdispatch: () => null,\n\thideCompleted: false,\n\tdatabaseSyced: false,\n\tpriority: [],\n\tchecklistCollection: [],\n\tnotes: [],\n}\n\n// Creates the context\nconst ActionChecklistContext = createContext(defaultActionChecklistState)\n\nexport default ActionChecklistContext\n","import { IActionChecklistState } from \"../shape\"\n\n/**\n * Change the state for the hide completed value\n *\n * @param {IActionChecklistState} state\n * @param {boolean} payload\n * @returns IActionChecklistState\n */\nconst changeHideCompleted = (\n\tstate: IActionChecklistState,\n\tpayload: boolean\n): IActionChecklistState => {\n\treturn {\n\t\t...state,\n\t\thideCompleted: payload,\n\t}\n}\n\nexport default changeHideCompleted\n","import { IActionChecklistState, IUpdateDatabaseSyncPayload } from \"../shape\"\n\n/**\n * Updates the state when data is synced from the database\n *\n * @param {IActionChecklistState} state\n * @param {IUpdateDatabaseSyncPayload} payload\n * @returns IActionChecklistState\n */\nconst updateDatabaseSync = (\n\tstate: IActionChecklistState,\n\tpayload: IUpdateDatabaseSyncPayload\n): IActionChecklistState => {\n\tconst { notes, priority, data: checklistCollection } = payload\n\n\treturn {\n\t\t...state,\n\t\tdatabaseSyced: true,\n\t\tnotes,\n\t\tpriority,\n\t\tchecklistCollection,\n\t}\n}\n\nexport default updateDatabaseSync\n","import { uniq } from \"lodash-es\"\nimport { IActionChecklistState, IAddNewActionItemPayload } from \"../shape\"\nimport { ActionChecklistPriorityStruct } from \"../../../data/_config/shape\"\nimport filterById from \"../../../util/filters/ById\"\nimport { newPriorityItem } from \"../../../data/ActionChecklist/_config/utilities\"\n\n/**\n * Adds a new action item and appends the id to the\n * related priority item\n *\n * @param {IActionChecklistState} state\n * @param {IAddNewActionItemPayload} payload\n * @returns IActionChecklistState\n */\nconst addNewActionItem = (\n\tstate: IActionChecklistState,\n\tpayload: IAddNewActionItemPayload\n): IActionChecklistState => {\n\tconst { checklist, priority: pID } = payload\n\n\tconst newPriority = state.priority.reduce(\n\t\t(collection: ActionChecklistPriorityStruct[], item) => {\n\t\t\treturn collection.concat(\n\t\t\t\titem.id === pID\n\t\t\t\t\t? { ...item, order: uniq([...item.order, checklist?.id || \"\"]) }\n\t\t\t\t\t: item\n\t\t\t)\n\t\t},\n\t\t[]\n\t)\n\n\tconst hasPriority = state.priority.filter(filterById(pID))\n\tif (hasPriority.length === 0) {\n\t\t// eslint-disable-next-line\n\t\tnewPriority.push({\n\t\t\t...newPriorityItem(checklist.clientId, checklist.actionContainer),\n\t\t\torder: [checklist?.id || \"\"],\n\t\t\tid: pID,\n\t\t})\n\t}\n\n\treturn {\n\t\t...state,\n\t\tchecklistCollection: [...state.checklistCollection, checklist],\n\t\tpriority: newPriority,\n\t}\n}\n\nexport default addNewActionItem\n","import { IActionChecklistState, IUpdateActionItemPayload } from \"../shape\"\nimport { ActionChecklistStruct } from \"../../../data/_config/shape\"\n\n/**\n * Updates the data for a specific action item\n *\n * @param {IActionChecklistState} state\n * @param {IUpdateActionItemPayload} payload\n * @returns IActionChecklistState\n */\nconst updateActionItem = (\n\tstate: IActionChecklistState,\n\tpayload: IUpdateActionItemPayload\n): IActionChecklistState => {\n\tconst { data, id } = payload\n\n\tconst newChecklist = state.checklistCollection.reduce(\n\t\t(checklists: ActionChecklistStruct[], current) => {\n\t\t\treturn checklists.concat(\n\t\t\t\tcurrent.id === id ? { ...current, ...data, id: current.id } : current\n\t\t\t)\n\t\t},\n\t\t[]\n\t)\n\n\treturn {\n\t\t...state,\n\t\tchecklistCollection: newChecklist,\n\t}\n}\n\nexport default updateActionItem\n","import { IActionChecklistState } from \"../shape\"\nimport { ActionChecklistPriorityStruct } from \"../../../data/_config/shape\"\n\n/**\n * Updates the priority order\n *\n * @param {IActionChecklistState} state\n * @param {ActionChecklistPriorityStruct} payload\n * @returns IActionChecklistState\n */\nconst updatePriorityOrder = (\n\tstate: IActionChecklistState,\n\tpayload: ActionChecklistPriorityStruct\n): IActionChecklistState => {\n\tconst newPriority = state.priority.reduce(\n\t\t(collection: ActionChecklistPriorityStruct[], item) => {\n\t\t\treturn collection.concat(item.id === payload.id ? payload : item)\n\t\t},\n\t\t[]\n\t)\n\n\treturn {\n\t\t...state,\n\t\tpriority: newPriority,\n\t}\n}\n\nexport default updatePriorityOrder\n","/**\n * Used with the array `filter` method, this allows you to\n * filter based on the item and value being the same\n *\n * [1, 2, 3, 4].filter(filterByEquals(4)) -> [4]\n * [1, 2, 3, 4].filter(filterByEquals(4, true)) -> [1, 2, 3]\n *\n * @param {T} val\n * @param {boolean} reject If reject is true, then it will return the opposite.\n * @returns T[]\n */\nconst filterByEquals = <T>(val: T, reject = false) => (item: T): boolean => {\n\tconst res = item === val\n\treturn reject ? !res : res\n}\n\nexport default filterByEquals\n","import { uniq } from \"lodash-es\"\nimport { IActionChecklistState, IRemoveActionItemPayload } from \"../shape\"\nimport filterById from \"../../../util/filters/ById\"\nimport { ActionChecklistPriorityStruct } from \"../../../data/_config/shape\"\nimport filterByEquals from \"../../../util/filters/ByEquals\"\n\n/**\n * Removes an action item from state and removes\n * the items id from the priority array\n *\n * @param {IActionChecklistState} state\n * @param {IRemoveActionItemPayload} payload\n * @returns IActionChecklistState\n */\nconst removeActionItem = (\n\tstate: IActionChecklistState,\n\tpayload: IRemoveActionItemPayload\n): IActionChecklistState => {\n\tconst { targetId, priorityId } = payload\n\n\tconst newChecklist = state.checklistCollection.filter(\n\t\tfilterById(targetId, true)\n\t)\n\n\tconst newPriority = state.priority.reduce(\n\t\t(collection: ActionChecklistPriorityStruct[], item) => {\n\t\t\tif (item.id === priorityId) {\n\t\t\t\tconst newOrder = item.order.filter(filterByEquals(targetId, true))\n\t\t\t\tif (newOrder.length > 0) {\n\t\t\t\t\treturn collection.concat({\n\t\t\t\t\t\t...item,\n\t\t\t\t\t\torder: uniq(newOrder),\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\treturn collection\n\t\t\t}\n\n\t\t\treturn collection.concat(item)\n\t\t},\n\t\t[]\n\t)\n\n\treturn {\n\t\t...state,\n\t\tchecklistCollection: [...newChecklist],\n\t\tpriority: newPriority,\n\t}\n}\n\nexport default removeActionItem\n","import { IActionChecklistState } from \"../shape\"\nimport { ActionChecklistNotesStruct } from \"../../../data/_config/shape\"\n\n/**\n * Adds a note to state\n *\n * @param {IActionChecklistState} state\n * @param {ActionChecklistNotesStruct} payload\n * @returns IActionChecklistState\n */\nconst addNote = (\n\tstate: IActionChecklistState,\n\tpayload: ActionChecklistNotesStruct\n): IActionChecklistState => {\n\treturn {\n\t\t...state,\n\t\tnotes: [...state.notes, payload],\n\t}\n}\n\nexport default addNote\n","import { IActionChecklistState, IUpdateNotesPayload } from \"../shape\"\nimport { ActionChecklistNotesStruct } from \"../../../data/_config/shape\"\n\n/**\n * Updates the data for a specific note\n *\n * @param {IActionChecklistState} state\n * @param {IUpdateNotesPayload} payload\n * @returns IActionChecklistState\n */\nconst updateNote = (\n\tstate: IActionChecklistState,\n\tpayload: IUpdateNotesPayload\n): IActionChecklistState => {\n\tconst { data, id } = payload\n\tconst newNotes = state.notes.reduce(\n\t\t(collection: ActionChecklistNotesStruct[], current) => {\n\t\t\treturn collection.concat(\n\t\t\t\tcurrent.id === id ? { ...current, ...data, id: current.id } : current\n\t\t\t)\n\t\t},\n\t\t[]\n\t)\n\n\treturn {\n\t\t...state,\n\t\tnotes: newNotes,\n\t}\n}\n\nexport default updateNote\n","import { IActionChecklistState } from \"../shape\"\nimport { ActionChecklistNotesId } from \"../../../data/_config/shape\"\nimport filterById from \"../../../util/filters/ById\"\n\n/**\n * Removes a note from state\n *\n * @param {IActionChecklistState} state\n * @param {ActionChecklistNotesId} payload\n * @returns IActionChecklistState\n */\nconst removeNote = (\n\tstate: IActionChecklistState,\n\tpayload: ActionChecklistNotesId\n): IActionChecklistState => {\n\tconst filteredNotes = state.notes.filter(filterById(payload, true))\n\n\treturn {\n\t\t...state,\n\t\tnotes: filteredNotes,\n\t}\n}\n\nexport default removeNote\n","import { uniq } from \"lodash-es\"\nimport {\n\tIActionChecklistState,\n\tIBulkAddActionItemsPayload,\n\tPossibleActionItems,\n} from \"../shape\"\nimport {\n\tActionChecklistPriorityStruct,\n\tClientId,\n\tActionChecklistPriorityId,\n\tActionChecklistId,\n} from \"../../../data/_config/shape\"\nimport filterById from \"../../../util/filters/ById\"\nimport { newPriorityItem } from \"../../../data/ActionChecklist/_config/utilities\"\n\n/**\n * Append a new priority item to state if it can't be found\n * OR\n * Append the additional order items to the priority it can find\n *\n * @param {ActionChecklistPriorityStruct[]} priorities\n * @param {ClientId} client\n * @param {PossibleActionItems} container\n * @param {ActionChecklistId[]} order\n * @param {ActionChecklistPriorityId} priorityId\n * @returns ActionChecklistPriorityStruct[]\n */\nconst appendOrCreatePriority = (\n\tpriorities: ActionChecklistPriorityStruct[],\n\tclient: ClientId,\n\tcontainer: PossibleActionItems,\n\torder: ActionChecklistId[],\n\tpriorityId: ActionChecklistPriorityId\n): ActionChecklistPriorityStruct[] => {\n\tconst canFind = priorities.find(filterById(priorityId))\n\tif (typeof canFind !== \"undefined\") {\n\t\treturn priorities.reduce(\n\t\t\t(collection: ActionChecklistPriorityStruct[], current) => {\n\t\t\t\treturn collection.concat(\n\t\t\t\t\tcurrent.id === priorityId\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t...current,\n\t\t\t\t\t\t\t\torder: uniq([...current.order, ...order]),\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t: current\n\t\t\t\t)\n\t\t\t},\n\t\t\t[]\n\t\t)\n\t}\n\treturn priorities.concat({\n\t\t...newPriorityItem(client, container),\n\t\tid: priorityId,\n\t\torder: uniq(order),\n\t})\n}\n\n/**\n * Action to add actions in bulk to the current state\n *\n * @param {IActionChecklistState} state\n * @param {IBulkAddActionItemsPayload} payload\n * @returns IActionChecklistState\n */\nconst bulkAddActionItem = (\n\tstate: IActionChecklistState,\n\tpayload: IBulkAddActionItemsPayload\n): IActionChecklistState => {\n\tconst { items, priorityId } = payload\n\n\tconst newChecklist = [...state.checklistCollection, ...items]\n\tconst additionalOrders = items.reduce((arr: string[], item) => {\n\t\treturn typeof item.id === \"string\" ? [...arr, item.id] : arr\n\t}, [])\n\n\tconst newPriority = appendOrCreatePriority(\n\t\tstate.priority,\n\t\titems[0].clientId,\n\t\titems[0].actionContainer,\n\t\tadditionalOrders,\n\t\tpriorityId\n\t)\n\n\treturn {\n\t\t...state,\n\t\tchecklistCollection: newChecklist,\n\t\tpriority: newPriority,\n\t}\n}\n\nexport default bulkAddActionItem\n","import { Reducer } from \"react\"\nimport {\n\tIActionChecklistState,\n\tActionChecklistReducerActions,\n\tActionChecklistActionTypes,\n} from \"./shape\"\nimport {\n\tchangeHideCompleted,\n\tupdateDatabaseSync,\n\taddNewActionItem,\n\tupdateActionItem,\n\tupdatePriorityOrder,\n\tremoveActionItem,\n\taddNote,\n\tupdateNote,\n\tremoveNote,\n} from \"./actions\"\nimport bulkAddActionItem from \"./actions/bulkAddActionItems\"\n\n/**\n * Reducer method for the Action Checklist context\n *\n * @param {IActionChecklistState} state\n * @param {ActionChecklistReducerActions} action\n * @returns {IActionChecklistState}\n */\nconst ActionChecklistReducer: Reducer<\n\tIActionChecklistState,\n\tActionChecklistReducerActions\n> = (\n\tstate: IActionChecklistState,\n\taction: ActionChecklistReducerActions\n): IActionChecklistState => {\n\tswitch (action.type) {\n\t\tcase ActionChecklistActionTypes.ChangeHideCompleted: {\n\t\t\treturn changeHideCompleted(state, action.payload)\n\t\t}\n\t\tcase ActionChecklistActionTypes.UpdateDatabaseSync: {\n\t\t\treturn updateDatabaseSync(state, action.payload)\n\t\t}\n\t\tcase ActionChecklistActionTypes.AddNewActionItem: {\n\t\t\treturn addNewActionItem(state, action.payload)\n\t\t}\n\t\tcase ActionChecklistActionTypes.UpdateActionItem: {\n\t\t\treturn updateActionItem(state, action.payload)\n\t\t}\n\t\tcase ActionChecklistActionTypes.UpdatePriorityOrder: {\n\t\t\treturn updatePriorityOrder(state, action.payload)\n\t\t}\n\t\tcase ActionChecklistActionTypes.RemoveActionItem: {\n\t\t\treturn removeActionItem(state, action.payload)\n\t\t}\n\t\tcase ActionChecklistActionTypes.AddNotes: {\n\t\t\treturn addNote(state, action.payload)\n\t\t}\n\t\tcase ActionChecklistActionTypes.UpdateNotes: {\n\t\t\treturn updateNote(state, action.payload)\n\t\t}\n\t\tcase ActionChecklistActionTypes.RemoveNote: {\n\t\t\treturn removeNote(state, action.payload)\n\t\t}\n\t\tcase ActionChecklistActionTypes.BulkAddActionItems: {\n\t\t\treturn bulkAddActionItem(state, action.payload)\n\t\t}\n\t\tdefault: {\n\t\t\treturn state\n\t\t}\n\t}\n}\n\nexport default ActionChecklistReducer\n","import React, {\n\tReactElement,\n\tuseReducer,\n\tReducer,\n\tuseMemo,\n\tReactNode,\n\tuseEffect,\n\tDispatch,\n\tuseContext,\n} from \"react\"\nimport {\n\tIActionChecklistState,\n\tActionChecklistReducerActions,\n\tActionChecklistActionTypes,\n\tPossibleActionItems,\n} from \"./shape\"\nimport ActionChecklistReducer from \"./reducer\"\nimport ActionChecklistContext, { defaultActionChecklistState } from \"./context\"\nimport ActionChecklistUseCase from \"../../data/ActionChecklist/ChecklistLogic\"\nimport ActionPriorityUseCase from \"../../data/ActionChecklist/PriorityLogic\"\nimport {\n\tActionChecklistStruct,\n\tActionChecklistPriorityStruct,\n\tClientId,\n\tActionChecklistNotesStruct,\n} from \"../../data/_config/shape\"\nimport { ClientContext } from \"../client\"\nimport {\n\tnewChecklistItem,\n\tnewPriorityItem,\n} from \"../../data/ActionChecklist/_config/utilities\"\nimport filterByActionContainer from \"../../util/filters/ByActionContainer\"\nimport ActionNotesUseCase from \"../../data/ActionChecklist/NotesLogic\"\n\ntype SyncResponse = [\n\tActionChecklistStruct[],\n\tActionChecklistPriorityStruct[],\n\tActionChecklistNotesStruct[]\n]\n\n/**\n * Checks if a container has data and adds it into a db,\n * if required\n *\n * @param {ActionChecklistStruct[]} curData\n * @param {ActionChecklistPriorityStruct[]} curPriority\n * @param {PossibleActionItems} action\n * @param {ClientId} clientId\n * @returns Promise<SyncResponse>\n */\nconst createChecklistIfNeeded = async (\n\tcurData: ActionChecklistStruct[],\n\tcurPriority: ActionChecklistPriorityStruct[],\n\tcurNotes: ActionChecklistNotesStruct[],\n\taction: PossibleActionItems,\n\tclientId: ClientId\n): Promise<SyncResponse> => {\n\tconst find = curData.filter(filterByActionContainer(action))\n\n\tif (find.length === 0) {\n\t\tconst data = [...curData]\n\t\tconst priority = [...curPriority]\n\t\tconst newItem: ActionChecklistStruct = newChecklistItem(clientId, action)\n\n\t\tconst id = await ActionChecklistUseCase.create(newItem)\n\t\tconst newPriority: ActionChecklistPriorityStruct = newPriorityItem(\n\t\t\tclientId,\n\t\t\taction\n\t\t)\n\n\t\tconst priorityId = await ActionPriorityUseCase.create({\n\t\t\t...newPriority,\n\t\t\torder: [id],\n\t\t})\n\t\tconst priorityWithItem = priority.concat({\n\t\t\t...newPriority,\n\t\t\tid: priorityId,\n\t\t\torder: [id],\n\t\t})\n\t\tawait ActionPriorityUseCase.update(priorityId, {\n\t\t\t...newPriority,\n\t\t\torder: [id],\n\t\t})\n\t\tconst dataWithItem = data.concat({ ...newItem, id })\n\n\t\treturn [dataWithItem, priorityWithItem, curNotes]\n\t}\n\n\treturn [curData, curPriority, curNotes]\n}\n\n/**\n * Complete the database sync. This will check if there\n * are any items in cash IN/OUT actions and if there isn't,\n * then create and update the state\n *\n * @param {Dispatch<ActionChecklistReducerActions>} dispatch\n * @param {ClientId} clientId\n * @returns Promise<void>\n */\nconst completeSyncing = (\n\tdispatch: Dispatch<ActionChecklistReducerActions>,\n\tclientId: ClientId\n) => async (response: SyncResponse): Promise<void> => {\n\tconst [data, priority, notes] = response\n\tconst CIA = await createChecklistIfNeeded(\n\t\tdata,\n\t\tpriority,\n\t\tnotes,\n\t\t\"cashInActions\",\n\t\tclientId\n\t)\n\tconst COA = await createChecklistIfNeeded(\n\t\tCIA[0],\n\t\tCIA[1],\n\t\tCIA[2],\n\t\t\"cashOutActions\",\n\t\tclientId\n\t)\n\n\tdispatch({\n\t\ttype: ActionChecklistActionTypes.UpdateDatabaseSync,\n\t\tpayload: {\n\t\t\tdata: [...COA[0]],\n\t\t\tpriority: [...COA[1]],\n\t\t\tnotes: [...COA[2]],\n\t\t},\n\t})\n}\n\n/**\n * Context state provider element\n *\n * @param {ReactNode} {children}\n * @returns ReactElement\n */\nconst ActionChecklistProvider = (props: {\n\tchildren: ReactNode\n}): ReactElement => {\n\tconst {\n\t\tstate: { currentClient },\n\t} = useContext(ClientContext)\n\n\ttype ACReducer = Reducer<IActionChecklistState, ActionChecklistReducerActions>\n\n\tconst [state, dispatch] = useReducer<ACReducer>(\n\t\tActionChecklistReducer,\n\t\tdefaultActionChecklistState\n\t)\n\n\tuseEffect(() => {\n\t\tif (currentClient?.id) {\n\t\t\t// Get all checklist and priority items and\n\t\t\t// then complete the sync with that data\n\t\t\tPromise.all([\n\t\t\t\tActionChecklistUseCase.findByClient(currentClient.id),\n\t\t\t\tActionPriorityUseCase.findByClient(currentClient.id),\n\t\t\t\tActionNotesUseCase.findByClient(currentClient.id),\n\t\t\t]).then(completeSyncing(dispatch, currentClient.id))\n\t\t}\n\t}, [currentClient])\n\n\tconst value = useMemo(\n\t\t(): IActionChecklistState => ({\n\t\t\t...state,\n\t\t\tdispatch,\n\t\t}),\n\t\t[state]\n\t)\n\n\t// eslint-disable-next-line react/jsx-props-no-spreading\n\treturn <ActionChecklistContext.Provider value={value} {...props} />\n}\n\nexport default ActionChecklistProvider\n","import ILogicLayer from \"../_config/logicLayer\"\nimport ActionChecklistDB from \"./ActionChecklistDatabase\"\nimport {\n\tActionChecklistNotesStruct,\n\tBaseActionChecklistNotesStruct,\n\tActionChecklistNotesId,\n} from \"../_config/shape\"\n\n/**\n * Logic implementation for note items for the\n * Action Checklist databasea\n *\n * @class ActionChecklistNotesLogic\n * @extends {ILogicLayer<ActionChecklistNotesStruct, BaseActionChecklistNotesStruct>}\n */\nclass ActionChecklistNotesLogic extends ILogicLayer<\n\tActionChecklistNotesStruct,\n\tBaseActionChecklistNotesStruct\n> {\n\t/**\n\t * Creates an instance of ActionChecklistNotesLogic.\n\t *\n\t * @memberof ActionChecklistNotesLogic\n\t */\n\tconstructor() {\n\t\tsuper(ActionChecklistDB, ActionChecklistDB.notes)\n\t}\n\n\t/**\n\t * Default put functionality for the notes table\n\t *\n\t * @param {ActionChecklistNotesStruct} data\n\t * @returns {Promise<ActionChecklistNotesId>}\n\t * @memberof ActionChecklistNotesLogic\n\t */\n\tput(data: ActionChecklistNotesStruct): Promise<ActionChecklistNotesId> {\n\t\treturn this.database.transaction(\"rw\", this.table.name, () => {\n\t\t\treturn this.table.put(data)\n\t\t})\n\t}\n}\n\n// Creates a instance of the logic class and exports the instance\nconst ActionNotesUseCase = new ActionChecklistNotesLogic()\n\nexport default ActionNotesUseCase\n","/* eslint-disable import/prefer-default-export */\nimport {\n\tIAnswerTheme,\n\tQuestionOptions,\n\tQuestionOptionsRecord,\n\tIQuestionStructure,\n} from \"./shape\"\nimport findObjectIndexByValue from \"../../../util/array/findObjectIndexByValue\"\n\n/**\n * Gets the theme for a specific answer type\n *\n * @param {QuestionOptions} answer Answer needed\n * @param {IAnswerTheme[]} options A config object with the answer theme\n * @returns IAnswerTheme\n */\nexport const getOptionByAnswer = (\n\tanswer: QuestionOptions,\n\toptions: IAnswerTheme[]\n): IAnswerTheme => {\n\treturn options[findObjectIndexByValue(options, \"answer\", answer)]\n}\n\n/**\n * Merges a list of questions with a set of answer options\n *\n * @param {string[]} questions Questions to merge with the option set\n * @param {QuestionOptionsRecord} options object of options\n * @returns {IQuestionStructure[]}\n */\nexport const questionOptionsMap = (\n\tquestions: string[],\n\toptions: QuestionOptionsRecord\n): IQuestionStructure[] => {\n\treturn questions.map(\n\t\t(q: string): IQuestionStructure => ({\n\t\t\tquestion: q,\n\t\t\toptions,\n\t\t})\n\t)\n}\n","import { PossibleActionItems } from \"../../state/action-checklist/shape\"\nimport { WithActionContainer } from \"../../data/_config/shape\"\n\n/**\n * Used with the array `filter` method, this allows you to\n * filter a object using the `actionContainer` property.\n * The objects interface must use `WithActionContainer`\n * to work\n *\n * [{actionContainer: \"...\"}, ...].filter(filterByActionContainer(\"...\"))\n *\n * @param {PossibleActionItems} container\n * @returns WithActionContainer[]\n */\nconst filterByActionContainer = (container: PossibleActionItems) => (\n\titem: WithActionContainer\n): boolean => {\n\treturn item.actionContainer === container\n}\n\nexport default filterByActionContainer\n","import React, { ReactElement, MouseEvent } from \"react\"\nimport DeleteIcon from \"@material-ui/icons/Delete\"\nimport { Tooltip, IconButton } from \"@material-ui/core\"\n\n/**\n * Prop definition for the IconDeleteButton\n *\n * @export\n * @interface ButtonProps\n */\nexport interface ButtonProps {\n\tonClick: (e: MouseEvent<HTMLButtonElement>) => void\n}\n\n/**\n * A abstraction for a Icon button used for deleting\n *\n * @export\n * @param {ButtonProps} {\n * \tonClick,\n * }\n * @returns {ReactElement}\n */\nexport default function IconDeleteButton({\n\tonClick,\n}: ButtonProps): ReactElement {\n\treturn (\n\t\t<Tooltip title=\"Delete\">\n\t\t\t<IconButton onClick={onClick}>\n\t\t\t\t<DeleteIcon />\n\t\t\t\t<span className=\"MuiTypography-srOnly\">Delete data</span>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t)\n}\n","import { Machine } from \"xstate\"\n\ninterface Schema {\n\tstates: {\n\t\tloading: {}\n\t\tsuccess: {}\n\t\tfailure: {}\n\t}\n}\ntype Events = { type: \"RESOLVE\" } | { type: \"REJECT\" } | { type: \"RETRY\" }\n\nconst fetchMachine = Machine<null, Schema, Events>({\n\tid: \"fetch\",\n\tinitial: \"loading\",\n\tstates: {\n\t\tloading: {\n\t\t\ton: {\n\t\t\t\tRESOLVE: \"success\",\n\t\t\t\tREJECT: \"failure\",\n\t\t\t},\n\t\t},\n\t\tsuccess: {\n\t\t\ton: {\n\t\t\t\tREJECT: \"failure\",\n\t\t\t},\n\t\t},\n\t\tfailure: {\n\t\t\ton: {\n\t\t\t\tRETRY: {\n\t\t\t\t\ttarget: \"loading\",\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n})\n\nexport default fetchMachine\n","import { Dispatch } from \"react\"\nimport {\n\tClientActionTypes,\n\tIClientReducerAction,\n} from \"../../state/client/client-outline\"\nimport { ClientDataStruct } from \"../_config/shape\"\nimport ClientUseCase from \"./ClientLogic\"\n\n/**\n * Method for adding a new client to the application\n *\n * @param {Dispatch<IClientReducerAction>} dispatch Dispatch method for the client state\n * @param {IBaseClient} client client to be added\n * @returns Promise<void>\n */\nconst addClient = async (\n\tdispatch: Dispatch<IClientReducerAction>,\n\tclient: ClientDataStruct\n): Promise<boolean> => {\n\tconst key = await ClientUseCase.create({\n\t\tname: client.name,\n\t})\n\n\tconst newclient: ClientDataStruct = {\n\t\t...client,\n\t\tid: key,\n\t}\n\n\tdispatch({\n\t\ttype: ClientActionTypes.AddClient,\n\t\tpayload: newclient,\n\t})\n\n\tdispatch({\n\t\ttype: ClientActionTypes.ChangeCurrentClient,\n\t\t// Defined on line 26\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\tpayload: newclient.id!,\n\t})\n\n\treturn true\n}\n\nexport default addClient\n","import React, {\n\tReactElement,\n\tuseContext,\n\tuseState,\n\tuseEffect,\n\tChangeEvent,\n} from \"react\"\nimport { TextField } from \"@material-ui/core\"\nimport { useFormik } from \"formik\"\nimport { useHistory } from \"react-router-dom\"\nimport { v4 as uuidv4 } from \"uuid\"\nimport addClient from \"../../../data/client/addClient\"\nimport { ClientContext } from \"../../../state/client\"\nimport { INCFormValues, INCFormErrors } from \"./_config/shape\"\nimport { PrivateRoutes } from \"../../../util/routes/routes\"\n\nconst MAX_LENGTH = 40\n\ninterface NewClientFormProps {\n\tcloseDialog: (cb: () => void) => void\n}\n\n/**\n * Form used to register a new client. Uses Formik\n *\n * @returns ReactElement\n */\nconst NewClientForm = ({ closeDialog }: NewClientFormProps): ReactElement => {\n\tconst { dispatch } = useContext(ClientContext)\n\tconst initialValues: INCFormValues = {\n\t\tbusinessName: \"\",\n\t}\n\tconst history = useHistory()\n\tconst [characters, setCharacters] = useState(0)\n\n\t// Defines the Formik form\n\tconst form = useFormik({\n\t\tinitialValues,\n\t\tvalidate: (values): INCFormErrors => {\n\t\t\tconst errors: INCFormErrors = {}\n\n\t\t\t// Minor validation\n\t\t\tif (values.businessName === \"\") {\n\t\t\t\t// eslint-disable-next-line\n\t\t\t\terrors.businessName = \"Please enter a business name\"\n\t\t\t}\n\n\t\t\treturn errors\n\t\t},\n\t\tonSubmit: async (values) => {\n\t\t\t// Adds a client to the db + state\n\t\t\tawait addClient(dispatch, {\n\t\t\t\tid: uuidv4(),\n\t\t\t\tname: values.businessName,\n\t\t\t})\n\n\t\t\t// resets the form\n\t\t\tform.resetForm()\n\t\t\tcloseDialog((): void => {\n\t\t\t\t// eslint-disable-next-line\n\t\t\t\thistory.push(PrivateRoutes.CoachingKit)\n\t\t\t})\n\t\t},\n\t})\n\n\tfunction handleChange(e: ChangeEvent<HTMLInputElement>): void {\n\t\tif (e.target.value.length > MAX_LENGTH) {\n\t\t\te.preventDefault()\n\t\t\treturn\n\t\t}\n\n\t\tform.setFieldValue(\"businessName\", e.target.value)\n\t}\n\n\tuseEffect(() => {\n\t\tsetCharacters(form.values.businessName.length)\n\t}, [form.values.businessName])\n\n\t/**\n\t * Checks if there is a error for a specific field\n\t *\n\t * @param {INCFormErrors} errors Form error object\n\t * @param {keyof INCFormErrors} key Error item to look for\n\t * @returns boolean\n\t */\n\tconst hasError = (\n\t\terrors: INCFormErrors,\n\t\tkey: keyof INCFormErrors\n\t): boolean => {\n\t\treturn typeof errors[key] !== \"undefined\" && errors[key] !== \"\"\n\t}\n\n\treturn (\n\t\t<form\n\t\t\tnoValidate\n\t\t\tautoComplete=\"off\"\n\t\t\tonSubmit={form.handleSubmit}\n\t\t\tid=\"add-new-business-form\"\n\t\t>\n\t\t\t<TextField\n\t\t\t\tid=\"businessName\"\n\t\t\t\tname=\"businessName\"\n\t\t\t\tlabel=\"Business name\"\n\t\t\t\tvariant=\"outlined\"\n\t\t\t\tfullWidth\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={form.values.businessName}\n\t\t\t\terror={hasError(form.errors, \"businessName\")}\n\t\t\t\thelperText={\n\t\t\t\t\thasError(form.errors, \"businessName\")\n\t\t\t\t\t\t? form.errors.businessName\n\t\t\t\t\t\t: `${characters}/${MAX_LENGTH}`\n\t\t\t\t}\n\t\t\t\tautoFocus\n\t\t\t/>\n\t\t</form>\n\t)\n}\n\nexport default NewClientForm\n","import React, { ReactElement, useState } from \"react\"\nimport {\n\tButton,\n\tDialog,\n\tDialogTitle,\n\tDialogContent,\n\tDialogActions,\n\tDialogContentText,\n\tmakeStyles,\n\tButtonProps,\n\tButtonClassKey,\n\tStandardProps,\n\tTypography,\n} from \"@material-ui/core\"\nimport NewClientForm from \"../../components/Forms/NewClient\"\nimport Spacer from \"../../components/Spacer\"\n\n// New client styling\nconst useNCDStyles = makeStyles((theme) => ({\n\tcontent: {\n\t\tborderStyle: \"solid\",\n\t\tborderColor: theme.palette.divider,\n\t\tborderWidth: \"1px 0 1px 0\",\n\t\tmarginTop: theme.spacing(2),\n\t\tpadding: `${theme.spacing(2)}px ${theme.spacing(3)}px`,\n\t\t\"& p\": {\n\t\t\tmargin: 0,\n\t\t},\n\t},\n}))\n\n/**\n * Prop definition for the `<NewClientDialog>` component\n *\n * @interface INewClientDialogProps\n * @extends {StandardProps<ButtonProps, ButtonClassKey>}\n */\ninterface INewClientDialogProps\n\textends StandardProps<ButtonProps, ButtonClassKey> {\n\ttriggerText: string\n}\n\n/**\n * Modal used when creating a new client. Props extends the default\n * Button props and are applied to the trigger\n *\n * @param {INewClientDialogProps} {props}\n * @returns ReactElement\n */\nconst NewClientDialog = ({\n\ttriggerText,\n\t// eslint-disable-next-line\n\t...props\n}: INewClientDialogProps): ReactElement => {\n\tconst [open, setOpen] = useState<boolean>(false)\n\tconst styles = useNCDStyles()\n\n\t/**\n\t * Handles the opening of the modal\n\t *\n\t * @returns void\n\t */\n\tconst handleOpen = (): void => {\n\t\tsetOpen(true)\n\t}\n\n\t/**\n\t * Handles the closing of the modal\n\t *\n\t * @returns void\n\t */\n\tconst handleClose = (): void => {\n\t\tsetOpen(false)\n\t}\n\n\tconst onFormCloseTrigger = (cb: () => void): void => {\n\t\thandleClose()\n\t\tcb()\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Button\n\t\t\t\tcolor=\"primary\"\n\t\t\t\tvariant=\"contained\"\n\t\t\t\tsize=\"large\"\n\t\t\t\tonClick={handleOpen}\n\t\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t\t{...props}\n\t\t\t>\n\t\t\t\t{triggerText}\n\t\t\t</Button>\n\t\t\t<Dialog\n\t\t\t\topen={open}\n\t\t\t\tonClose={handleClose}\n\t\t\t\taria-labelledby=\"new-client-dialog-title\"\n\t\t\t\tfullWidth\n\t\t\t\tmaxWidth=\"sm\"\n\t\t\t>\n\t\t\t\t<DialogTitle id=\"new-client-dialog-title\">\n\t\t\t\t\tFirst, add a business name.\n\t\t\t\t</DialogTitle>\n\t\t\t\t<DialogContent>\n\t\t\t\t\t<Typography>\n\t\t\t\t\t\tIt can be your business name or something memorable. If you have\n\t\t\t\t\t\tmultiple businesses, add them later.{\" \"}\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Spacer />\n\t\t\t\t\t<NewClientForm closeDialog={onFormCloseTrigger} />\n\t\t\t\t</DialogContent>\n\t\t\t\t<DialogContent className={styles.content}>\n\t\t\t\t\t<DialogContentText>\n\t\t\t\t\t\tRemember: The kit does not save information between sessions. Use\n\t\t\t\t\t\tthe export function regularly to save your progress.\n\t\t\t\t\t</DialogContentText>\n\t\t\t\t</DialogContent>\n\t\t\t\t<DialogActions>\n\t\t\t\t\t<Button onClick={handleClose} color=\"primary\">\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tform=\"add-new-business-form\"\n\t\t\t\t\t>\n\t\t\t\t\t\tAdd business\n\t\t\t\t\t</Button>\n\t\t\t\t</DialogActions>\n\t\t\t</Dialog>\n\t\t</>\n\t)\n}\n\nexport default NewClientDialog\n","import { CanvasType } from \"../../../data/_config/shape\"\n\n/**\n * Checks if a type is in plan or forecast\n *\n * @export\n * @param {CanvasType} type\n * @returns {boolean}\n */\nexport default function inPlanOrForecast(type: CanvasType): boolean {\n\treturn [\"plan\", \"forecast\"].indexOf(type) !== -1\n}\n","import React, { ReactElement, useState, useCallback, useEffect } from \"react\"\nimport {\n\tDialog,\n\tDialogTitle,\n\tTypography,\n\tDialogActions,\n\tDialogContent,\n\tButton,\n} from \"@material-ui/core\"\nimport { useMachine } from \"@xstate/react\"\nimport { useHistory, useParams } from \"react-router-dom\"\nimport { useFormik } from \"formik\"\nimport { omit } from \"lodash-es\"\nimport { isValid } from \"date-fns\"\nimport fetchMachine from \"../../components/Forms/CFC/__config/machine\"\nimport useCurrentClient from \"../../state/client/useCurrentClient\"\nimport { CFCStruct, CFCPanelSlice, CanvasType } from \"../../data/_config/shape\"\nimport CFCUseCase from \"../../data/CFC/CFCLogic\"\nimport DataNotFound from \"../../components/CFC/DataNotFound\"\nimport Loading from \"../../components/Loading\"\nimport { CanvasTitle, ConfigPanel } from \"../../components/CFC\"\nimport { newTimestamp } from \"../../util/dates\"\nimport Spacer from \"../../components/Spacer\"\nimport changeDate, {\n\tCanvasDateKeys,\n} from \"../../components/Forms/CFC/changeDate\"\nimport inPlanOrForecast from \"../../components/Forms/CFC/inPlanOrForecast\"\nimport { calcClosingBalance } from \"../../state/CFC/accumulators\"\nimport createURLParams from \"../../components/Forms/CFC/createURLParams\"\nimport { routeVarReplacement, PrivateRoutes } from \"../../util/routes/routes\"\nimport { performDupFind } from \"../../components/CFC/__config/utilities\"\nimport { DuplicateCanvasError } from \"../../components/CFC/ConfigPanel\"\n\n/**\n * Prop definition for the CopyCanvasDialog component\n *\n * @interface CopyCanvasDialogProps\n */\ninterface CopyCanvasDialogProps {\n\topen: boolean\n\tonClose: () => void\n}\n\n/**\n * Dialog component to handle copying of a canvas\n *\n * @export\n * @returns {ReactElement}\n */\nexport default function CopyCanvasDialog({\n\topen,\n\tonClose,\n}: CopyCanvasDialogProps): ReactElement {\n\t// #region State Management\n\tconst [stateMachine, changeState] = useMachine(fetchMachine)\n\tconst [useCustomTitle, setUseCustomTitle] = useState(false)\n\tconst history = useHistory()\n\tconst { id } = useParams()\n\tconst [currentClient] = useCurrentClient()\n\tconst [canvasData, setCanvasData] = useState<CFCStruct>()\n\tconst [isDuplicate, setIsDuplicate] = useState(false)\n\t// #endregion\n\n\t// #region Formik\n\t/**\n\t * Checks if the opening balance should be replaced\n\t *\n\t * @param {CanvasType} oldType\n\t * @param {CanvasType} type\n\t * @returns {boolean}\n\t */\n\tfunction replaceOpening(oldType: CanvasType, type: CanvasType): boolean {\n\t\treturn !inPlanOrForecast(oldType) && inPlanOrForecast(type)\n\t}\n\n\tconst {\n\t\tsetValues,\n\t\thandleChange,\n\t\tvalues,\n\t\thandleSubmit,\n\t\tsetFieldValue,\n\t} = useFormik<CFCPanelSlice>({\n\t\tinitialValues: {\n\t\t\tcanvasTitle: \"\",\n\t\t\tcanvasType: \"review\",\n\t\t\tcanvasTimeFrame: \"biannually\",\n\t\t\tcanvasStartDate: new Date(),\n\t\t\tcanvasEndDate: new Date(),\n\t\t},\n\t\tonSubmit: async (formValues: CFCPanelSlice) => {\n\t\t\tif (canvasData && currentClient?.id) {\n\t\t\t\t// Merge the form and canvas data\n\t\t\t\tconst data: CFCStruct = {\n\t\t\t\t\t...canvasData,\n\t\t\t\t\t...formValues,\n\t\t\t\t\topeningBalance: replaceOpening(\n\t\t\t\t\t\tcanvasData.canvasType,\n\t\t\t\t\t\tformValues.canvasType\n\t\t\t\t\t)\n\t\t\t\t\t\t? calcClosingBalance(canvasData)\n\t\t\t\t\t\t: canvasData.openingBalance,\n\t\t\t\t\tcreatedAt: newTimestamp(),\n\t\t\t\t\tcanvasTitle: useCustomTitle ? formValues.canvasTitle : \"\",\n\t\t\t\t}\n\t\t\t\t// remove the id & clientid field form data\n\t\t\t\tconst cleaned = omit(data, [\"id\"])\n\t\t\t\t// create the new canvas\n\t\t\t\tconst newCanvasId = await CFCUseCase.create(cleaned)\n\t\t\t\t// redirect to the edit page for the new canvas\n\t\t\t\tconst query = createURLParams(cleaned, useCustomTitle)\n\t\t\t\t// eslint-disable-next-line\n\t\t\t\thistory.push(\n\t\t\t\t\t`${routeVarReplacement(PrivateRoutes.CFCEdit, [\n\t\t\t\t\t\t[\":id\", `${newCanvasId}`],\n\t\t\t\t\t])}?${query}`\n\t\t\t\t)\n\t\t\t\t// close the modal\n\t\t\t\tonClose()\n\t\t\t}\n\t\t},\n\t})\n\n\tuseEffect(() => {\n\t\tif (!useCustomTitle) {\n\t\t\tsetFieldValue(\"canvasTitle\", \"\")\n\t\t}\n\t}, [useCustomTitle, setFieldValue])\n\t// #endregion\n\n\t// #region Data Fetching\n\tconst fetchCanvasData = useCallback(async () => {\n\t\tif (currentClient?.id) {\n\t\t\t// fetches the data\n\t\t\tconst data = await CFCUseCase.findById(id)\n\t\t\t// If it can't be found move to reject\n\t\t\tif (!data) {\n\t\t\t\tchangeState(\"REJECT\")\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\t// set the canvas data and the new form values\n\t\t\tsetCanvasData(data)\n\t\t\tsetValues({\n\t\t\t\tcanvasTitle: data.canvasTitle,\n\t\t\t\tcanvasType: data.canvasType,\n\t\t\t\tcanvasTimeFrame: data.canvasTimeFrame,\n\t\t\t\tcanvasStartDate: data.canvasStartDate,\n\t\t\t\tcanvasEndDate: data.canvasEndDate,\n\t\t\t})\n\n\t\t\tconst isDup = await performDupFind(data, currentClient.id, useCustomTitle)\n\t\t\tsetIsDuplicate(isDup !== false)\n\n\t\t\t// check if the canvas is using a custom title\n\t\t\tif (data.canvasTitle !== \"\") {\n\t\t\t\tsetUseCustomTitle(true)\n\t\t\t}\n\t\t\t// Move to resolve\n\t\t\tchangeState(\"RESOLVE\")\n\t\t}\n\t}, [currentClient, changeState, id, setValues, useCustomTitle])\n\n\tuseEffect(() => {\n\t\t// If component moves to `open` fetch the new data\n\t\tif (open) {\n\t\t\tfetchCanvasData()\n\t\t}\n\t}, [fetchCanvasData, open])\n\t// #endregion\n\n\t// #region Form Change Events\n\tconst checkDuplicate = useCallback(async () => {\n\t\tif (currentClient?.id) {\n\t\t\tconst isDup = await performDupFind(\n\t\t\t\tvalues,\n\t\t\t\tcurrentClient.id,\n\t\t\t\tuseCustomTitle\n\t\t\t)\n\t\t\tsetIsDuplicate(isDup !== false)\n\t\t}\n\t}, [values, currentClient, useCustomTitle])\n\n\tuseEffect(() => {\n\t\tcheckDuplicate()\n\t}, [checkDuplicate])\n\n\tfunction disableSave(): boolean {\n\t\treturn (\n\t\t\t!isValid(values.canvasStartDate) ||\n\t\t\t!isValid(values.canvasEndDate) ||\n\t\t\tisDuplicate ||\n\t\t\t(useCustomTitle && values.canvasTitle === \"\")\n\t\t)\n\t}\n\n\t/**\n\t * A custom change handler for the datepicker\n\t *\n\t * @template K\n\t * @param {K} k\n\t * @param {BaseCFCStruct[K]} v\n\t */\n\tconst changeDateValue = (k: CanvasDateKeys, v: Date): void => {\n\t\tconst { canvasStartDate, canvasEndDate } = changeDate<CFCPanelSlice>(\n\t\t\tk,\n\t\t\tv,\n\t\t\tvalues\n\t\t)\n\n\t\t// Sets the field value\n\t\tsetFieldValue(\"canvasStartDate\", canvasStartDate, false)\n\t\tsetFieldValue(\"canvasEndDate\", canvasEndDate, false)\n\t}\n\n\tuseEffect(() => {\n\t\tchangeDateValue(\"canvasStartDate\", values.canvasStartDate)\n\t}, [values.canvasTimeFrame, values.canvasStartDate])\n\t// #endregion\n\n\t// #region Component rendering\n\t/**\n\t * Renders the component based on the state machine state\n\t *\n\t * @returns {ReactElement}\n\t */\n\tfunction renderForStateMachine(): ReactElement {\n\t\tswitch (stateMachine.value) {\n\t\t\tcase \"failure\":\n\t\t\t\treturn <DataNotFound />\n\t\t\tcase \"success\":\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Typography component=\"em\">\n\t\t\t\t\t\t\tIf you copy to a Plan or Forecast canvas, your closing balance\n\t\t\t\t\t\t\twill be your opening balance.\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Typography component=\"em\">\n\t\t\t\t\t\t\tAll your figures will be copied to a new Canvas.\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Spacer />\n\t\t\t\t\t\t<CanvasTitle\n\t\t\t\t\t\t\ttype={values.canvasType}\n\t\t\t\t\t\t\ttimeframe={values.canvasTimeFrame}\n\t\t\t\t\t\t\tstartDate={values.canvasStartDate}\n\t\t\t\t\t\t\tendDate={values.canvasEndDate}\n\t\t\t\t\t\t\tcustomTitle={values.canvasTitle}\n\t\t\t\t\t\t\tuseCustomTitle={useCustomTitle}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ConfigPanel\n\t\t\t\t\t\t\tcanvasTypeValue={values.canvasType}\n\t\t\t\t\t\t\tcanvasTimeframeValue={values.canvasTimeFrame}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tstartDate={values.canvasStartDate}\n\t\t\t\t\t\t\tendDate={values.canvasEndDate}\n\t\t\t\t\t\t\tonDateChange={changeDateValue}\n\t\t\t\t\t\t\tcustomTitle={values.canvasTitle}\n\t\t\t\t\t\t\tchangeCheck={(e: InputChange): void => {\n\t\t\t\t\t\t\t\tsetUseCustomTitle(e.target.checked)\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tuseCustomTitle={useCustomTitle}\n\t\t\t\t\t\t\twrapped={false}\n\t\t\t\t\t\t\tshowDuplicateError={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{isDuplicate && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Spacer />\n\t\t\t\t\t\t\t\t<DuplicateCanvasError />\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t)\n\t\t\tcase \"loading\":\n\t\t\tdefault:\n\t\t\t\treturn <Loading />\n\t\t}\n\t}\n\n\treturn (\n\t\t<Dialog\n\t\t\topen={open}\n\t\t\tonClose={onClose}\n\t\t\taria-labelledby=\"copy-canvas-dialog-title\"\n\t\t\tfullWidth\n\t\t\tmaxWidth=\"md\"\n\t\t>\n\t\t\t<DialogTitle id=\"copy-canvas-dialog-title\">Copy Canvas</DialogTitle>\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<DialogContent>{renderForStateMachine()}</DialogContent>\n\t\t\t\t<DialogActions>\n\t\t\t\t\t<Button onClick={onClose}>Cancel</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tdisabled={stateMachine.value !== \"success\" || disableSave()}\n\t\t\t\t\t>\n\t\t\t\t\t\tCopy\n\t\t\t\t\t</Button>\n\t\t\t\t</DialogActions>\n\t\t\t</form>\n\t\t</Dialog>\n\t)\n\t// #endregion\n}\n","import Dexie from \"dexie\"\nimport { isEqual, set } from \"lodash-es\"\nimport { DexieExportJsonStructure } from \"dexie-export-import/dist/json-structure\"\nimport { importInto } from \"dexie-export-import\"\nimport { v4 as uuidv4 } from \"uuid\"\nimport {\n\tExportClientResult,\n\tDatabaseNames,\n\tImportResponse,\n} from \"../__config/shape\"\nimport readFile from \"../../util/readFile\"\nimport ClientDB from \"../../data/client/ClientDatabase\"\nimport HealthCheckDB from \"../../data/healthChecks/HealthCheckDatabase\"\nimport ActionChecklistDB from \"../../data/ActionChecklist/ActionChecklistDatabase\"\nimport CFCDB from \"../../data/CFC/CFCDatabase\"\nimport { PossibleActionItems } from \"../../state/action-checklist/shape\"\nimport { DatabaseId } from \"../../data/_config/shape\"\n\n/**\n * Reads a blob into text\n *\n * @export\n * @param {Blob} blob\n * @returns {(Promise<ExportClientResult | Error>)}\n */\nexport async function loadBlobAsJSON(\n\tblob: Blob\n): Promise<ExportClientResult | Error> {\n\ttry {\n\t\tconst file = await readFile(blob)\n\t\tif (typeof file !== \"string\") {\n\t\t\t// eslint-disable-next-line\n\t\t\tthrow new Error(\n\t\t\t\t\"Unable to process file, ensure you have uploaded the correct file.\"\n\t\t\t)\n\t\t}\n\n\t\tconst json: ExportClientResult = JSON.parse(file)\n\t\treturn json\n\t} catch (e) {\n\t\t// eslint-disable-next-line\n\t\tthrow new Error(e.message)\n\t}\n}\n\n/**\n * Validates the blob JSON data. This does some minor validation to catch possible\n * issues. When importing the data, we'll let Dexie import handle the proper\n * error handling for the data structure.\n *\n * @export\n * @param {*} data\n * @returns {boolean}\n */\nexport function validateJSONData(data: any): boolean {\n\tconst keys = Object.keys(data)\n\tconst validKeys: DatabaseNames[] = [\n\t\t\"ClientDatabase\",\n\t\t\"HealthCheckDatabase\",\n\t\t\"ActionChecklistDatabase\",\n\t\t\"CFCDatabase\",\n\t]\n\n\t// ensures there are 4 keys\n\tif (keys.length !== 4) return false\n\n\t// checks that the keys matchs the valid keys\n\tif (!isEqual(keys, validKeys)) return false\n\n\t// Ensures each key data uses the dexie format\n\t// eslint-disable-next-line\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tif (data[keys[i]] !== null) {\n\t\t\tif (!data[keys[i]].formatName || data[keys[i]].formatName !== \"dexie\") {\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true\n}\n\nexport async function importToDatabase(\n\tdb: Dexie,\n\tdata: DexieExportJsonStructure\n): Promise<Error | boolean> {\n\tconst blob = new Blob([JSON.stringify(data)])\n\ttry {\n\t\tawait importInto(db, blob, {\n\t\t\toverwriteValues: true,\n\t\t})\n\t\treturn true\n\t} catch (e) {\n\t\treturn e\n\t}\n}\n\n/**\n * Estimates a new client id and replaces the client ids in the imported json\n * data\n *\n * @export\n * @param {ExportClientResult} json\n * @returns {Promise<ExportClientResult>}\n */\nexport async function overwriteClientIds(\n\tjson: ExportClientResult\n): Promise<ExportClientResult> {\n\t// Get a new id for the client\n\tconst newId = uuidv4()\n\n\t// Ser the client database client record\n\tset(json, \"ClientDatabase.data.data[0].rows[0].id\", newId)\n\n\tconst objectPaths: DatabaseNames[] = [\n\t\t\"HealthCheckDatabase\",\n\t\t\"ActionChecklistDatabase\",\n\t\t\"CFCDatabase\",\n\t]\n\tconst newPriorityIds: Record<PossibleActionItems, DatabaseId[]> = {\n\t\tcashInActions: [],\n\t\tcashOutActions: [],\n\t\tplanningBusiness: [],\n\t\tplanningCommitments: [],\n\t\tfunding: [],\n\t\trecordKeeping: [],\n\t\tmanaging: [],\n\t\ttracking: [],\n\t\ttransition: [],\n\t}\n\n\t// Goes through the other keys and replaces the key for each of the client\n\t// ids with the estimated id\n\tobjectPaths.forEach((key) => {\n\t\tif (json[key] !== null) {\n\t\t\tconst dataArr = json[key]?.data.data\n\t\t\tif (dataArr) {\n\t\t\t\tdataArr.forEach((data, dIdx) => {\n\t\t\t\t\tconst { rows } = data\n\t\t\t\t\tif (rows) {\n\t\t\t\t\t\trows.forEach((row, rIdx) => {\n\t\t\t\t\t\t\tconst id = uuidv4()\n\t\t\t\t\t\t\tset(\n\t\t\t\t\t\t\t\tjson,\n\t\t\t\t\t\t\t\t`${key}.data.data[${dIdx}].rows[${rIdx}].clientId`,\n\t\t\t\t\t\t\t\tnewId\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t// Remove the record id to avoid key duplications\n\t\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\t\tset(json, `${key}.data.data[${dIdx}].rows[${rIdx}].id`, id)\n\n\t\t\t\t\t\t\t// Replace the priority order with the new action item ids\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tdata.tableName === \"actionItems\" ||\n\t\t\t\t\t\t\t\tdata.tableName === \"priority\"\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tconst container: PossibleActionItems | undefined =\n\t\t\t\t\t\t\t\t\tjson[key]?.data.data[dIdx].rows[rIdx].actionContainer ||\n\t\t\t\t\t\t\t\t\tundefined\n\t\t\t\t\t\t\t\tif (container) {\n\t\t\t\t\t\t\t\t\tif (data.tableName === \"actionItems\") {\n\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\t\t\t\t\tnewPriorityIds[container].push(id)\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (data.tableName === \"priority\") {\n\t\t\t\t\t\t\t\t\t\tset(\n\t\t\t\t\t\t\t\t\t\t\tjson,\n\t\t\t\t\t\t\t\t\t\t\t`${key}.data.data[${dIdx}].rows[${rIdx}].order`,\n\t\t\t\t\t\t\t\t\t\t\tnewPriorityIds[container]\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t})\n\n\treturn json\n}\n\nexport default async function ImportClient(\n\tblob: Blob,\n\toverwrite = true\n): Promise<ImportResponse> {\n\ttry {\n\t\tconst json = await loadBlobAsJSON(blob)\n\n\t\tif (json instanceof Error) {\n\t\t\t// eslint-disable-next-line\n\t\t\tthrow new Error(json.message)\n\t\t}\n\n\t\tif (!validateJSONData(json)) {\n\t\t\t// eslint-disable-next-line\n\t\t\tthrow new Error(\n\t\t\t\t\"Imported data doesn't follow the correct structure. Ensure you have selected the correct export file\"\n\t\t\t)\n\t\t}\n\n\t\tconst data = !overwrite ? await overwriteClientIds(json) : json\n\n\t\tconst promises = [\n\t\t\tdata.ClientDatabase\n\t\t\t\t? importToDatabase(ClientDB, data.ClientDatabase)\n\t\t\t\t: Promise.resolve(false),\n\t\t\tdata.HealthCheckDatabase\n\t\t\t\t? importToDatabase(HealthCheckDB, data.HealthCheckDatabase)\n\t\t\t\t: Promise.resolve(false),\n\t\t\tdata.ActionChecklistDatabase\n\t\t\t\t? importToDatabase(ActionChecklistDB, data.ActionChecklistDatabase)\n\t\t\t\t: Promise.resolve(false),\n\t\t\tdata.CFCDatabase\n\t\t\t\t? importToDatabase(CFCDB, data.CFCDatabase)\n\t\t\t\t: Promise.resolve(false),\n\t\t]\n\n\t\treturn Promise.all(promises)\n\t} catch (e) {\n\t\t// eslint-disable-next-line\n\t\tthrow new Error(e.message)\n\t}\n}\n","import React, {\n\tReactElement,\n\tuseState,\n\tChangeEvent,\n\tuseEffect,\n\tuseContext,\n\tuseCallback,\n} from \"react\"\nimport {\n\tDialog,\n\tDialogContent,\n\tDialogTitle,\n\tDialogActions,\n\tButton,\n\tBox,\n\tTypography,\n\tmakeStyles,\n\tFormControlLabel,\n\tSwitch,\n} from \"@material-ui/core\"\nimport { Machine } from \"xstate\"\nimport { useMachine } from \"@xstate/react\"\nimport Alert from \"@material-ui/lab/Alert\"\nimport RemoveCircleOutlineIcon from \"@material-ui/icons/RemoveCircleOutline\"\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\"\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\"\nimport { green, orange } from \"@material-ui/core/colors\"\nimport { ImportResponse, DatabaseNames } from \"../../modules/__config/shape\"\nimport Loading from \"../../components/Loading\"\nimport Spacer from \"../../components/Spacer\"\nimport ImportClient, {\n\tloadBlobAsJSON,\n\tvalidateJSONData,\n} from \"../../modules/import-client\"\nimport syncClientsWithDb from \"../../data/client/syncWithDB\"\nimport { ClientContext } from \"../../state/client\"\nimport { ClientDataStruct } from \"../../data/_config/shape\"\nimport ClientUseCase from \"../../data/client/ClientLogic\"\n\ntype DialogProps = {\n\topen: boolean\n\tonClose: () => void\n}\n\nconst useStyles = makeStyles((theme) => ({\n\tfilename: {\n\t\tmarginLeft: theme.spacing(1),\n\t},\n\tfileactions: {\n\t\tmarginTop: theme.spacing(2),\n\t\t\"& > button + button\": {\n\t\t\tmarginLeft: theme.spacing(1),\n\t\t},\n\t},\n\tresult: {\n\t\tdisplay: \"flex\",\n\t\talignItems: \"center\",\n\t\tmarginBottom: theme.spacing(1),\n\t\t\"& > * + *\": {\n\t\t\tmarginLeft: theme.spacing(1),\n\t\t},\n\t\t\"& > strong\": {\n\t\t\tfontWeight: theme.typography.fontWeightMedium,\n\t\t},\n\t},\n}))\n\n// #region Machine Definitions\ninterface MachineSchema {\n\tstates: {\n\t\tidle: {}\n\t\tloading: {}\n\t\tsuccess: {}\n\t\tfailure: {}\n\t}\n}\n\ntype MachineEvents =\n\t| { type: \"FETCH\" }\n\t| { type: \"RESOLVE\" }\n\t| { type: \"REJECT\" }\n\t| { type: \"RETRY\" }\n\nconst importClientMachine = Machine<null, MachineSchema, MachineEvents>({\n\tid: \"importClient\",\n\tinitial: \"idle\",\n\tstates: {\n\t\tidle: {\n\t\t\ton: {\n\t\t\t\tFETCH: \"loading\",\n\t\t\t},\n\t\t},\n\t\tloading: {\n\t\t\ton: {\n\t\t\t\tRESOLVE: \"success\",\n\t\t\t\tREJECT: \"failure\",\n\t\t\t},\n\t\t},\n\t\tsuccess: {\n\t\t\ton: {\n\t\t\t\tRETRY: \"idle\",\n\t\t\t},\n\t\t},\n\t\tfailure: {\n\t\t\ton: {\n\t\t\t\tRETRY: {\n\t\t\t\t\ttarget: \"idle\",\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n})\n// #endregion\n\nconst databaseConfig: Record<DatabaseNames, string> = {\n\tClientDatabase: \"Client data\",\n\tHealthCheckDatabase: \"Health check data\",\n\tActionChecklistDatabase: \"Action checklist data\",\n\tCFCDatabase: \"Cash flow canvas data\",\n}\n\nconst successContent = {\n\tisfalse: {\n\t\tcontent: \"No data found in the import file.\",\n\t\ticon: RemoveCircleOutlineIcon,\n\t},\n\tistrue: {\n\t\tcontent: \"Data successfully imported.\",\n\t\ticon: CheckCircleOutlineIcon,\n\t},\n\tiserror: {\n\t\tcontent: \"\",\n\t\ticon: HighlightOffIcon,\n\t},\n}\n\nexport default function ImportClientDialog({\n\topen,\n\tonClose,\n}: DialogProps): ReactElement {\n\tconst cls = useStyles()\n\tconst [machine, send] = useMachine(importClientMachine)\n\tconst { dispatch } = useContext(ClientContext)\n\n\tconst [errorMsg, setErrorMsg] = useState(\"\")\n\tconst [response, setResponse] = useState<ImportResponse>([\n\t\tfalse,\n\t\ttrue,\n\t\tnew Error(\"Help\"),\n\t])\n\tconst [file, setFile] = useState<File>()\n\tconst [dupClient, setDupClient] = useState<ClientDataStruct>()\n\tconst [overwrite, setOverwrite] = useState(true)\n\n\tconst checkForExistingClient = useCallback(async () => {\n\t\tif (file) {\n\t\t\tconst json = await loadBlobAsJSON(file)\n\n\t\t\tif (json instanceof Error || !validateJSONData(json)) {\n\t\t\t\tsetDupClient(undefined)\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tif (json.ClientDatabase !== null) {\n\t\t\t\tconst clientId = json.ClientDatabase.data.data?.[0].rows?.[0]?.id || -1\n\n\t\t\t\tif (clientId !== -1) {\n\t\t\t\t\tconst possibleClient = await ClientUseCase.findById(clientId)\n\t\t\t\t\tsetDupClient(possibleClient)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tsetDupClient(undefined)\n\t}, [file])\n\n\tuseEffect(() => {\n\t\tif (machine.value === \"idle\") {\n\t\t\tsetFile(undefined)\n\t\t\tsetDupClient(undefined)\n\t\t}\n\t}, [machine])\n\n\tuseEffect(() => {\n\t\tcheckForExistingClient()\n\t}, [file, checkForExistingClient])\n\n\tconst startImporting = async (): Promise<void> => {\n\t\tif (!file) {\n\t\t\tsetErrorMsg(\"A file is required to proceed\")\n\t\t\tsend(\"REJECT\")\n\t\t\treturn\n\t\t}\n\n\t\tsend(\"FETCH\")\n\t\ttry {\n\t\t\tconst res = await ImportClient(file, overwrite)\n\t\t\tawait syncClientsWithDb(dispatch)\n\t\t\tsetResponse(res)\n\t\t\tsend(\"RESOLVE\")\n\t\t} catch (e) {\n\t\t\tsetErrorMsg(e.message)\n\t\t\tsend(\"REJECT\")\n\t\t}\n\t}\n\n\tconst RetryButton = (title: string): ReactElement => (\n\t\t<Button\n\t\t\tonClick={(): void => {\n\t\t\t\tsend(\"RETRY\")\n\t\t\t}}\n\t\t\tvariant=\"contained\"\n\t\t\tcolor=\"primary\"\n\t\t>\n\t\t\t{title}\n\t\t</Button>\n\t)\n\n\t// Upload a file of type JSON\n\tconst FileUpload = (): ReactElement => (\n\t\t<>\n\t\t\t<label htmlFor=\"contained-button-file\">\n\t\t\t\t<input\n\t\t\t\t\taccept=\"application/json\"\n\t\t\t\t\tstyle={{ display: \"none\" }}\n\t\t\t\t\tid=\"contained-button-file\"\n\t\t\t\t\ttype=\"file\"\n\t\t\t\t\tonChange={(e: ChangeEvent<HTMLInputElement>): void => {\n\t\t\t\t\t\tsetFile(e.target.files?.[0] || undefined)\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<Button variant=\"outlined\" component=\"span\">\n\t\t\t\t\tSelect exported file\n\t\t\t\t</Button>\n\t\t\t</label>\n\t\t\t<Typography variant=\"caption\" className={cls.filename}>\n\t\t\t\t{file && file.name}\n\t\t\t</Typography>\n\t\t</>\n\t)\n\n\tconst FileActions = (): ReactElement => (\n\t\t<Box className={cls.fileactions}>\n\t\t\t<Button color=\"primary\" variant=\"contained\" onClick={startImporting}>\n\t\t\t\tImport data\n\t\t\t</Button>\n\t\t\t<Button onClick={(): void => setFile(undefined)}>Remove file</Button>\n\t\t</Box>\n\t)\n\n\tconst ShowFailure = (): ReactElement => (\n\t\t<>\n\t\t\t<Alert severity=\"error\">\n\t\t\t\t{errorMsg ||\n\t\t\t\t\t\"Something went wrong processing the request. Please check the uploaded file and try again\"}\n\t\t\t</Alert>\n\t\t\t<Spacer />\n\t\t\t{RetryButton(\"Try again\")}\n\t\t</>\n\t)\n\n\tconst ShowSuccess = (): ReactElement => {\n\t\tconst keys = Object.keys(databaseConfig) as DatabaseNames[]\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{response.map(\n\t\t\t\t\t(res, idx): ReactElement => {\n\t\t\t\t\t\tif (res instanceof Error) {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Box key={keys[idx]} className={cls.result}>\n\t\t\t\t\t\t\t\t\t<successContent.iserror.icon color=\"error\" />\n\t\t\t\t\t\t\t\t\t<Typography component=\"strong\">\n\t\t\t\t\t\t\t\t\t\t{databaseConfig[keys[idx]]}:\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t<Typography>{res.message}</Typography>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst config = successContent[res ? \"istrue\" : \"isfalse\"]\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Box key={keys[idx]} className={cls.result}>\n\t\t\t\t\t\t\t\t<config.icon\n\t\t\t\t\t\t\t\t\tstyle={res ? { color: green[500] } : { color: orange[500] }}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Typography component=\"strong\">\n\t\t\t\t\t\t\t\t\t{databaseConfig[keys[idx]]}:\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography>{config.content}</Typography>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t)}\n\t\t\t\t<Spacer space={3} />\n\t\t\t\t{RetryButton(\"Import another file\")}\n\t\t\t</>\n\t\t)\n\t}\n\n\tconst overwriteOnChange = useCallback(\n\t\t(e: React.ChangeEvent<HTMLInputElement>) => {\n\t\t\tsetOverwrite(e.target.checked)\n\t\t},\n\t\t[setOverwrite]\n\t)\n\n\tconst DuplicateOptions = (): ReactElement => {\n\t\tif (!dupClient) return <></>\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Spacer />\n\t\t\t\t<Alert severity=\"warning\">\n\t\t\t\t\tThe file you have chosen will overwrite data for client &quot;\n\t\t\t\t\t{dupClient.name}&quot;. Would you like to proceed with overwritting\n\t\t\t\t\tthe data, or do you want to create a new client? This can not be\n\t\t\t\t\tundone.\n\t\t\t\t</Alert>\n\t\t\t\t<FormControlLabel\n\t\t\t\t\tcontrol={\n\t\t\t\t\t\t<Switch\n\t\t\t\t\t\t\tchecked={overwrite}\n\t\t\t\t\t\t\tonChange={overwriteOnChange}\n\t\t\t\t\t\t\tname=\"overwrite-client-data\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t\tlabel=\"Overwrite client data?\"\n\t\t\t\t/>\n\t\t\t</>\n\t\t)\n\t}\n\n\tconst DialogBody = (): ReactElement => {\n\t\tswitch (machine.value) {\n\t\t\tcase \"failure\":\n\t\t\t\t// Consistently show error message to the user\n\t\t\t\treturn <ShowFailure />\n\t\t\tcase \"success\":\n\t\t\t\t// Show status of each of the database items\n\t\t\t\treturn <ShowSuccess />\n\t\t\tcase \"loading\":\n\t\t\t\t// Show loader while importing\n\t\t\t\treturn <Loading />\n\t\t\tcase \"idle\":\n\t\t\tdefault:\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<FileUpload />\n\t\t\t\t\t\t{DuplicateOptions()}\n\t\t\t\t\t\t{file && <FileActions />}\n\t\t\t\t\t</>\n\t\t\t\t)\n\t\t}\n\t}\n\n\treturn (\n\t\t<Dialog open={open} onClose={onClose} maxWidth=\"md\" fullWidth>\n\t\t\t<DialogTitle>Import client data</DialogTitle>\n\t\t\t<DialogContent>Disclaimer about file upload</DialogContent>\n\t\t\t<DialogContent>\n\t\t\t\t<DialogBody />\n\t\t\t</DialogContent>\n\t\t\t<DialogActions>\n\t\t\t\t<Button onClick={onClose}>Close</Button>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t)\n}\n","import React, { ReactElement } from \"react\"\nimport {\n\tDialog,\n\tDialogTitle,\n\tDialogActions,\n\tButton,\n\tDialogContent,\n\tDialogContentText,\n} from \"@material-ui/core\"\nimport { ConfirmDialogueProps } from \"./_config/shape\"\n\nconst ConfirmDialogue = ({\n\topen,\n\tonClose,\n\tonCancel,\n\tonConfirm,\n\tchildren,\n\tconfirmText = \"Confirm\",\n\tcancelText = \"Cancel\",\n\ttitle = \"Proceed?\",\n}: ConfirmDialogueProps): ReactElement => {\n\treturn (\n\t\t<Dialog open={open} onClose={onClose} fullWidth maxWidth=\"sm\">\n\t\t\t<DialogTitle>{title}</DialogTitle>\n\t\t\t{React.Children.count(children) > 0 ? (\n\t\t\t\t<DialogContent>\n\t\t\t\t\t<DialogContentText>{children}</DialogContentText>\n\t\t\t\t</DialogContent>\n\t\t\t) : (\n\t\t\t\t<></>\n\t\t\t)}\n\t\t\t<DialogActions>\n\t\t\t\t<Button onClick={onConfirm} color=\"primary\" autoFocus>\n\t\t\t\t\t{confirmText}\n\t\t\t\t</Button>\n\t\t\t\t<Button onClick={onCancel}>{cancelText}</Button>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t)\n}\n\nexport default ConfirmDialogue\n","import { makeStyles } from \"@material-ui/core\"\n\n// Four question styling\nconst useFourQsStyles = makeStyles((theme) => ({\n\tlist: {\n\t\twidth: \"100%\",\n\t\tpadding: 0,\n\t},\n\tbox: {\n\t\tpaddingRight: theme.spacing(2),\n\t\tpaddingLeft: theme.spacing(2),\n\t},\n\tlistItem: {\n\t\tpadding: `${theme.spacing(1)}px 0`,\n\t\tborderTop: `1px solid ${theme.palette.divider}`,\n\t},\n\tlistItemFirst: {\n\t\tpaddingTop: 0,\n\t\tborder: \"none\",\n\t},\n\tlistItemText: {\n\t\tmargin: 0,\n\t},\n\tanswerIconRoot: {\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"row\",\n\t\talignItems: \"center\",\n\t\t\"& p\": {\n\t\t\tmarginLeft: theme.spacing(1),\n\t\t},\n\t},\n}))\n\nexport default useFourQsStyles\n","import React, { ReactElement } from \"react\"\nimport { ControlProps } from \"./__config/shape\"\nimport DescriptiveMoneyInput from \"../DescriptiveMoneyInput\"\n\n/**\n * Input field for the Super value\n *\n * @export\n * @param {ControlProps<number>} {\n * \tvalue,\n * \tonChange,\n * }\n * @returns {ReactElement}\n */\nexport default function Super({\n\tvalue,\n\tonChange,\n}: ControlProps<number>): ReactElement {\n\treturn (\n\t\t<DescriptiveMoneyInput\n\t\t\tmini\n\t\t\tvariant=\"outlined\"\n\t\t\tonChange={onChange}\n\t\t\tvalue={value}\n\t\t\tname=\"superAmount\"\n\t\t\ttitle=\"Super\"\n\t\t\tdescription=\"Super amounts held for you and your employees for the future.\"\n\t\t/>\n\t)\n}\n","import React, { ReactElement } from \"react\"\nimport { ControlProps } from \"./__config/shape\"\nimport DescriptiveMoneyInput from \"../DescriptiveMoneyInput\"\n\n/**\n * Input field for the PAYG Witholding value\n *\n * @export\n * @param {ControlProps<number>} {\n * \tvalue,\n * \tonChange,\n * }\n * @returns {ReactElement}\n */\nexport default function PayG({\n\tvalue,\n\tonChange,\n}: ControlProps<number>): ReactElement {\n\treturn (\n\t\t<DescriptiveMoneyInput\n\t\t\tmini\n\t\t\tvariant=\"outlined\"\n\t\t\tonChange={onChange}\n\t\t\tvalue={value}\n\t\t\tname=\"paygWithholding\"\n\t\t\ttitle=\"PAYG Withholding\"\n\t\t\tdescription=\"PAYG you withhold for your staff.\"\n\t\t/>\n\t)\n}\n","import { BaseCFCStruct, CFCPanelSlice } from \"../../../data/_config/shape\"\nimport { calculatedEndDate } from \"../../../util/dates\"\n\ntype DateRtn = {\n\tcanvasStartDate: BaseCFCStruct[\"canvasStartDate\"]\n\tcanvasEndDate: BaseCFCStruct[\"canvasEndDate\"]\n}\n\nexport type CanvasDateKeys = \"canvasStartDate\" | \"canvasEndDate\"\n\nexport default function changeDate<T extends CFCPanelSlice>(\n\tk: CanvasDateKeys,\n\tv: Date,\n\tvalues: T\n): DateRtn {\n\t// Sets the field value\n\tconst val = {\n\t\tcanvasEndDate: values.canvasEndDate,\n\t\tcanvasStartDate: values.canvasStartDate,\n\t\t[k]: v,\n\t}\n\n\t// This checks if the start date is ahead of the end date\n\tif (k === \"canvasStartDate\") {\n\t\t// if it is, it will set the end date to the start date\n\t\treturn {\n\t\t\t...val,\n\t\t\tcanvasEndDate: calculatedEndDate(v, values.canvasTimeFrame),\n\t\t}\n\t}\n\n\treturn val\n}\n","import { format, isValid, isSameDay } from \"date-fns\"\nimport { SelectFieldOptions } from \"../../SelectField/SelectField\"\nimport {\n\tCanvasType,\n\tCFCTimeFrame,\n\tCFCStruct,\n\tBaseCFCStruct,\n\tCFCPanelSlice,\n\tCFCId,\n\tClientId,\n} from \"../../../data/_config/shape\"\nimport upperFirst from \"../../../util/strings/upperCaseFirst\"\nimport { pipe, minusBy, add } from \"../../../util/reduce/math\"\nimport concatStr from \"../../../util/strings/concatStr\"\nimport filterById from \"../../../util/filters/ById\"\nimport CFCUseCase from \"../../../data/CFC/CFCLogic\"\nimport { CalculatedValues } from \"../../../state/CFC/useCalculated\"\n\ntype Opts = SelectFieldOptions\n\n/**\n * Converts an array of strings into a array that can be used as options\n * for the `SelectField` component.\n *\n * Use this method with `reduce`\n *\n * ## Example\n * ```ts\n * const opts = [\"a\", \"b\", \"c\"].reduce(reduceToOptions, [])\n * ```\n *\n * @export\n * @param {Opts} acc\n * @param {string} cur\n * @returns {Opts}\n */\nexport function reduceToOptions(acc: Opts, cur: string): Opts {\n\treturn acc.concat({ value: cur, label: upperFirst(cur) })\n}\n\n/**\n * Creates options for the `CanvasTypeSelect` component\n *\n * @export\n * @returns {Opts}\n */\nexport function canvasTypeOptions(): Opts {\n\tconst x: CanvasType[] = [\"review\", \"forecast\", \"plan\", \"track\"]\n\treturn x.reduce(reduceToOptions, [])\n}\n\n/**\n * Creates options for the `CanvasTimeFrameSelect` component\n *\n * @export\n * @returns {Opts}\n */\nexport function canvasTimeFrameOptions(): Opts {\n\tconst x: CFCTimeFrame[] = [\n\t\t\"weekly\",\n\t\t\"fortnightly\",\n\t\t\"monthly\",\n\t\t\"quaterly\",\n\t\t\"biannually\",\n\t\t\"yearly\",\n\t\t\"other\",\n\t]\n\treturn x.reduce(reduceToOptions, [])\n}\n\n/**\n * Generates the automated title for the canvas\n *\n * @export\n * @param {CanvasType} type\n * @param {CFCTimeFrame} timeframe\n * @param {Date} startDate\n * @param {Date} endDate\n * @returns {string}\n */\nexport function generateTitle(\n\ttype: CanvasType,\n\ttimeframe: CFCTimeFrame,\n\tstartDate: Date,\n\tendDate: Date\n): string {\n\tif (!isValid(startDate) || !isValid(endDate)) {\n\t\treturn \"Please provide a valid date\"\n\t}\n\n\treturn pipe(\n\t\tconcatStr(upperFirst(`${timeframe} `)),\n\t\tconcatStr(format(startDate, \"dd/MM/yyyy\")),\n\t\tconcatStr(\" to \"),\n\t\tconcatStr(format(endDate, \"dd/MM/yyyy\"))\n\t)(upperFirst(`${type} `))\n}\n\n/**\n * Gets the display title for a canvas\n *\n * @export\n * @param {(CFCStruct | BaseCFCStruct)} values\n * @returns {string}\n */\nexport function canvasDisplayTitle(values: CFCStruct | BaseCFCStruct): string {\n\tif (values.canvasTitle === \"\") {\n\t\treturn generateTitle(\n\t\t\tvalues.canvasType,\n\t\t\tvalues.canvasTimeFrame,\n\t\t\tvalues.canvasStartDate,\n\t\t\tvalues.canvasEndDate\n\t\t)\n\t}\n\n\treturn values.canvasTitle\n}\n\nexport const DescriptionSize = 5\nexport const AmountSize = 3\nexport const ApplyGSTSize = 2\nexport const ActionsSize = 2\n\ntype DupResponse = false | CFCStruct\n\n/**\n * Checks if the current config setup is a duplicate of another canvas.\n *\n * It either returns the cavnas that is being duplicated or false if it isn't a\n * duplicate\n *\n * @export\n * @param {CFCStruct} dups\n * @param {CFCPanelSlice} values\n * @param {BaseCFCStruct[\"canvasTitle\"]} title\n * @returns {(boolean | CFCStruct)}\n */\nexport function identifyIfDuplicate(\n\tdups: CFCStruct[],\n\tvalues: CFCPanelSlice,\n\tusingCustom: boolean,\n\tcanvasId?: CFCId\n): DupResponse {\n\tif (dups.length === 0) return false\n\tconst { canvasTitle, canvasEndDate, canvasStartDate } = values\n\n\tconst filtered = dups.filter((item) => {\n\t\tif (!usingCustom) {\n\t\t\treturn (\n\t\t\t\tisSameDay(item.canvasStartDate, canvasStartDate) &&\n\t\t\t\tisSameDay(item.canvasEndDate, canvasEndDate)\n\t\t\t)\n\t\t}\n\n\t\treturn item.canvasTitle === \"\" ? false : item.canvasTitle === canvasTitle\n\t})\n\n\tif (!canvasId) {\n\t\treturn filtered.length < 1 ? false : filtered[0]\n\t}\n\n\tif (filtered.length < 1) return false\n\n\tconst withoutCurrentCanvas = filtered.filter(filterById(canvasId, true))\n\treturn withoutCurrentCanvas.length < 1 ? false : withoutCurrentCanvas[0]\n}\n\n/**\n * Fetches from the database and does the duplication filter\n *\n * @export\n * @param {CFCPanelSlice} slice\n * @param {ClientId} client\n * @param {CFCId} [canvasId]\n * @returns {Promise<DupResponse>}\n */\nexport async function performDupFind(\n\tslice: CFCPanelSlice,\n\tclient: ClientId,\n\tusingCustom: boolean,\n\tcanvasId?: CFCId\n): Promise<DupResponse> {\n\tconst dups = await CFCUseCase.findPossibleDuplicates(\n\t\tslice.canvasType,\n\t\tslice.canvasTimeFrame,\n\t\tclient\n\t)\n\n\treturn identifyIfDuplicate(dups, slice, usingCustom, canvasId)\n}\n\n/**\n * Calculates the value for Question 1 of 4\n *\n * @export\n * @param {CalculatedValues} calculated\n * @returns {number}\n */\nexport function calcQuestionOne(calculated: CalculatedValues): number {\n\treturn calculated.cashSurplus\n}\n\n/**\n * Calculates the value for Question 2 of 4\n *\n * @export\n * @param {CalculatedValues} calculated\n * @param {number} payg\n * @param {number} superAmount\n * @param {number} incomeTax\n * @returns {number}\n */\nexport function calcQuestionTwo(\n\tcalculated: CalculatedValues,\n\tpayg: number,\n\tsuperAmount: number,\n\tincomeTax: number\n): number {\n\treturn pipe(\n\t\tminusBy(calculated.gstOnPurchases),\n\t\tadd(payg),\n\t\tadd(superAmount),\n\t\tadd(incomeTax)\n\t)(calculated.gstOnSales)\n}\n\n/**\n * Calculates the value for Question 3 of 4\n *\n * @export\n * @param {number} openingBalance\n * @param {CalculatedValues} calculated\n * @param {number} incomeTax\n * @returns {number}\n */\nexport function calcQuestionThree(\n\topeningBalance: number,\n\tcalculated: CalculatedValues,\n\tincomeTax: number\n): number {\n\treturn pipe(add(calculated.cashSurplus), minusBy(incomeTax))(openingBalance)\n}\n\n/**\n * Calculates the value for Question 4 of 4\n *\n * @export\n * @param {CalculatedValues} left\n * @param {CalculatedValues} right\n * @returns {number}\n */\nexport function calcQuestionFour(\n\tleft: CalculatedValues,\n\tright: CalculatedValues\n): number {\n\treturn left.totalNetAssets - right.totalNetAssets\n}\n","import React, { ReactElement } from \"react\"\nimport { Typography } from \"@material-ui/core\"\nimport { Link } from \"react-router-dom\"\nimport { PrivateRoutes } from \"../../util/routes/routes\"\n\n/**\n * Component to show when no data can be found for a given canvas\n *\n * @export\n * @returns {ReactElement}\n */\nexport default function DataNotFound(): ReactElement {\n\treturn (\n\t\t<>\n\t\t\t<Typography variant=\"h5\">Canvas not found</Typography>\n\t\t\t<Typography>\n\t\t\t\tThe requested canvas could not be found. Visit the{\" \"}\n\t\t\t\t<Link to={PrivateRoutes.CFCListing}>listing</Link> page or{\" \"}\n\t\t\t\t<Link to={PrivateRoutes.ClientList}>select a different client</Link>.\n\t\t\t</Typography>\n\t\t</>\n\t)\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Finds the index of any object in an array by a value\n *\n * @param {any[]} arr\n * @param {string} key\n * @param {any} value\n */\nconst findObjectIndexByValue = (arr: any[], key: string, value: any): number =>\n\tarr.findIndex((item) => item[key] === value)\n\nexport default findObjectIndexByValue\n","import { getTime } from \"date-fns\"\nimport { BaseCFCStruct, CFCPanelSlice } from \"../../../data/_config/shape\"\n\n/**\n * Creates a search query to pass to the Canvas Edit page\n *\n * @export\n * @param {(BaseCFCStruct | CFCPanelSlice)} values\n * @param {boolean} useCustomTitle\n * @returns {string}\n */\nexport default function createURLParams(\n\tvalues: BaseCFCStruct | CFCPanelSlice,\n\tuseCustomTitle: boolean\n): string {\n\tconst n = new URLSearchParams()\n\tn.append(\"title\", values.canvasTitle)\n\tn.append(\"useCustom\", useCustomTitle ? \"1\" : \"0\")\n\tn.append(\"type\", values.canvasType)\n\tn.append(\"timeframe\", values.canvasTimeFrame)\n\tn.append(\"startDate\", getTime(values.canvasStartDate).toString())\n\tn.append(\"endDate\", getTime(values.canvasEndDate).toString())\n\n\treturn n.toString()\n}\n","export type ReadFilePromiseResult = Promise<\n\t(string | ArrayBuffer | null) | Error\n>\n\n/**\n * Promise wrapper for the file reader\n *\n * @param {Blob} blob\n * @returns {Promise<any>}\n */\nexport default function readFile(blob: Blob): ReadFilePromiseResult {\n\treturn new Promise((resolve, reject) => {\n\t\tif (!blob) {\n\t\t\treject(new Error(\"Reading a file requires a valid file to be passed\"))\n\t\t}\n\n\t\tconst fr = new FileReader()\n\t\t// eslint-disable-next-line\n\t\tfr.onerror = (event) => {\n\t\t\treject(event)\n\t\t}\n\t\t// eslint-disable-next-line\n\t\tfr.onloadend = () => {\n\t\t\tresolve(fr.result)\n\t\t}\n\t\tfr.readAsText(blob)\n\t})\n}\n","import React, { ReactElement } from \"react\"\nimport { Box, Typography } from \"@material-ui/core\"\nimport MoneyInput from \"../MoneyInput\"\nimport { DescriptiveMoneyInputProps } from \"./__config/shape\"\nimport useStyles from \"./__config/styles\"\n\n/**\n * Component that shows a money input with a title and description.\n * Defaults to displaying in a row, can be set to be stacked.\n *\n * The props extend `OutlinedTextFieldProps`, meaning any textfield props can\n * be added to the component. The only custom props are;\n *\n * * `title`\n * * `description`\n * * `stacked` - defaults to `false`\n *\n * @export\n * @param {DescriptiveMoneyInputProps} {\n * \ttitle,\n * \tdescription,\n * \tstacked = false,\n * \t// eslint-disable-next-line\n * \t...textfieldProps\n * }\n * @returns {ReactElement}\n */\nexport default React.memo(function DescriptiveMoneyInput({\n\ttitle,\n\tdescription,\n\tstacked = false,\n\tmini = false,\n\tfullHeight = false,\n\t// eslint-disable-next-line\n\t...textfieldProps\n}: DescriptiveMoneyInputProps): ReactElement {\n\tconst styles = useStyles({ stacked, mini, fullHeight })\n\n\treturn (\n\t\t<Box className={styles.root}>\n\t\t\t<Box className={styles.type}>\n\t\t\t\t<Typography variant=\"h6\" component=\"p\">\n\t\t\t\t\t{title}\n\t\t\t\t</Typography>\n\t\t\t\t<Typography component=\"span\">{description}</Typography>\n\t\t\t</Box>\n\t\t\t<MoneyInput\n\t\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t\t{...textfieldProps}\n\t\t\t\tclassName={styles.moneyInput}\n\t\t\t/>\n\t\t</Box>\n\t)\n})\n","import { BaseDatabaseStruct, DatabaseId } from \"../../data/_config/shape\"\n\n/**\n * Used with the array `filter` method, this allows you to\n * filter a object using the `id` property.\n * The objects interface must use `BaseDatabaseStruct`\n * to work\n *\n * [{id: 4}, ...].filter(filterById(4))\n *\n * @param {DatabaseId} id\n * @param {boolean} reject If reject is true, then it will return the opposite.\n * @returns BaseDatabaseStruct[]\n */\nconst filterById = (id: DatabaseId, reject = false) => (\n\titem: BaseDatabaseStruct\n): boolean => {\n\tconst res = item.id === id\n\treturn reject ? !res : res\n}\n\nexport default filterById\n","import React, { ReactElement, useContext } from \"react\"\nimport { Link as RouterLink } from \"react-router-dom\"\nimport {\n\tTypography,\n\tContainer,\n\tButton,\n\tGrid,\n\tCard,\n\tCardMedia,\n\tCardActions,\n\tBox,\n\tCardHeader,\n\tAvatar,\n\tList,\n} from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { PrivateRoutes } from \"../util/routes/routes\"\nimport { PublicNavbar } from \"../components/Navbar\"\nimport { NewClientDialog } from \"../content/dialog\"\nimport { ClientContext } from \"../state/client\"\nimport Spacer from \"../components/Spacer\"\n\nconst useHomepageStyles = makeStyles((theme) => ({\n\tcontainer: {\n\t\tpaddingTop: theme.spacing(5),\n\t\tpaddingBottom: theme.spacing(5),\n\t},\n\tgrid: {\n\t\tpaddingTop: theme.spacing(5),\n\t},\n\tbuttonBox: {\n\t\tmarginTop: theme.spacing(5),\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"center\",\n\t},\n\tembed: {\n\t\tminHeight: \"300px\",\n\t\tborder: \"none\",\n\t},\n\tcontainerIndigo: {\n\t\tbackgroundColor: \"#e8eaf6\", // indigo50\n\t\tpadding: theme.spacing(5),\n\t\tmarginTop: theme.spacing(2),\n\t},\n\tcontainerGrey: {\n\t\tbackgroundColor: \"#f5f5f5\",\n\t\tpadding: theme.spacing(2),\n\t\tmarginTop: theme.spacing(3),\n\t},\n\tcontentText: {\n\t\tmargin: theme.spacing(2, 0),\n\t\twidth: \"100%\",\n\t},\n\talignJustifyContent: {\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"column\",\n\t\tflexWrap: \"nowrap\",\n\t\tjustifyContent: \"center\",\n\t\talignItems: \"center\",\n\t\talignContent: \"center\",\n\t\tmargin: theme.spacing(2, 0),\n\t},\n\tpurple: {\n\t\tcolor: theme.palette.getContrastText(\"#9c27b0\"),\n\t\tbackgroundColor: \"#9c27b0\",\n\t\twidth: theme.spacing(7),\n\t\theight: theme.spacing(7),\n\t\tmarginTop: theme.spacing(2),\n\t\tfontSize: \"1.8rem\",\n\t},\n\tgreen: {\n\t\tcolor: theme.palette.getContrastText(\"#43a047\"),\n\t\tbackgroundColor: \"#43a047\",\n\t\twidth: theme.spacing(7),\n\t\theight: theme.spacing(7),\n\t\tmarginTop: theme.spacing(2),\n\t\tfontSize: \"1.8rem\",\n\t},\n\tblue: {\n\t\tcolor: theme.palette.getContrastText(\"#0091ea\"),\n\t\tbackgroundColor: \"#0091ea\",\n\t\twidth: theme.spacing(7),\n\t\theight: theme.spacing(7),\n\t\tmarginTop: theme.spacing(2),\n\t\tfontSize: \"1.8rem\",\n\t},\n\tMainHeading: {\n\t\tpaddingTop: theme.spacing(2),\n\t\tpaddingBottom: theme.spacing(1),\n\t\tfontSize: \"2.2rem\",\n\t},\n\tSectionTitle: {\n\t\tpaddingTop: theme.spacing(1),\n\t\tfontSize: \"1.8rem\",\n\t},\n}))\n\nconst Homepage = (): ReactElement => {\n\tconst {\n\t\tstate: { clients },\n\t} = useContext(ClientContext)\n\tconst styles = useHomepageStyles()\n\n\tconst hasClients = (): boolean => clients.length > 0\n\n\treturn (\n\t\t<>\n\t\t\t<PublicNavbar hasClients={hasClients()} />\n\t\t\t<Box role=\"main\">\n\t\t\t\t<Container className={styles.container}>\n\t\t\t\t\t<Typography\n\t\t\t\t\t\talign=\"center\"\n\t\t\t\t\t\tcomponent=\"h1\"\n\t\t\t\t\t\tclassName={styles.MainHeading}\n\t\t\t\t\t>\n\t\t\t\t\t\tCash Flow Coaching Kit\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography align=\"center\" component=\"p\" variant=\"h5\">\n\t\t\t\t\t\tPlan and improve your small business.\n\t\t\t\t\t</Typography>\n\t\t\t\t</Container>\n\t\t\t\t<Container\n\t\t\t\t\tmaxWidth={false}\n\t\t\t\t\tcomponent=\"div\"\n\t\t\t\t\tclassName={styles.containerGrey}\n\t\t\t\t>\n\t\t\t\t\t<Container component=\"div\" maxWidth=\"lg\">\n\t\t\t\t\t\t<Grid container spacing={3}>\n\t\t\t\t\t\t\t<Grid item xs={12} sm={4} className={styles.alignJustifyContent}>\n\t\t\t\t\t\t\t\t<Avatar className={styles.purple}>1</Avatar>\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tcomponent=\"h2\"\n\t\t\t\t\t\t\t\t\tvariant=\"h5\"\n\t\t\t\t\t\t\t\t\tclassName={styles.SectionTitle}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tDiscover\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tvariant=\"body1\"\n\t\t\t\t\t\t\t\t\tcomponent=\"p\"\n\t\t\t\t\t\t\t\t\tclassName={styles.contentText}\n\t\t\t\t\t\t\t\t\talign=\"center\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tLearn about cash flow management.\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={12} sm={4} className={styles.alignJustifyContent}>\n\t\t\t\t\t\t\t\t<Avatar className={styles.green}>2</Avatar>\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tcomponent=\"h2\"\n\t\t\t\t\t\t\t\t\tvariant=\"h5\"\n\t\t\t\t\t\t\t\t\tclassName={styles.SectionTitle}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tApply\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tvariant=\"body1\"\n\t\t\t\t\t\t\t\t\tcomponent=\"p\"\n\t\t\t\t\t\t\t\t\tclassName={styles.contentText}\n\t\t\t\t\t\t\t\t\talign=\"center\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tUnderstand your current cash flow and plan improvements.\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={12} sm={4} className={styles.alignJustifyContent}>\n\t\t\t\t\t\t\t\t<Avatar className={styles.blue}>3</Avatar>\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tcomponent=\"h2\"\n\t\t\t\t\t\t\t\t\tvariant=\"h5\"\n\t\t\t\t\t\t\t\t\tclassName={styles.SectionTitle}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tPlan &amp; Action\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tvariant=\"body1\"\n\t\t\t\t\t\t\t\t\tcomponent=\"p\"\n\t\t\t\t\t\t\t\t\tclassName={styles.contentText}\n\t\t\t\t\t\t\t\t\talign=\"center\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tCreate an action checklist and track your progress.\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Container>\n\t\t\t\t</Container>\n\t\t\t\t<Container>\n\t\t\t\t\t<Box className={styles.buttonBox}>\n\t\t\t\t\t\t{hasClients() ? (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\t\tto={PrivateRoutes.ClientList}\n\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSee client list\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<NewClientDialog triggerText=\"Get Started\" />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Spacer />\n\t\t\t\t\t<Grid container spacing={0}>\n\t\t\t\t\t\t<Grid item xs={12} sm={8}>\n\t\t\t\t\t\t\t<Box className=\"content-area\">\n\t\t\t\t\t\t\t\t<Typography variant=\"h5\">Using the Cash Flow Kit</Typography>\n\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\tPlanning your business will help you sustain or grow your\n\t\t\t\t\t\t\t\t\tbusiness.\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography className=\"list-describer\">\n\t\t\t\t\t\t\t\t\tYou can use the kit to:\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<List component=\"ul\" className=\"ul-list\">\n\t\t\t\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\t\t\t\tCheck the health of your business\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\t\t\t\tLearn about business management\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t<Typography component=\"li\">Understand cash flow</Typography>\n\t\t\t\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\t\t\t\tExplore practical ways to improve cash flow\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\t\t\t\tPlan and track improvements\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t\t<Typography className=\"list-describer\">\n\t\t\t\t\t\t\t\t\tTo review, plan and improve your cash flow, you need to know\n\t\t\t\t\t\t\t\t\tyour:\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<List component=\"ul\" className=\"ul-list\">\n\t\t\t\t\t\t\t\t\t<Typography component=\"li\">Opening balance</Typography>\n\t\t\t\t\t\t\t\t\t<Typography component=\"li\">Revenue</Typography>\n\t\t\t\t\t\t\t\t\t<Typography component=\"li\">Expenses</Typography>\n\t\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\tYou can also import data from other tools and applications\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\tThe kit does not save information between sessions. Use the\n\t\t\t\t\t\t\t\t\texport function regularly to save your progress.\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid container spacing={3} className={styles.grid} justify=\"center\">\n\t\t\t\t\t\t{/* <Grid item xs={12} md={6}>\n\t\t\t\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t\t\t\t<CardHeader title=\"Take a tour of the kit\" />\n\t\t\t\t\t\t\t\t<CardMedia\n\t\t\t\t\t\t\t\t\tclassName={styles.embed}\n\t\t\t\t\t\t\t\t\tcomponent=\"iframe\"\n\t\t\t\t\t\t\t\t\ttitle=\"Take a tour of the kit\"\n\t\t\t\t\t\t\t\t\tsrc=\"https://www.youtube.com/embed/vSoCk1sgV3M\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\thref=\"/transcripts/Take-a-tour-of-the-kit.docx\"\n\t\t\t\t\t\t\t\t\t\taria-label=\"Download transcript: Take a tour of the kit\"\n\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\" rel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tDownload Transcript\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Grid> */}\n\t\t\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t\t\t\t<CardHeader title=\"What advisors think of the kit\" />\n\t\t\t\t\t\t\t\t<CardMedia\n\t\t\t\t\t\t\t\t\tclassName={styles.embed}\n\t\t\t\t\t\t\t\t\tcomponent=\"iframe\"\n\t\t\t\t\t\t\t\t\ttitle=\"What advisors think of the kit\"\n\t\t\t\t\t\t\t\t\tsrc=\"https://www.youtube.com/embed/z64Bc5K2TKo\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\thref=\"/transcripts/What-advisors-think-of-the-kit.docx\"\n\t\t\t\t\t\t\t\t\t\taria-label=\"Download transcript: What advisors think of the kit\"\n\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tDownload Transcript\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Container>\n\n\t\t\t\t<Container\n\t\t\t\t\tcomponent=\"div\"\n\t\t\t\t\tclassName={styles.containerIndigo}\n\t\t\t\t\tmaxWidth={false}\n\t\t\t\t>\n\t\t\t\t\t<Container maxWidth=\"lg\">\n\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\tvariant=\"body2\"\n\t\t\t\t\t\t\tcomponent=\"p\"\n\t\t\t\t\t\t\tclassName={styles.contentText}\n\t\t\t\t\t\t\talign=\"center\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tThis website does not collect or store any personal information,\n\t\t\t\t\t\t\tincluding the name of your business, any financial records you\n\t\t\t\t\t\t\tinput or upload, or any of the actions you are taking with your\n\t\t\t\t\t\t\tbusiness.\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\tvariant=\"body2\"\n\t\t\t\t\t\t\tcomponent=\"p\"\n\t\t\t\t\t\t\tclassName={styles.contentText}\n\t\t\t\t\t\t\talign=\"center\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tThe data you enter into the Cash Flow Coaching Kit will be stored\n\t\t\t\t\t\t\ton this device only. Clearing your browser cache will erase all\n\t\t\t\t\t\t\tclient data.\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\tvariant=\"body2\"\n\t\t\t\t\t\t\tcomponent=\"p\"\n\t\t\t\t\t\t\tclassName={styles.contentText}\n\t\t\t\t\t\t\talign=\"center\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tWe recommend using the EXPORT function regularly to avoid data\n\t\t\t\t\t\t\tloss. Please refer to the{\" \"}\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref=\"/docs/Terms and Cond.docx\"\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tTerms &amp; Conditions\n\t\t\t\t\t\t\t</a>{\" \"}\n\t\t\t\t\t\t\tof use and our Data usage and privacy statement.\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\tvariant=\"body2\"\n\t\t\t\t\t\t\tcomponent=\"p\"\n\t\t\t\t\t\t\tclassName={styles.contentText}\n\t\t\t\t\t\t\talign=\"center\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tIf you have any questions about the kit, please use our feedback\n\t\t\t\t\t\t\tform.\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Container>\n\t\t\t\t</Container>\n\t\t\t</Box>\n\t\t</>\n\t)\n}\n\nexport default Homepage\n","import React, { ReactElement } from \"react\"\nimport { Route } from \"react-router-dom\"\nimport { PublicRoutes } from \"../../../util/routes/routes\"\nimport Homepage from \"../../../pages\"\n\n/**\n * Public route definitions, these pages should be available\n * without the user entering a client\n *\n * @returns {ReactElement}\n */\nconst PublicRoutesWrapper = (): ReactElement => (\n\t<>\n\t\t<Route exact path={PublicRoutes.Home}>\n\t\t\t<Homepage />\n\t\t</Route>\n\t</>\n)\n\nexport default PublicRoutesWrapper\n","import { Reducer } from \"react\"\nimport { ICFCState, CFCReducerActions, CFCActionTypes } from \"./shape\"\nimport setDuplicateError from \"./actions/setDuplicateError\"\nimport setInvalidDateError from \"./actions/setInvalidDateError\"\nimport setQuestionValues from \"./actions/setQuestionValues\"\nimport setCompareCanvases from \"./actions/setCompareCanvases\"\nimport setCopyCanvasActive from \"./actions/setCopyCanvasActive\"\n\ntype ICFCReducer = Reducer<ICFCState, CFCReducerActions>\n\n/**\n * Reducer used for the CFC state\n *\n * @param {ICFCState} state Current state\n * @param {CFCReducerActions} action action to perform\n * @returns ICFCState\n */\nconst CFCReducer: ICFCReducer = (\n\tstate: ICFCState,\n\taction: CFCReducerActions\n): ICFCState => {\n\tswitch (action.type) {\n\t\tcase CFCActionTypes.ChangeDuplicateError:\n\t\t\treturn setDuplicateError(state, action.payload)\n\t\tcase CFCActionTypes.ChangeInvalidDateError:\n\t\t\treturn setInvalidDateError(state, action.payload)\n\t\tcase CFCActionTypes.ChangeQuestionValues:\n\t\t\treturn setQuestionValues(state, action.payload)\n\t\tcase CFCActionTypes.ChangeCompare:\n\t\t\treturn setCompareCanvases(state, action.payload)\n\t\tcase CFCActionTypes.ChangeCopyCanvasActive:\n\t\t\treturn setCopyCanvasActive(state, action.payload)\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default CFCReducer\n","import { ICFCState } from \"../shape\"\n\n/**\n * Changes the `duplicateError` value in the state\n *\n * @export\n * @param {ICFCState} state\n * @param {ICFCState[\"duplicateError\"]} payload\n * @returns {ICFCState}\n */\nexport default function setDuplicateError(\n\tstate: ICFCState,\n\tpayload: ICFCState[\"duplicateError\"]\n): ICFCState {\n\treturn {\n\t\t...state,\n\t\tduplicateError: payload,\n\t}\n}\n","import { ICFCState } from \"../shape\"\n\n/**\n * Changes the `invalidDateError` value in the state\n *\n * @export\n * @param {ICFCState} state\n * @param {ICFCState[\"invalidDateError\"]} payload\n * @returns {ICFCState}\n */\nexport default function setInvalidDateError(\n\tstate: ICFCState,\n\tpayload: ICFCState[\"invalidDateError\"]\n): ICFCState {\n\treturn {\n\t\t...state,\n\t\tinvalidDateError: payload,\n\t}\n}\n","import { ICFCState } from \"../shape\"\n\n/**\n * Change the question values state value\n *\n * @export\n * @param {ICFCState} state\n * @param {ICFCState[\"questionValues\"]} payload\n * @returns {ICFCState}\n */\nexport default function setQuestionValues(\n\tstate: ICFCState,\n\tpayload: ICFCState[\"questionValues\"]\n): ICFCState {\n\treturn {\n\t\t...state,\n\t\tquestionValues: payload,\n\t}\n}\n","import { ICFCState, ChangeComparePayload } from \"../shape\"\n\n/**\n * Change the canvases to compare\n *\n * @export\n * @param {ICFCState} state\n * @param {ChangeComparePayload} payload\n * @returns {ICFCState}\n */\nexport default function setCompareCanvases(\n\tstate: ICFCState,\n\tpayload: ChangeComparePayload\n): ICFCState {\n\treturn {\n\t\t...state,\n\t\tleftCompare: payload.left,\n\t\trightCompare: payload.right,\n\t}\n}\n","import { ICFCState } from \"../shape\"\n\n/**\n * Changes the `copyCanvasActive` value in the state\n *\n * @export\n * @param {ICFCState} state\n * @param {ICFCState[\"copyCanvasActive\"]} payload\n * @returns {ICFCState}\n */\nexport default function setCopyCanvasActive(\n\tstate: ICFCState,\n\tpayload: ICFCState[\"copyCanvasActive\"]\n): ICFCState {\n\treturn {\n\t\t...state,\n\t\tcopyCanvasActive: payload,\n\t}\n}\n","import React, {\n\tReactNode,\n\tReactElement,\n\tuseReducer,\n\tReducer,\n\tuseMemo,\n\tuseState,\n} from \"react\"\nimport CFCReducer from \"./reducer\"\nimport { ICFCState, CFCReducerActions, ItemUpdaterFunction } from \"./shape\"\nimport CFCContext, { defaultCFCState } from \"./context\"\n\ntype ReducerMakeup = Reducer<ICFCState, CFCReducerActions>\n\n/**\n * Context state provider element\n *\n * @param {{ children: ReactNode }} props\n * @returns {ReactElement}\n */\nfunction CFCProvider(props: { children: ReactNode }): ReactElement {\n\tconst [state, dispatch] = useReducer<ReducerMakeup>(\n\t\tCFCReducer,\n\t\tdefaultCFCState\n\t)\n\n\tconst [canvasItemUpdater, setCanvasItemUpdater] = useState<\n\t\tItemUpdaterFunction[]\n\t>([])\n\n\tconst value = useMemo(\n\t\t(): ICFCState => ({\n\t\t\t...state,\n\t\t\tdispatch,\n\t\t\tcanvasItemUpdater,\n\t\t\tsetCanvasItemUpdater,\n\t\t}),\n\t\t[state, canvasItemUpdater]\n\t)\n\n\t// eslint-disable-next-line react/jsx-props-no-spreading\n\treturn <CFCContext.Provider value={value} {...props} />\n}\n\nexport default CFCProvider\n","import React, { ReactElement } from \"react\"\nimport { Route } from \"react-router-dom\"\nimport loadable from \"@loadable/component\"\nimport { PrivateRoutes } from \"../../../util/routes/routes\"\nimport { ActionChecklistProvider } from \"../../../state/action-checklist\"\nimport { PrivatePage, PageContainer } from \"../../Layouts\"\nimport CFCProvider from \"../../../state/CFC/provider\"\nimport Loading from \"../../Loading\"\n\nconst LoadableFallback = (): ReactElement => (\n\t<PageContainer>\n\t\t<Loading />\n\t</PageContainer>\n)\n\nconst DTFundingBusiness = loadable(\n\t() => import(\"../../../pages/DiscoverTopics/funding-business\"),\n\t{ fallback: <LoadableFallback /> }\n)\nconst DTManagingCashFlow = loadable(\n\t() => import(\"../../../pages/DiscoverTopics/managing-cash-flow\"),\n\t{ fallback: <LoadableFallback /> }\n)\nconst DTPlanningBusiness = loadable(\n\t() => import(\"../../../pages/DiscoverTopics/planning-business\"),\n\t{ fallback: <LoadableFallback /> }\n)\nconst DTPlanningFinanicalCommitments = loadable(\n\t() => import(\"../../../pages/DiscoverTopics/planning-financial-commitments\"),\n\t{ fallback: <LoadableFallback /> }\n)\nconst DTRecordKeeping = loadable(\n\t() => import(\"../../../pages/DiscoverTopics/record-keeping\"),\n\t{ fallback: <LoadableFallback /> }\n)\nconst DTSellingClosingSuccession = loadable(\n\t() => import(\"../../../pages/DiscoverTopics/selling-closing-succession\"),\n\t{ fallback: <LoadableFallback /> }\n)\nconst DTTrackingPerformance = loadable(\n\t() => import(\"../../../pages/DiscoverTopics/tracking-performance\"),\n\t{ fallback: <LoadableFallback /> }\n)\nconst ClientList = loadable(() => import(\"../../../pages/client-list\"), {\n\tfallback: <LoadableFallback />,\n})\nconst SessionFiles = loadable(() => import(\"../../../pages/session-files\"), {\n\tfallback: <LoadableFallback />,\n})\nconst HCQuestionnaire = loadable(\n\t() => import(\"../../../pages/HealthCheck/questionnaire\"),\n\t{ fallback: <LoadableFallback /> }\n)\nconst DTListing = loadable(\n\t() => import(\"../../../pages/DiscoverTopics/listing\"),\n\t{ fallback: <LoadableFallback /> }\n)\nconst CFCCanvas = loadable(\n\t() => import(\"../../../pages/CashFlowCanvas/canvas\"),\n\t{ fallback: <LoadableFallback /> }\n)\nconst ChangeLevers = loadable(() => import(\"../../../pages/change-levers\"), {\n\tfallback: <LoadableFallback />,\n})\nconst ActionChecklist = loadable(() => import(\"../../../pages/action-items\"), {\n\tfallback: <LoadableFallback />,\n})\nconst CoachingKit = loadable(() => import(\"../../../pages/coaching-kit\"), {\n\tfallback: <LoadableFallback />,\n})\nconst HCListing = loadable(() => import(\"../../../pages/HealthCheck/listing\"), {\n\tfallback: <LoadableFallback />,\n})\nconst HCSummary = loadable(() => import(\"../../../pages/HealthCheck/summary\"), {\n\tfallback: <LoadableFallback />,\n})\nconst CanvasEdit = loadable(\n\t() => import(\"../../../pages/CashFlowCanvas/canvasEdit\"),\n\t{ fallback: <LoadableFallback /> }\n)\nconst CFCListing = loadable(\n\t() => import(\"../../../pages/CashFlowCanvas/listing\"),\n\t{ fallback: <LoadableFallback /> }\n)\nconst CFCCompare = loadable(\n\t() => import(\"../../../pages/CashFlowCanvas/compare\"),\n\t{ fallback: <LoadableFallback /> }\n)\n\n/**\n * Private route definitions, these pages should not be available\n * without the user entering a client\n *\n * @returns {ReactElement}\n */\nconst PrivateRoutesWrapper = (): ReactElement => {\n\treturn (\n\t\t<PrivatePage>\n\t\t\t<Route path={PrivateRoutes.CoachingKit}>\n\t\t\t\t<CoachingKit />\n\t\t\t</Route>\n\t\t\t<Route path={PrivateRoutes.SessionFiles}>\n\t\t\t\t<SessionFiles />\n\t\t\t</Route>\n\t\t\t<Route exact path={PrivateRoutes.HealthCheckQuiz}>\n\t\t\t\t<HCQuestionnaire />\n\t\t\t</Route>\n\t\t\t<Route exact path={PrivateRoutes.HealthCheckList}>\n\t\t\t\t<HCListing />\n\t\t\t</Route>\n\t\t\t<Route exact path={PrivateRoutes.HealthCheckSummary}>\n\t\t\t\t<HCSummary />\n\t\t\t</Route>\n\t\t\t<Route path={PrivateRoutes.DiscoverTopics}>\n\t\t\t\t<DTListing />\n\t\t\t</Route>\n\n\t\t\t<CFCProvider>\n\t\t\t\t<Route path={PrivateRoutes.CFC} exact>\n\t\t\t\t\t<CFCCanvas />\n\t\t\t\t</Route>\n\t\t\t\t<Route path={PrivateRoutes.CFCEdit}>\n\t\t\t\t\t<CanvasEdit />\n\t\t\t\t</Route>\n\t\t\t\t<Route path={PrivateRoutes.CFCListing}>\n\t\t\t\t\t<CFCListing />\n\t\t\t\t</Route>\n\t\t\t\t<Route path={PrivateRoutes.CFCCompare}>\n\t\t\t\t\t<CFCCompare />\n\t\t\t\t</Route>\n\t\t\t</CFCProvider>\n\n\t\t\t{/*\n\t\t\t\tWrap change levers and action checklist in provider since\n\t\t\t\tthey require the state values provided by this context setup\n\t\t\t*/}\n\t\t\t<ActionChecklistProvider>\n\t\t\t\t<Route path={PrivateRoutes.ClientList}>\n\t\t\t\t\t<ClientList />\n\t\t\t\t</Route>\n\n\t\t\t\t<Route path={PrivateRoutes.ChangeLevers}>\n\t\t\t\t\t<ChangeLevers />\n\t\t\t\t</Route>\n\t\t\t\t<Route path={PrivateRoutes.ActionChecklist}>\n\t\t\t\t\t<ActionChecklist />\n\t\t\t\t</Route>\n\n\t\t\t\t<Route path={PrivateRoutes.DTFundingBusiness}>\n\t\t\t\t\t<DTFundingBusiness />\n\t\t\t\t</Route>\n\t\t\t\t<Route path={PrivateRoutes.DTManagingCashFlow}>\n\t\t\t\t\t<DTManagingCashFlow />\n\t\t\t\t</Route>\n\t\t\t\t<Route path={PrivateRoutes.DTPlanningBusiness}>\n\t\t\t\t\t<DTPlanningBusiness />\n\t\t\t\t</Route>\n\t\t\t\t<Route path={PrivateRoutes.DTPlanningFinanicalCommitments}>\n\t\t\t\t\t<DTPlanningFinanicalCommitments />\n\t\t\t\t</Route>\n\t\t\t\t<Route path={PrivateRoutes.DTRecordKeeping}>\n\t\t\t\t\t<DTRecordKeeping />\n\t\t\t\t</Route>\n\t\t\t\t<Route path={PrivateRoutes.DTSellingClosingSuccession}>\n\t\t\t\t\t<DTSellingClosingSuccession />\n\t\t\t\t</Route>\n\t\t\t\t<Route path={PrivateRoutes.DTTrackingPerformance}>\n\t\t\t\t\t<DTTrackingPerformance />\n\t\t\t\t</Route>\n\t\t\t</ActionChecklistProvider>\n\t\t</PrivatePage>\n\t)\n}\n\nexport default PrivateRoutesWrapper\n","import React, { ReactElement, MouseEvent } from \"react\"\nimport { Button } from \"@material-ui/core\"\n\nexport default function SkipToContent(): ReactElement {\n\treturn (\n\t\t<nav id=\"top\" aria-labelledby=\"skip-link\">\n\t\t\t<Button\n\t\t\t\tcomponent=\"a\"\n\t\t\t\thref=\"#main-page-container\"\n\t\t\t\tid=\"skip-link\"\n\t\t\t\tclassName=\"visually-hidden focusable\"\n\t\t\t\tcolor=\"primary\"\n\t\t\t\tvariant=\"contained\"\n\t\t\t\tsize=\"large\"\n\t\t\t\tonClick={(e: MouseEvent<HTMLAnchorElement>): void => {\n\t\t\t\t\te.preventDefault()\n\t\t\t\t\tconst container: HTMLDivElement | null = document.querySelector(\n\t\t\t\t\t\t\"#main-page-container\"\n\t\t\t\t\t)\n\t\t\t\t\tif (container) {\n\t\t\t\t\t\tcontainer.focus()\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tSkip to main content\n\t\t\t</Button>\n\t\t</nav>\n\t)\n}\n","import React, { ReactElement, useEffect, useContext } from \"react\"\nimport { HashRouter as Router, Switch, useLocation } from \"react-router-dom\"\nimport PublicRoutesWrapper from \"./Public\"\nimport PrivateRoutesWrapper from \"./Private\"\nimport syncClientsWithDb from \"../../data/client/syncWithDB\"\nimport { ClientContext } from \"../../state/client\"\nimport SkipToContent from \"../SkipToContent\"\n\n/**\n * Function to scroll to the top of the page on page change\n *\n * @see https://reacttraining.com/react-router/web/guides/scroll-restoration\n * @returns {null}\n */\nfunction ScrollToTop(): null {\n\tconst { pathname } = useLocation()\n\n\tuseEffect(() => {\n\t\twindow.scrollTo(0, 0)\n\t}, [pathname])\n\n\treturn null\n}\n\n/**\n * Application router component\n *\n * @returns {ReactElement}\n */\nconst AppRouter = (): ReactElement => {\n\tconst { dispatch } = useContext(ClientContext)\n\n\tuseEffect(() => {\n\t\t;(async function sync(): Promise<void> {\n\t\t\tawait syncClientsWithDb(dispatch)\n\t\t})()\n\t}, [dispatch])\n\n\treturn (\n\t\t<Router>\n\t\t\t<ScrollToTop />\n\t\t\t<Switch>\n\t\t\t\t<>\n\t\t\t\t\t<SkipToContent />\n\t\t\t\t\t<PublicRoutesWrapper />\n\t\t\t\t\t{/* TODO: Hide if the user does not have any clients */}\n\t\t\t\t\t<PrivateRoutesWrapper />\n\t\t\t\t</>\n\t\t\t</Switch>\n\t\t</Router>\n\t)\n}\n\nexport default AppRouter\n","import React, { ReactElement } from \"react\"\nimport { AppRouter } from \"./components/Routing\"\nimport { ClientProvider } from \"./state/client\"\n\nconst App = (): ReactElement => {\n\treturn (\n\t\t<ClientProvider>\n\t\t\t<AppRouter />\n\t\t</ClientProvider>\n\t)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === \"localhost\" ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === \"[::1]\" ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n)\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn\n\t\t}\n\n\t\twindow.addEventListener(\"load\", () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config)\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\n\t\t\t\t\t\t\t\"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\"New content is available and will be used when all \" +\n\t\t\t\t\t\t\t\t\t\"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\")\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error(\"Error during service worker registration:\", error)\n\t\t})\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { \"Service-Worker\": \"script\" },\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get(\"content-type\")\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf(\"javascript\") === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload()\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t\"No internet connection found. App is running in offline mode.\"\n\t\t\t)\n\t\t})\n}\n\nexport function unregister() {\n\tif (\"serviceWorker\" in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then((registration) => {\n\t\t\t\tregistration.unregister()\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.message)\n\t\t\t})\n\t}\n}\n","import \"core-js/modules/es.promise\"\nimport \"core-js/modules/es.object.assign\"\nimport \"core-js/modules/es.object.keys\"\nimport \"regenerator-runtime/runtime\"\nimport \"react-app-polyfill/ie11\"\nimport \"react-app-polyfill/stable\"\n\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./theme/sass/style.scss\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n\nif (process.env.NODE_ENV === \"production\") {\n\t// eslint-disable-next-line\n\twindow.onbeforeunload = function (e: any): any {\n\t\t// eslint-disable-next-line\n\t\te = e || window.event\n\t\t// old browsers\n\t\tif (e) {\n\t\t\t// eslint-disable-next-line\n\t\t\te.returnValue = \"Sure?\"\n\t\t}\n\t\t// safari, chrome(chrome ignores text)\n\t\treturn \"Sure?\"\n\t}\n}\n","export { default } from \"./Spacer\"\n","import { Dispatch } from \"react\"\nimport {\n\tClientDataStruct,\n\tClientId,\n\tHealthCheckId,\n} from \"../../data/_config/shape\"\n\n/**\n * Actions that can be performed for state changes\n *\n * @export\n * @enum {number}\n */\nexport enum ClientActionTypes {\n\tAddClient = \"add_client\",\n\tRemoveClient = \"remove_client\",\n\tBulkAdd = \"bulk_add\",\n\tChangeCurrentClient = \"change_current_client\",\n\tUpdateClientSynced = \"change_client_syned\",\n\tUpdateLastViewedHC = \"change_last_viewed_hc\",\n}\n\nexport type LastViewedHC = HealthCheckId | null\n\n/**\n * Defines the type:payload type pairing\n * aka; what the structure of the payload should be\n * given a certain type\n *\n * @exports\n * @type IClientReducerAction\n */\nexport type IClientReducerAction =\n\t| { type: ClientActionTypes.AddClient; payload: ClientDataStruct }\n\t| { type: ClientActionTypes.RemoveClient; payload: ClientId }\n\t| { type: ClientActionTypes.BulkAdd; payload: ClientDataStruct[] }\n\t| { type: ClientActionTypes.ChangeCurrentClient; payload: ClientId }\n\t| { type: ClientActionTypes.UpdateClientSynced; payload: boolean }\n\t| {\n\t\t\ttype: ClientActionTypes.UpdateLastViewedHC\n\t\t\tpayload: LastViewedHC\n\t  }\n\n/**\n * Data structure for the state object\n *\n * @export\n * @interface IClientData\n */\nexport interface IClientData {\n\tclients: ClientDataStruct[]\n\tcurrentClient?: ClientDataStruct\n\tclientSynced: boolean\n\tlastViewedHC: LastViewedHC\n}\n\n/**\n * Strcuture for the client context\n *\n * @export\n * @interface IClientState\n */\nexport interface IClientState {\n\tstate: IClientData\n\tdispatch: Dispatch<IClientReducerAction>\n}\n","import { IClientState } from \"../client-outline\"\nimport { ClientDataStruct } from \"../../../data/_config/shape\"\n\nconst addClient = (\n\tstate: IClientState,\n\tpayload: ClientDataStruct\n): IClientState => {\n\tconst newClients = state.state.clients.concat(payload)\n\treturn {\n\t\t...state,\n\t\tstate: {\n\t\t\t...state.state,\n\t\t\tclients: newClients,\n\t\t},\n\t}\n}\n\nexport default addClient\n","import { IClientState } from \"../client-outline\"\nimport { ClientDataStruct } from \"../../../data/_config/shape\"\n\nconst bulkAdd = (\n\tstate: IClientState,\n\tpayload: ClientDataStruct[]\n): IClientState => {\n\treturn {\n\t\t...state,\n\t\tstate: {\n\t\t\t...state.state,\n\t\t\tclients: payload,\n\t\t},\n\t}\n}\n\nexport default bulkAdd\n","import { IClientState } from \"../client-outline\"\nimport { ClientId } from \"../../../data/_config/shape\"\nimport filterById from \"../../../util/filters/ById\"\nimport {\n\tsetStorageClient,\n\temptyClientValue,\n} from \"../../../util/localStorage/client\"\n\nconst changeCurrentClient = (\n\tstate: IClientState,\n\tpayload: ClientId\n): IClientState => {\n\tconst client = state.state.clients.find(filterById(payload))\n\tsetStorageClient(client?.id || emptyClientValue)\n\n\treturn {\n\t\t...state,\n\t\tstate: {\n\t\t\t...state.state,\n\t\t\tcurrentClient: client,\n\t\t},\n\t}\n}\n\nexport default changeCurrentClient\n","import { IClientState } from \"../client-outline\"\n\nconst updateClientSynced = (\n\tstate: IClientState,\n\tpayload: boolean\n): IClientState => {\n\treturn {\n\t\t...state,\n\t\tstate: {\n\t\t\t...state.state,\n\t\t\tclientSynced: payload,\n\t\t},\n\t}\n}\n\nexport default updateClientSynced\n","import { IClientState } from \"../client-outline\"\nimport { ClientId } from \"../../../data/_config/shape\"\nimport filterById from \"../../../util/filters/ById\"\nimport hasProperty from \"../../../util/object/hasProperty\"\nimport {\n\tsetStorageClient,\n\temptyClientValue,\n\tremoveStorageClient,\n} from \"../../../util/localStorage/client\"\n\nconst removeClient = (state: IClientState, payload: ClientId): IClientState => {\n\tconst clients = state.state.clients.filter(filterById(payload, true))\n\tconst currentClient =\n\t\t!hasProperty(state.state.currentClient, \"id\") ||\n\t\tstate.state.currentClient?.id === payload\n\t\t\t? clients[0]\n\t\t\t: state.state.currentClient\n\n\tsetStorageClient(currentClient?.id || emptyClientValue)\n\n\tif (clients.length === 0) {\n\t\tremoveStorageClient()\n\t}\n\n\treturn {\n\t\t...state,\n\t\tstate: {\n\t\t\t...state.state,\n\t\t\tcurrentClient,\n\t\t\tclients,\n\t\t},\n\t}\n}\n\nexport default removeClient\n","import { IClientState, LastViewedHC } from \"../client-outline\"\n\nconst changeLastViewedHC = (\n\tstate: IClientState,\n\tpayload: LastViewedHC\n): IClientState => {\n\treturn {\n\t\t...state,\n\t\tstate: {\n\t\t\t...state.state,\n\t\t\tlastViewedHC: payload,\n\t\t},\n\t}\n}\n\nexport default changeLastViewedHC\n","/* eslint-disable no-unreachable */\nimport { Reducer } from \"react\"\nimport {\n\tIClientState,\n\tIClientReducerAction,\n\tClientActionTypes,\n} from \"./client-outline\"\nimport {\n\taddClient,\n\tbulkAdd,\n\tchangeCurrentClient,\n\tupdateClientSynced,\n\tremoveClient,\n} from \"./actions\"\nimport changeLastViewedHC from \"./actions/changeLastViewedHC\"\n\n/**\n * Reducer used for the client state\n *\n * @param {IClientState} state Current state\n * @param {IClientReducerAction} action action to perform\n * @returns IClientState\n */\nconst ClientReducer: Reducer<IClientState, IClientReducerAction> = (\n\tstate: IClientState,\n\taction: IClientReducerAction\n): IClientState => {\n\tswitch (action.type) {\n\t\tcase ClientActionTypes.AddClient: {\n\t\t\treturn addClient(state, action.payload)\n\t\t}\n\t\tcase ClientActionTypes.RemoveClient: {\n\t\t\treturn removeClient(state, action.payload)\n\t\t}\n\t\tcase ClientActionTypes.BulkAdd: {\n\t\t\treturn bulkAdd(state, action.payload)\n\t\t}\n\t\tcase ClientActionTypes.ChangeCurrentClient: {\n\t\t\treturn changeCurrentClient(state, action.payload)\n\t\t}\n\t\tcase ClientActionTypes.UpdateClientSynced: {\n\t\t\treturn updateClientSynced(state, action.payload)\n\t\t}\n\t\tcase ClientActionTypes.UpdateLastViewedHC: {\n\t\t\treturn changeLastViewedHC(state, action.payload)\n\t\t}\n\t\tdefault: {\n\t\t\treturn state\n\t\t}\n\t}\n}\n\nexport default ClientReducer\n","import React, {\n\tuseReducer,\n\tReducer,\n\tReactElement,\n\tReactNode,\n\tuseMemo,\n} from \"react\"\nimport ClientReducer from \"./client-reducer\"\nimport { IClientState, IClientReducerAction } from \"./client-outline\"\nimport ClientContext, { defaultClientState } from \"./client-context\"\n\n/**\n * Context state provider element\n *\n * @param {ReactNode} {children}\n */\nconst ClientProvider = (props: { children: ReactNode }): ReactElement => {\n\tconst [state, dispatch] = useReducer<\n\t\tReducer<IClientState, IClientReducerAction>\n\t>(ClientReducer, defaultClientState)\n\n\tconst value = useMemo(\n\t\t(): IClientState => ({\n\t\t\t...state,\n\t\t\tdispatch,\n\t\t}),\n\t\t[state]\n\t)\n\n\t// eslint-disable-next-line react/jsx-props-no-spreading\n\treturn <ClientContext.Provider value={value} {...props} />\n}\n\nexport default ClientProvider\n","import { makeStyles } from \"@material-ui/core\"\nimport orange from \"@material-ui/core/colors/orange\"\n\nconst useInputWrapper = makeStyles((theme) => ({\n\twrapper: {\n\t\tbackground: \"white\",\n\t\tborderRadius: theme.shape.borderRadius,\n\t\tpadding: theme.spacing(2),\n\t\tboxShadow: theme.shadows[1],\n\t},\n\thighlight: {\n\t\tborderTop: `5px solid ${orange[500]}`,\n\t},\n\thighlightLeft: {\n\t\tborderLeft: `5px solid ${orange[500]}`,\n\t},\n\tplain: {\n\t\tboxShadow: \"none\",\n\t},\n}))\n\nconst useCustomTitleStyles = makeStyles((theme) => ({\n\tcheckboxRoot: {\n\t\tdisplay: \"flex\",\n\t\talignItems: \"center\",\n\t},\n\ttextField: {\n\t\tmarginBottom: theme.spacing(1),\n\t},\n\tdivider: {\n\t\tmargin: `${theme.spacing(2)}px 0`,\n\t},\n}))\n\nconst useRepeaterStyles = makeStyles((theme) => ({\n\tbody: {\n\t\tpaddingRight: theme.spacing(0),\n\t\tpaddingLeft: theme.spacing(0),\n\t},\n\tform: {\n\t\toverflow: \"hidden\",\n\t\t[theme.breakpoints.down(\"sm\")]: {\n\t\t\toverflowX: \"scroll\",\n\t\t},\n\t},\n\tformInner: {\n\t\t[theme.breakpoints.down(\"sm\")]: {\n\t\t\tminWidth: theme.breakpoints.values.md,\n\t\t\tpaddingBottom: theme.spacing(1),\n\t\t},\n\t},\n\tmobileNotice: {\n\t\tdisplay: \"block\",\n\t\t[theme.breakpoints.up(\"sm\")]: {\n\t\t\tdisplay: \"none\",\n\t\t},\n\t},\n}))\n\n// eslint-disable-next-line import/prefer-default-export\nexport { useInputWrapper, useCustomTitleStyles, useRepeaterStyles }\n","import Dexie from \"dexie\"\nimport {\n\tActionChecklistStruct,\n\tActionChecklistId,\n\tActionChecklistPriorityStruct,\n\tActionChecklistPriorityId,\n\tActionChecklistNotesStruct,\n\tActionChecklistNotesId,\n} from \"../_config/shape\"\n\n/**\n * Database definition for the Action checklist data\n *\n * @class ActionChecklistDatabase\n * @extends {Dexie}\n */\nclass ActionChecklistDatabase extends Dexie {\n\t/**\n\t * Table used to store action item data\n\t *\n\t * @type {Dexie.Table<ActionChecklistStruct, ActionChecklistId>}\n\t * @memberof ActionChecklistDatabase\n\t */\n\tactionItems!: Dexie.Table<ActionChecklistStruct, ActionChecklistId>\n\n\t/**\n\t * Table used to store action item priority\n\t *\n\t * @type {Dexie.Table<\n\t * \t\tActionChecklistPriorityStruct,\n\t * \t\tActionChecklistPriorityId\n\t * \t>}\n\t * @memberof ActionChecklistDatabase\n\t */\n\tpriority!: Dexie.Table<\n\t\tActionChecklistPriorityStruct,\n\t\tActionChecklistPriorityId\n\t>\n\n\t/**\n\t * Table used to store action item notes\n\t *\n\t * @type {Dexie.Table<ActionChecklistNotesStruct, ActionChecklistNotesId>}\n\t * @memberof ActionChecklistDatabase\n\t */\n\tnotes!: Dexie.Table<ActionChecklistNotesStruct, ActionChecklistNotesId>\n\n\t/**\n\t * Creates an instance of ActionChecklistDatabase.\n\t *\n\t * @memberof ActionChecklistDatabase\n\t */\n\tconstructor() {\n\t\tsuper(\"ActionChecklistDatabase\")\n\t\tthis.applyMigrations()\n\n\t\tthis.actionItems = this.table(\"actionItems\")\n\t\tthis.priority = this.table(\"priority\")\n\t\tthis.notes = this.table(\"notes\")\n\n\t\tthis.replaceIdsWithStrings()\n\t}\n\n\t/**\n\t * Applys the migration for the database.\n\t * Add new migrations when the database needs to update\n\t *\n\t * @private\n\t * @memberof ActionChecklistDatabase\n\t */\n\tprivate applyMigrations(): void {\n\t\t// Version 1\n\t\t// Initial migration\n\t\tthis.version(1).stores({\n\t\t\tactionItems: \"++id, clientId, actionContainer, completed, description\",\n\t\t\tpriority: \"++id, actionContainer, *order\",\n\t\t})\n\n\t\t// Version 1.1\n\t\t// Add reviewBy to actionItems\n\t\tthis.version(1.1).stores({\n\t\t\tactionItems:\n\t\t\t\t\"++id, clientId, actionContainer, completed, description, reviewBy\",\n\t\t\tpriority: \"++id, actionContainer, *order\",\n\t\t})\n\n\t\t// Version 1.2\n\t\t// Add notes\n\t\tthis.version(1.2).stores({\n\t\t\tactionItems:\n\t\t\t\t\"++id, clientId, actionContainer, completed, description, reviewBy\",\n\t\t\tpriority: \"++id, actionContainer, *order, clientId\",\n\t\t\tnotes: \"++id, actionContainer, notes, clientId\",\n\t\t})\n\n\t\t// Version 1.3\n\t\t// Add compound index for [actionContainer+clientId]\n\t\tthis.version(1.3).stores({\n\t\t\tactionItems:\n\t\t\t\t\"++id, [actionContainer+clientId], completed, description, reviewBy\",\n\t\t\tpriority: \"++id, [actionContainer+clientId], *order\",\n\t\t\tnotes: \"++id, actionContainer, notes, clientId\",\n\t\t})\n\n\t\t// Version 2\n\t\t// Add compound index for [actionContainer+clientId]\n\t\tthis.version(2).stores({\n\t\t\tactionItems:\n\t\t\t\t\"++id, [actionContainer+clientId], clientId, completed, description, reviewBy\",\n\t\t\tpriority: \"++id, [actionContainer+clientId], clientId, *order\",\n\t\t\tnotes: \"++id, actionContainer, notes, clientId\",\n\t\t})\n\n\t\t// Version 2.1\n\t\t// Add compound index for [actionContainer+clientId]\n\t\tthis.version(2.1).stores({\n\t\t\tactionItems:\n\t\t\t\t\"++id, [actionContainer+clientId], clientId, completed, description, reviewBy\",\n\t\t\tpriority: \"++id, [actionContainer+clientId], clientId, *order\",\n\t\t\tnotes: \"++id, [actionContainer+clientId], notes, clientId\",\n\t\t})\n\t}\n\n\tprivate replaceIdsWithStrings(): void {\n\t\tthis.actionItems.toCollection().modify((items) => {\n\t\t\tif (typeof items.id === \"number\") {\n\t\t\t\titems.id = `${items.id}`\n\t\t\t}\n\t\t\tif (typeof items.clientId === \"number\") {\n\t\t\t\titems.clientId = `${items.clientId}`\n\t\t\t}\n\t\t})\n\n\t\tthis.notes.toCollection().modify((note) => {\n\t\t\tif (typeof note.id === \"number\") {\n\t\t\t\tnote.id = `${note.id}`\n\t\t\t}\n\t\t\tif (typeof note.clientId === \"number\") {\n\t\t\t\tnote.clientId = `${note.clientId}`\n\t\t\t}\n\t\t})\n\n\t\tthis.priority.toCollection().modify((prior) => {\n\t\t\tif (typeof prior.id === \"number\") {\n\t\t\t\tprior.id = `${prior.id}`\n\t\t\t}\n\t\t\tif (typeof prior.clientId === \"number\") {\n\t\t\t\tprior.clientId = `${prior.clientId}`\n\t\t\t}\n\t\t\tprior.order = prior.order.map((o) => (typeof o === \"number\" ? `${o}` : o))\n\t\t})\n\t}\n}\n\nconst ActionChecklistDB = new ActionChecklistDatabase()\n\nexport default ActionChecklistDB\n","import { Dispatch } from \"react\"\nimport {\n\tActionChecklistPriorityStruct,\n\tActionChecklistStruct,\n\tBaseActionChecklistStruct,\n\tActionChecklistId,\n\tActionChecklistNotesStruct,\n\tBaseActionChecklistNotesStruct,\n\tActionChecklistNotesId,\n\tActionChecklistPriorityId,\n} from \"../../data/_config/shape\"\n\n/**\n * Possible action item groups\n *\n * @export\n * @type\n */\nexport type PossibleActionItems =\n\t| \"cashInActions\"\n\t| \"cashOutActions\"\n\t| \"planningBusiness\"\n\t| \"recordKeeping\"\n\t| \"funding\"\n\t| \"managing\"\n\t| \"planningCommitments\"\n\t| \"tracking\"\n\t| \"transition\"\n\n/**\n * Actions that can be performed for state changes\n *\n * @export\n * @enum {number}\n */\nexport enum ActionChecklistActionTypes {\n\tChangeHideCompleted = \"change_hide_completed\",\n\tUpdateDatabaseSync = \"change_database_sync\",\n\tAddNewActionItem = \"add_new_action_item\",\n\tUpdateActionItem = \"update_action_item\",\n\tUpdatePriorityOrder = \"update_priority_order\",\n\tRemoveActionItem = \"remove_action_item\",\n\tAddNotes = \"add_notes\",\n\tUpdateNotes = \"update_notes\",\n\tRemoveNote = \"remove_note\",\n\tBulkAddActionItems = \"bulk_add_action_items\",\n}\n\n/**\n * Data structure used when running the `UpdateDatabaseSync` action\n *\n * @export\n * @interface IUpdateDatabaseSyncPayload\n */\nexport interface IUpdateDatabaseSyncPayload {\n\tdata: ActionChecklistStruct[]\n\tpriority: ActionChecklistPriorityStruct[]\n\tnotes: ActionChecklistNotesStruct[]\n}\n\n/**\n * Data structure used when running the `AddNewActionItem` action\n *\n * @export\n * @interface IAddNewActionItemPayload\n */\nexport interface IAddNewActionItemPayload {\n\tchecklist: ActionChecklistStruct\n\tpriority: ActionChecklistPriorityId\n}\n\n/**\n * Data structure used when running the `UpdateActionItem` action\n *\n * @export\n * @interface IUpdateActionItemPayload\n */\nexport interface IUpdateActionItemPayload {\n\tdata: BaseActionChecklistStruct\n\tid: ActionChecklistId\n}\n\n/**\n * Data structure used when running the `RemoveActionItem` action\n *\n * @export\n * @interface IRemoveActionItemPayload\n */\nexport interface IRemoveActionItemPayload {\n\ttargetId: ActionChecklistId\n\tpriorityId: ActionChecklistPriorityId\n}\n\n/**\n * Data structure used when running the `UpdateNotes` action\n *\n * @export\n * @interface IUpdateNotesPayload\n */\nexport interface IUpdateNotesPayload {\n\tdata: BaseActionChecklistNotesStruct\n\tid: ActionChecklistNotesId\n}\n\nexport interface IBulkAddActionItemsPayload {\n\titems: ActionChecklistStruct[]\n\tpriorityId: ActionChecklistPriorityId\n}\n\n/**\n * Defines the type:payload type pairing\n * aka; what the structure of the payload should be\n * given a certain type\n *\n * @export\n * @type ActionChecklistReducerActions\n */\nexport type ActionChecklistReducerActions =\n\t| { type: ActionChecklistActionTypes.ChangeHideCompleted; payload: boolean }\n\t| {\n\t\t\ttype: ActionChecklistActionTypes.UpdateDatabaseSync\n\t\t\tpayload: IUpdateDatabaseSyncPayload\n\t  }\n\t| {\n\t\t\ttype: ActionChecklistActionTypes.AddNewActionItem\n\t\t\tpayload: IAddNewActionItemPayload\n\t  }\n\t| {\n\t\t\ttype: ActionChecklistActionTypes.UpdateActionItem\n\t\t\tpayload: IUpdateActionItemPayload\n\t  }\n\t| {\n\t\t\ttype: ActionChecklistActionTypes.UpdatePriorityOrder\n\t\t\tpayload: ActionChecklistPriorityStruct\n\t  }\n\t| {\n\t\t\ttype: ActionChecklistActionTypes.RemoveActionItem\n\t\t\tpayload: IRemoveActionItemPayload\n\t  }\n\t| {\n\t\t\ttype: ActionChecklistActionTypes.AddNotes\n\t\t\tpayload: ActionChecklistNotesStruct\n\t  }\n\t| {\n\t\t\ttype: ActionChecklistActionTypes.UpdateNotes\n\t\t\tpayload: IUpdateNotesPayload\n\t  }\n\t| {\n\t\t\ttype: ActionChecklistActionTypes.RemoveNote\n\t\t\tpayload: ActionChecklistNotesId\n\t  }\n\t| {\n\t\t\ttype: ActionChecklistActionTypes.BulkAddActionItems\n\t\t\tpayload: IBulkAddActionItemsPayload\n\t  }\n\n/**\n * Structure for the action checklist context\n *\n * @export\n * @interface IActionChecklistState\n */\nexport interface IActionChecklistState {\n\thideCompleted: boolean\n\tdatabaseSyced: boolean\n\tpriority: ActionChecklistPriorityStruct[]\n\tchecklistCollection: ActionChecklistStruct[]\n\tnotes: ActionChecklistNotesStruct[]\n\tdispatch: Dispatch<ActionChecklistReducerActions>\n}\n","import React, { ReactElement } from \"react\"\nimport { Box, useTheme } from \"@material-ui/core\"\n\ntype SpacerProps = {\n\tspace?: number\n}\n\n/**\n * Component used to add some additional spacing between components\n *\n * @export\n * @param {SpacerProps} { space = 2 }\n * @returns {ReactElement}\n */\nexport default function Spacer({ space = 2 }: SpacerProps): ReactElement {\n\tconst theme = useTheme()\n\treturn <Box style={{ marginTop: theme.spacing(space) }} />\n}\n"],"sourceRoot":""}