{"version":3,"sources":["content/tips lazy /^/.//.*$/ groupOptions: {} namespace object","components/PageTip/_config/style.ts","components/PageTip/_partials/AsyncTip.tsx","components/PageTip/PageTip.tsx","components/HealthCheck/FourQuestions/FourQuestions.tsx","components/HealthCheck/FourQuestions/_config/utilities.tsx","components/Forms/CFC/__config/styles.ts","components/Forms/CFC/onCreate.ts","components/Forms/CFC/CanvasCreate.tsx","pages/CashFlowCanvas/canvas.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","usePageTipStyles","makeStyles","theme","root","position","left","spacing","bottom","icon","marginRight","drawer","padding","maxWidth","width","closeBox","display","justifyContent","marginBottom","paddingBottom","borderBottom","borderBottomColor","palette","grey","borderBottomStyle","AsyncTip","loadable","props","tip","fallback","Loading","PageTip","style","useState","drawerOpen","setDrawerOpen","toggleDrawer","open","event","KeyboardEvent","type","key","className","Fab","color","onClick","variant","Drawer","anchor","onClose","classes","paper","Box","Typography","Button","startIcon","FourQuestions","answers","styles","useFourQsStyles","ExpandableNav","title","box","List","list","fourQuestionsContent","content","idx","component","ListItem","listItem","listItemFirst","ListItemText","listItemText","answerIconRoot","answer","opt","getOptionByAnswer","answerTheming","Icon","getIcon","fontWeight","questions","options","answerText","useStyles","alignItems","breakpoints","down","flexDirection","saveButton","up","marginLeft","values","client","a","CFCUseCase","create","clientId","createdAt","newTimestamp","onCreate","CreateCanvasForm","useCustomTitle","setUseCustomTitle","history","useHistory","useCurrentClient","currentClient","useContext","CFCContext","duplicateError","invalidDateError","useFormik","initialValues","onSubmit","formValues","query","createURLParams","push","routeVarReplacement","PrivateRoutes","CFCEdit","setFieldValue","handleChange","handleSubmit","useEffect","canvasTitle","canvasType","canvasTimeFrame","canvasStartDate","canvasEndDate","changeDateValue","k","v","changeDate","start","end","inputChange","useCallback","timeframe","startDate","endDate","customTitle","canvasTypeValue","canvasTimeframeValue","onChange","onDateChange","changeCheck","target","checked","Spacer","disabled","CFCCanvas","Grid","container","item","xs","md","ControlPanel"],"mappings":"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","file":"static/js/38.78678adc.chunk.js","sourcesContent":["var map = {\n\t\"./ActionChecklistTip\": [\n\t\t803,\n\t\t3\n\t],\n\t\"./ActionChecklistTip.tsx\": [\n\t\t803,\n\t\t3\n\t],\n\t\"./CFCanvasTip\": [\n\t\t804,\n\t\t4\n\t],\n\t\"./CFCanvasTip.tsx\": [\n\t\t804,\n\t\t4\n\t],\n\t\"./ChangeLevers\": [\n\t\t805,\n\t\t5\n\t],\n\t\"./ChangeLevers.tsx\": [\n\t\t805,\n\t\t5\n\t],\n\t\"./ClientListTips\": [\n\t\t806,\n\t\t6\n\t],\n\t\"./ClientListTips.tsx\": [\n\t\t806,\n\t\t6\n\t],\n\t\"./CoachingKitTips\": [\n\t\t807,\n\t\t7\n\t],\n\t\"./CoachingKitTips.tsx\": [\n\t\t807,\n\t\t7\n\t],\n\t\"./DiscoverTopicsTips\": [\n\t\t808,\n\t\t8\n\t],\n\t\"./DiscoverTopicsTips.tsx\": [\n\t\t808,\n\t\t8\n\t],\n\t\"./HCQuestionnaire\": [\n\t\t809,\n\t\t9\n\t],\n\t\"./HCQuestionnaire.tsx\": [\n\t\t809,\n\t\t9\n\t],\n\t\"./style\": [\n\t\t801,\n\t\t10\n\t],\n\t\"./style.ts\": [\n\t\t801,\n\t\t10\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 810;\nmodule.exports = webpackAsyncContext;","import { makeStyles } from \"@material-ui/core/styles\"\n\nconst usePageTipStyles = makeStyles((theme) => ({\n\troot: {\n\t\tposition: \"fixed\",\n\t\tleft: theme.spacing(2),\n\t\tbottom: theme.spacing(2),\n\t},\n\ticon: {\n\t\tmarginRight: theme.spacing(1),\n\t},\n\tdrawer: {\n\t\tpadding: theme.spacing(2),\n\t\tmaxWidth: \"350px\",\n\t\twidth: \"100%\",\n\t},\n\tcloseBox: {\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"space-between\",\n\t\tmarginBottom: theme.spacing(2),\n\t\tpaddingBottom: theme.spacing(2),\n\t\tborderBottom: 1,\n\t\tborderBottomColor: theme.palette.grey[500],\n\t\tborderBottomStyle: \"solid\",\n\t},\n}))\n\nexport default usePageTipStyles\n","import React from \"react\"\nimport loadable from \"@loadable/component\"\nimport Loading from \"../../Loading\"\n\n/**\n * Loadable component to dynamically render the tip content\n *\n */\nconst AsyncTip = loadable(\n\t(props: { tip: string }) => import(`../../../content/tips/${props.tip}`),\n\t{\n\t\tfallback: <Loading />,\n\t}\n)\n\nexport default AsyncTip\n","import React, { ReactElement, useState, MouseEvent } from \"react\"\nimport { Fab, Drawer, Button, Box, Typography } from \"@material-ui/core\"\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\"\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\"\nimport usePageTipStyles from \"./_config/style\"\nimport { IPageTip } from \"./_config/shape\"\nimport { AsyncTip } from \"./_partials\"\n\n/**\n * Renders a page tip tooltip at the bottom left of the page\n *\n * @param {string} {tip} File name (no extension) for the tip component\n * @returns ReactElement\n */\nconst PageTip = ({ tip }: IPageTip): ReactElement => {\n\tconst style = usePageTipStyles()\n\tconst [drawerOpen, setDrawerOpen] = useState<boolean>(false)\n\n\t/**\n\t * Toggles the state of the drawer\n\t *\n\t * @param {Boolean} open State to change the drawer to\n\t * @param {KeyboardEvent|MouseEvent<HTMLButtonElement>} event Event generated by a keypress|click\n\t */\n\tconst toggleDrawer = (open: boolean) => (\n\t\tevent: KeyboardEvent | MouseEvent<HTMLButtonElement>\n\t): void => {\n\t\tif (event instanceof KeyboardEvent) {\n\t\t\tif (\n\t\t\t\tevent.type === \"keydown\" &&\n\t\t\t\t(event.key === \"Tab\" || event.key === \"Shift\")\n\t\t\t) {\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\n\t\t// Change the state of the drawer\n\t\tsetDrawerOpen(open)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div className={style.root}>\n\t\t\t\t<Fab color=\"secondary\" onClick={toggleDrawer(true)} variant=\"extended\">\n\t\t\t\t\t<HelpOutlineIcon className={style.icon} />\n\t\t\t\t\tTips\n\t\t\t\t</Fab>\n\t\t\t</div>\n\t\t\t<Drawer\n\t\t\t\tanchor=\"left\"\n\t\t\t\topen={drawerOpen}\n\t\t\t\tonClose={toggleDrawer(false)}\n\t\t\t\tclasses={{\n\t\t\t\t\tpaper: style.drawer,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Box className={style.closeBox}>\n\t\t\t\t\t<Typography variant=\"h6\">Tips</Typography>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={toggleDrawer(false)}\n\t\t\t\t\t\tstartIcon={<HighlightOffIcon />}\n\t\t\t\t\t>\n\t\t\t\t\t\tClose\n\t\t\t\t\t</Button>\n\t\t\t\t</Box>\n\n\t\t\t\t<AsyncTip tip={tip} />\n\t\t\t</Drawer>\n\t\t</>\n\t)\n}\n\nexport default PageTip\n","import React, { ReactElement } from \"react\"\nimport { List, ListItem, ListItemText, Box } from \"@material-ui/core\"\nimport { fourQuestionsContent, answerTheming } from \"../_config/data\"\nimport useFourQsStyles from \"./_config/styles\"\nimport { IFourQuestionsProps } from \"./_config/shape\"\nimport { answerText } from \"./_config/utilities\"\nimport ExpandableNav from \"../../ExpandableNav\"\nimport { getOptionByAnswer } from \"../_config/utilities\"\nimport { QuestionOptions } from \"../_config/shape\"\n\n/**\n * Component to render the Four key questions with optional\n * answers, used on the questionnaire summary page\n *\n * @param {QuestionOptions[]} { answers? }\n * @returns ReactElement\n */\nconst FourQuestions = ({ answers }: IFourQuestionsProps): ReactElement => {\n\tconst styles = useFourQsStyles()\n\n\t/**\n\t * Renders the answer related icon next to the question\n\t *\n\t * @param {QuestionOptions} answer\n\t * @returns {ReactElement}\n\t */\n\tconst getIcon = (answer: QuestionOptions): ReactElement => {\n\t\tconst opt = getOptionByAnswer(answer, answerTheming)\n\t\tif (opt) {\n\t\t\treturn <opt.Icon style={{ color: opt.color }} />\n\t\t}\n\n\t\treturn <></>\n\t}\n\n\treturn (\n\t\t<ExpandableNav title=\"Four key questions\">\n\t\t\t<Box className={styles.box}>\n\t\t\t\t<List className={styles.list}>\n\t\t\t\t\t{fourQuestionsContent.map(\n\t\t\t\t\t\t(content: string, idx: number): ReactElement => (\n\t\t\t\t\t\t\t<Box key={content} component=\"li\">\n\t\t\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t\t\tcomponent=\"div\"\n\t\t\t\t\t\t\t\t\tclassName={`${styles.listItem} ${\n\t\t\t\t\t\t\t\t\t\tidx === 0 ? styles.listItemFirst : \"\"\n\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<ListItemText className={styles.listItemText}>\n\t\t\t\t\t\t\t\t\t\t{`${idx + 1}. ${content}`}\n\t\t\t\t\t\t\t\t\t\t<Box className={styles.answerIconRoot}>\n\t\t\t\t\t\t\t\t\t\t\t{answers?.[idx] && getIcon(answers[idx])}\n\t\t\t\t\t\t\t\t\t\t\t{answerText(idx, answers)}\n\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t</ListItemText>\n\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t)\n\t\t\t\t\t)}\n\t\t\t\t</List>\n\t\t\t</Box>\n\t\t</ExpandableNav>\n\t)\n}\n\nexport default FourQuestions\n","/* eslint-disable import/prefer-default-export */\n\nimport React, { ReactElement } from \"react\"\nimport { Typography } from \"@material-ui/core\"\nimport { QuestionOptions } from \"../../_config/shape\"\nimport { getOptionByAnswer } from \"../../_config/utilities\"\nimport { answerTheming, questions } from \"../../_config/data\"\n\n/**\n * Checks if a question has a answer and displays the answer\n * with a theme\n *\n * @param {number} idx Question index\n * @param {QuestionOptions[]|undefined} answers Answers given in the quiz\n * @returns (boolean | ReactElement)\n */\nexport const answerText = (\n\tidx: number,\n\tanswers: QuestionOptions[] | undefined\n): ReactElement | boolean => {\n\tif (answers && typeof answers[idx] !== \"undefined\") {\n\t\tconst { color } = getOptionByAnswer(answers[idx], answerTheming)\n\t\treturn (\n\t\t\t<Typography style={{ color, fontWeight: 500 }}>\n\t\t\t\t{questions[idx].options[answers[idx]]}\n\t\t\t</Typography>\n\t\t)\n\t}\n\n\treturn false\n}\n","import { makeStyles } from \"@material-ui/core\"\n\nconst useStyles = makeStyles((theme) => ({\n\tbox: {\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"flex-end\",\n\t\talignItems: \"center\",\n\t\t[theme.breakpoints.down(\"sm\")]: {\n\t\t\tflexDirection: \"column\",\n\t\t\talignItems: \"flex-start\",\n\t\t},\n\t},\n\tsaveButton: {\n\t\t[theme.breakpoints.up(\"md\")]: {\n\t\t\tmarginLeft: theme.spacing(1),\n\t\t},\n\t},\n}))\n\nexport default useStyles\n","import {\n\tBaseCFCStruct,\n\tClientId,\n\tDatabaseId,\n} from \"../../../data/_config/shape\"\nimport CFCUseCase from \"../../../data/CFC/CFCLogic\"\nimport { newTimestamp } from \"../../../util/dates\"\n\n/**\n * Creates a CFC and returns the CFC id\n *\n * @param {BaseCFCStruct} values\n * @param {ClientId} client\n * @returns {Promise<number>}\n */\nasync function onCreate(\n\tvalues: BaseCFCStruct,\n\tclient: ClientId\n): Promise<DatabaseId> {\n\tconst id = await CFCUseCase.create({\n\t\t...values,\n\t\tclientId: client,\n\t\tcreatedAt: newTimestamp(),\n\t})\n\n\treturn id\n}\n\nexport default onCreate\n","import React, {\n\tReactElement,\n\tuseState,\n\tuseCallback,\n\tuseContext,\n\tuseEffect,\n} from \"react\"\nimport { useFormik } from \"formik\"\nimport { Button, Box } from \"@material-ui/core\"\nimport { useHistory } from \"react-router-dom\"\nimport { BaseCFCStruct } from \"../../../data/_config/shape\"\nimport { initialValues } from \".\"\nimport { ConfigPanel, CanvasTitle } from \"../../CFC\"\nimport onCreate from \"./onCreate\"\nimport Spacer from \"../../Spacer/Spacer\"\nimport { routeVarReplacement, PrivateRoutes } from \"../../../util/routes/routes\"\nimport useCurrentClient from \"../../../state/client/useCurrentClient\"\nimport useStyles from \"./__config/styles\"\nimport createURLParams from \"./createURLParams\"\nimport changeDate, { CanvasDateKeys } from \"./changeDate\"\nimport CFCContext from \"../../../state/CFC/context\"\n\n/**\n * Create canvas form.\n *\n * @export\n * @returns {ReactElement}\n */\nexport default function CreateCanvasForm(): ReactElement {\n\tconst styles = useStyles()\n\n\tconst [useCustomTitle, setUseCustomTitle] = useState(true)\n\tconst history = useHistory()\n\tconst [currentClient] = useCurrentClient()\n\tconst { duplicateError, invalidDateError } = useContext(CFCContext)\n\n\tconst { setFieldValue, handleChange, values, handleSubmit } = useFormik<\n\t\tBaseCFCStruct\n\t>({\n\t\tinitialValues,\n\t\tonSubmit: async (formValues: BaseCFCStruct) => {\n\t\t\tif (currentClient?.id) {\n\t\t\t\tconst id = await onCreate(formValues, currentClient.id)\n\t\t\t\t// Creates some url search parameters to pass onto the edit page\n\t\t\t\tconst query = createURLParams(formValues, useCustomTitle)\n\n\t\t\t\t// Redirects the user to the edit page\n\t\t\t\t// eslint-disable-next-line\n\t\t\t\thistory.push(\n\t\t\t\t\t`${routeVarReplacement(PrivateRoutes.CFCEdit, [\n\t\t\t\t\t\t[\":id\", `${id}`],\n\t\t\t\t\t])}?${query}`\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t})\n\n\tuseEffect(() => {\n\t\tif (!useCustomTitle) {\n\t\t\tsetFieldValue(\"canvasTitle\", \"\")\n\t\t}\n\t}, [useCustomTitle, setFieldValue])\n\n\tconst {\n\t\tcanvasTitle,\n\t\tcanvasType,\n\t\tcanvasTimeFrame,\n\t\tcanvasStartDate,\n\t\tcanvasEndDate,\n\t} = values\n\n\t/**\n\t * A custom change handler for the datepicker\n\t *\n\t * @template K\n\t * @param {K} k\n\t * @param {BaseCFCStruct[K]} v\n\t */\n\tconst changeDateValue = (k: CanvasDateKeys, v: Date): void => {\n\t\tconst { canvasStartDate: start, canvasEndDate: end } = changeDate<\n\t\t\tBaseCFCStruct\n\t\t>(k, v, values)\n\n\t\t// Sets the field value\n\t\tsetFieldValue(\"canvasStartDate\", start, false)\n\t\tsetFieldValue(\"canvasEndDate\", end, false)\n\t}\n\n\tuseEffect(() => {\n\t\tchangeDateValue(\"canvasStartDate\", canvasStartDate)\n\t}, [canvasTimeFrame, canvasStartDate])\n\n\tconst inputChange = useCallback(handleChange, [])\n\n\tfunction disabledCreate(): boolean {\n\t\treturn (\n\t\t\tinvalidDateError ||\n\t\t\tduplicateError ||\n\t\t\t(useCustomTitle && canvasTitle === \"\")\n\t\t)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<CanvasTitle\n\t\t\t\t\ttype={canvasType}\n\t\t\t\t\ttimeframe={canvasTimeFrame}\n\t\t\t\t\tstartDate={canvasStartDate}\n\t\t\t\t\tendDate={canvasEndDate}\n\t\t\t\t\tcustomTitle={canvasTitle}\n\t\t\t\t\tuseCustomTitle={useCustomTitle}\n\t\t\t\t/>\n\t\t\t\t<ConfigPanel\n\t\t\t\t\tcanvasTypeValue={canvasType}\n\t\t\t\t\tcanvasTimeframeValue={canvasTimeFrame}\n\t\t\t\t\tonChange={inputChange}\n\t\t\t\t\tstartDate={canvasStartDate}\n\t\t\t\t\tendDate={canvasEndDate}\n\t\t\t\t\tonDateChange={changeDateValue}\n\t\t\t\t\tcustomTitle={canvasTitle}\n\t\t\t\t\tchangeCheck={(e: InputChange): void => {\n\t\t\t\t\t\tsetUseCustomTitle(e.target.checked)\n\t\t\t\t\t}}\n\t\t\t\t\tuseCustomTitle={useCustomTitle}\n\t\t\t\t/>\n\t\t\t\t<Spacer />\n\t\t\t\t<Box className={styles.box}>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tdisabled={disabledCreate()}\n\t\t\t\t\t>\n\t\t\t\t\t\tCreate Canvas\n\t\t\t\t\t</Button>\n\t\t\t\t</Box>\n\t\t\t</form>\n\t\t</>\n\t)\n}\n","import React, { ReactElement } from \"react\"\nimport { Grid } from \"@material-ui/core\"\nimport { PageContainer } from \"../../components/Layouts\"\nimport PageTip from \"../../components/PageTip\"\nimport CreateCanvasForm from \"../../components/Forms/CFC/CanvasCreate\"\nimport FourQuestions from \"../../components/HealthCheck/FourQuestions\"\nimport ControlPanel from \"../../components/CFC/ControlPanel\"\n\n/**\n * Create a CFC page\n *\n * @export\n * @returns {ReactElement}\n */\nexport default function CFCCanvas(): ReactElement {\n\treturn (\n\t\t<>\n\t\t\t<PageContainer maxWidth=\"lg\">\n\t\t\t\t<Grid container spacing={3}>\n\t\t\t\t\t<Grid item xs={12} md={9}>\n\t\t\t\t\t\t<CreateCanvasForm />\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} md={3}>\n\t\t\t\t\t\t<FourQuestions />\n\t\t\t\t\t\t<ControlPanel />\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</PageContainer>\n\t\t\t<PageTip tip=\"CFCanvasTip\" />\n\t\t</>\n\t)\n}\n"],"sourceRoot":""}