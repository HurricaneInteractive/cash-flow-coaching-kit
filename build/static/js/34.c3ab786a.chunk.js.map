{"version":3,"sources":["components/SnackbarMsg/SnackbarMsg.tsx","content/tips lazy /^/.//.*$/ groupOptions: {} namespace object","components/PageTip/_config/style.ts","components/PageTip/_partials/AsyncTip.tsx","components/PageTip/PageTip.tsx","components/SectionTitle/_config/styles.ts","components/SectionTitle/SectionTitle.tsx","data/healthChecks/HealthCheckLogic.ts","components/IconDeleteButton/IconDeleteButtonwDialog.tsx","components/ClientListing/_config/styles.ts","components/ClientListing/_partials/NoClients.tsx","components/ClientListing/_config/utilities.ts","components/ClientListing/_partials/ClientList.tsx","components/ClientListing/_partials/ImportClient.tsx","components/ClientListing/_config/machine.ts","modules/save-blob/index.ts","modules/export-client/index.ts","components/ClientListing/_partials/ExportClient.tsx","components/ClientListing/ClientListing.tsx","content/CoachingConversation/styles.ts","content/CoachingConversation/Prepare.tsx","content/CoachingConversation/Coaching.tsx","content/CoachingConversation/HealthCheck.tsx","content/CoachingConversation/DiscoverTopics.tsx","content/CoachingConversation/CFC.tsx","content/CoachingConversation/ChangeLevers.tsx","content/CoachingConversation/ActionChecklist.tsx","pages/client-list.tsx"],"names":["SnackbarMsg","open","msg","onClose","severity","autoHideDuration","anchorOrigin","vertical","horizontal","variant","action","size","aria-label","color","fontSize","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","usePageTipStyles","makeStyles","theme","root","position","left","spacing","bottom","icon","marginRight","drawer","padding","maxWidth","width","closeBox","display","justifyContent","marginBottom","paddingBottom","borderBottom","borderBottomColor","palette","grey","borderBottomStyle","AsyncTip","loadable","props","tip","fallback","Loading","PageTip","style","useState","drawerOpen","setDrawerOpen","toggleDrawer","event","KeyboardEvent","type","key","className","Fab","onClick","Drawer","anchor","classes","paper","Box","Typography","Button","startIcon","useSTStyles","title","fontWeight","breakpoints","down","typography","h5","SectionTitle","children","styles","HealthCheckUseCase","HealthCheckDB","healthChecks","clientId","this","database","transaction","table","name","where","first","equals","toArray","ILogicLayer","IconDeleteButtonwDialog","dialogOpen","setDialogOpen","onDialogClose","preventDefault","onCancel","onConfirm","useCLStyles","button","up","marginLeft","marginTop","actions","flexDirection","NoClients","CardContent","to","PublicRoutes","Home","deleteClientRelatedData","client","a","ClientUseCase","delete","deleteByClient","ActionChecklistUseCase","ActionPriorityUseCase","ActionNotesUseCase","CFCUseCase","ClientList","store","state","clients","currentClient","dispatch","showSnackbar","generateKey","ACDispatch","useContext","ActionChecklistContext","handleChange","console","log","ClientActionTypes","ChangeCurrentClient","payload","handleDelete","clientsCopy","clone","databaseDataDeleted","message","length","removeStorageClient","emptyClientValue","syncClientsWithDb","syncWithDatabase","checklists","priority","notes","ActionChecklistActionTypes","UpdateDatabaseSync","data","List","idx","ListItem","constructKey","ListItemText","primary","ListItemSecondaryAction","isClientSelected","Tooltip","IconButton","ImportClient","ClientListingMachine","Machine","initial","states","loading","on","IS_EMPTY","HAS_DATA","empty","saveBlob","blob","filename","navigator","msSaveBlob","blobUrl","URL","createObjectURL","link","document","createElement","setAttribute","body","appendChild","dispatchEvent","MouseEvent","bubbles","cancelable","view","window","removeChild","exportFilter","value","hasProperty","exportData","db","exportDB","filter","getDataAsJSON","readFile","text","json","JSON","parse","constructExportPayload","ClientDB","clientData","healthData","ActionChecklistDB","checklistData","CFCDB","cfcData","res","ClientDatabase","HealthCheckDatabase","ActionChecklistDatabase","CFCDatabase","ExportClient","findById","dbClient","Blob","stringify","replace","toLowerCase","ExportClientButton","processing","setProcessing","exportClient","useCallback","CircularProgress","ClientListing","clientStore","ClientContext","clientSynced","useMachine","send","snackbar","setSnackbar","handleClose","reason","useEffect","renderWithMachine","Divider","Card","Spacer","space","triggerText","useStyles","box","list","listStyle","paddingLeft","paddingTop","embed","minHeight","border","Prepare","cls","ExpandableNav","defaultExpanded","component","Coaching","CardHeader","CardMedia","src","CardActions","href","target","rel","HealthCheck","DiscoverTopics","CFC","ChangeLevers","ActionChecklist","tagline","align","Grid","container","item","xs","md"],"mappings":"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","file":"static/js/34.c3ab786a.chunk.js","sourcesContent":["import React, { ReactElement } from \"react\"\nimport Alert, { AlertProps } from \"@material-ui/lab/Alert\"\nimport { Snackbar, IconButton } from \"@material-ui/core\"\nimport CloseIcon from \"@material-ui/icons/Close\"\n\n// #region Interface Definitions\n/**\n * Data required for the snackbar\n * use this interface when defining the state\n *\n * @export\n * @interface SnackbarMsgData\n */\nexport interface SnackbarMsgData {\n\topen: boolean\n\tmsg: string\n\tseverity?: AlertProps[\"severity\"]\n}\n\n/**\n * Props required to be passed to the component\n *\n * @export\n * @interface SnackbarMsgProps\n * @extends {SnackbarMsgData}\n */\nexport interface SnackbarMsgProps extends SnackbarMsgData {\n\tonClose: (\n\t\tevent: React.SyntheticEvent | React.MouseEvent,\n\t\treason?: string\n\t) => void\n}\n// #endregion\n\n/**\n * Snackbar abstraction component, use this for a consistent\n * way to show messages to the user\n *\n * The component who uses this component will need to handle the\n * state of this component and pass down the props.\n *\n * See the README\n *\n * @export\n * @param {SnackbarMsgProps} {\n * \topen,\n * \tmsg,\n * \tonClose,\n * \tseverity = \"info\",\n * }\n * @returns {ReactElement}\n */\nexport default function SnackbarMsg({\n\topen,\n\tmsg,\n\tonClose,\n\tseverity = \"info\",\n}: SnackbarMsgProps): ReactElement {\n\treturn (\n\t\t<Snackbar\n\t\t\topen={open}\n\t\t\tautoHideDuration={2000}\n\t\t\tanchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n\t\t\tonClose={onClose}\n\t\t>\n\t\t\t<Alert\n\t\t\t\tseverity={severity}\n\t\t\t\tvariant=\"filled\"\n\t\t\t\taction={\n\t\t\t\t\t<IconButton size=\"small\" aria-label=\"close\" color=\"inherit\">\n\t\t\t\t\t\t<CloseIcon fontSize=\"small\" />\n\t\t\t\t\t</IconButton>\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t{msg}\n\t\t\t</Alert>\n\t\t</Snackbar>\n\t)\n}\n","var map = {\n\t\"./ActionChecklistTip\": [\n\t\t808,\n\t\t4\n\t],\n\t\"./ActionChecklistTip.tsx\": [\n\t\t808,\n\t\t4\n\t],\n\t\"./CFCanvasTip\": [\n\t\t809,\n\t\t5\n\t],\n\t\"./CFCanvasTip.tsx\": [\n\t\t809,\n\t\t5\n\t],\n\t\"./ChangeLevers\": [\n\t\t810,\n\t\t6\n\t],\n\t\"./ChangeLevers.tsx\": [\n\t\t810,\n\t\t6\n\t],\n\t\"./ClientListTips\": [\n\t\t811,\n\t\t7\n\t],\n\t\"./ClientListTips.tsx\": [\n\t\t811,\n\t\t7\n\t],\n\t\"./CoachingKitTips\": [\n\t\t812,\n\t\t8\n\t],\n\t\"./CoachingKitTips.tsx\": [\n\t\t812,\n\t\t8\n\t],\n\t\"./DiscoverTopicsTips\": [\n\t\t813,\n\t\t9\n\t],\n\t\"./DiscoverTopicsTips.tsx\": [\n\t\t813,\n\t\t9\n\t],\n\t\"./HCQuestionnaire\": [\n\t\t814,\n\t\t10\n\t],\n\t\"./HCQuestionnaire.tsx\": [\n\t\t814,\n\t\t10\n\t],\n\t\"./style\": [\n\t\t806,\n\t\t11\n\t],\n\t\"./style.ts\": [\n\t\t806,\n\t\t11\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 815;\nmodule.exports = webpackAsyncContext;","import { makeStyles } from \"@material-ui/core/styles\"\n\nconst usePageTipStyles = makeStyles((theme) => ({\n\troot: {\n\t\tposition: \"fixed\",\n\t\tleft: theme.spacing(2),\n\t\tbottom: theme.spacing(2),\n\t},\n\ticon: {\n\t\tmarginRight: theme.spacing(1),\n\t},\n\tdrawer: {\n\t\tpadding: theme.spacing(2),\n\t\tmaxWidth: \"350px\",\n\t\twidth: \"100%\",\n\t},\n\tcloseBox: {\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"space-between\",\n\t\tmarginBottom: theme.spacing(2),\n\t\tpaddingBottom: theme.spacing(2),\n\t\tborderBottom: 1,\n\t\tborderBottomColor: theme.palette.grey[500],\n\t\tborderBottomStyle: \"solid\",\n\t},\n}))\n\nexport default usePageTipStyles\n","import React from \"react\"\nimport loadable from \"@loadable/component\"\nimport Loading from \"../../Loading\"\n\n/**\n * Loadable component to dynamically render the tip content\n *\n */\nconst AsyncTip = loadable(\n\t(props: { tip: string }) => import(`../../../content/tips/${props.tip}`),\n\t{\n\t\tfallback: <Loading />,\n\t}\n)\n\nexport default AsyncTip\n","import React, { ReactElement, useState, MouseEvent } from \"react\"\nimport { Fab, Drawer, Button, Box, Typography } from \"@material-ui/core\"\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\"\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\"\nimport usePageTipStyles from \"./_config/style\"\nimport { IPageTip } from \"./_config/shape\"\nimport { AsyncTip } from \"./_partials\"\n\n/**\n * Renders a page tip tooltip at the bottom left of the page\n *\n * @param {string} {tip} File name (no extension) for the tip component\n * @returns ReactElement\n */\nconst PageTip = ({ tip }: IPageTip): ReactElement => {\n\tconst style = usePageTipStyles()\n\tconst [drawerOpen, setDrawerOpen] = useState<boolean>(false)\n\n\t/**\n\t * Toggles the state of the drawer\n\t *\n\t * @param {Boolean} open State to change the drawer to\n\t * @param {KeyboardEvent|MouseEvent<HTMLButtonElement>} event Event generated by a keypress|click\n\t */\n\tconst toggleDrawer = (open: boolean) => (\n\t\tevent: KeyboardEvent | MouseEvent<HTMLButtonElement>\n\t): void => {\n\t\tif (event instanceof KeyboardEvent) {\n\t\t\tif (\n\t\t\t\tevent.type === \"keydown\" &&\n\t\t\t\t(event.key === \"Tab\" || event.key === \"Shift\")\n\t\t\t) {\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\n\t\t// Change the state of the drawer\n\t\tsetDrawerOpen(open)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div className={style.root}>\n\t\t\t\t<Fab color=\"secondary\" onClick={toggleDrawer(true)} variant=\"extended\">\n\t\t\t\t\t<HelpOutlineIcon className={style.icon} />\n\t\t\t\t\tTips\n\t\t\t\t</Fab>\n\t\t\t</div>\n\t\t\t<Drawer\n\t\t\t\tanchor=\"left\"\n\t\t\t\topen={drawerOpen}\n\t\t\t\tonClose={toggleDrawer(false)}\n\t\t\t\tclasses={{\n\t\t\t\t\tpaper: style.drawer,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Box className={style.closeBox}>\n\t\t\t\t\t<Typography variant=\"h6\">Tips</Typography>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={toggleDrawer(false)}\n\t\t\t\t\t\tstartIcon={<HighlightOffIcon />}\n\t\t\t\t\t>\n\t\t\t\t\t\tClose\n\t\t\t\t\t</Button>\n\t\t\t\t</Box>\n\n\t\t\t\t<AsyncTip tip={tip} />\n\t\t\t</Drawer>\n\t\t</>\n\t)\n}\n\nexport default PageTip\n","import { makeStyles } from \"@material-ui/core\"\n\n// Section title styles\nconst useSTStyles = makeStyles((theme) => ({\n\ttitle: {\n\t\tfontWeight: 500,\n\t\tmarginBottom: theme.spacing(2),\n\t\t[theme.breakpoints.down(\"sm\")]: {\n\t\t\tfontSize: theme.typography.h5.fontSize,\n\t\t},\n\t},\n}))\n\nexport default useSTStyles\n","import React, { ReactElement } from \"react\"\nimport { Typography } from \"@material-ui/core\"\nimport { SectionTitleProps } from \"./_config/shape\"\nimport useSTStyles from \"./_config/styles\"\n\n/**\n * Abstraction for the Typography for a consistent heading for sections\n *\n * @param {SectionTitleProps} props Mimics the props for `<Typography>`\n * @returns ReactElement\n */\nconst SectionTitle = ({\n\tchildren,\n\tclassName,\n\t...props\n}: SectionTitleProps): ReactElement => {\n\tconst styles = useSTStyles()\n\treturn (\n\t\t<Typography\n\t\t\tvariant=\"h4\"\n\t\t\tcolor=\"textPrimary\"\n\t\t\tclassName={`${styles.title} ${className}`}\n\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t{...props}\n\t\t>\n\t\t\t{children}\n\t\t</Typography>\n\t)\n}\n\nexport default SectionTitle\n","import ILogicLayer from \"../_config/logicLayer\"\nimport HealthCheckDB from \"./HealthCheckDatabase\"\nimport {\n\tHealthCheckDataStruct,\n\tBaseHealthCheckStruct,\n\tHealthCheckId,\n\tClientId,\n} from \"../_config/shape\"\n\n/**\n * Logic implementation for the Health check database\n *\n * @class HealthCheckLogic\n * @extends {ILogicLayer<HealthCheckDataStruct, BaseHealthCheckStruct>}\n */\nclass HealthCheckLogic extends ILogicLayer<\n\tHealthCheckDataStruct,\n\tBaseHealthCheckStruct\n> {\n\t/**\n\t * Creates an instance of HealthCheckLogic.\n\t *\n\t * @memberof HealthCheckLogic\n\t */\n\tconstructor() {\n\t\tsuper(HealthCheckDB, HealthCheckDB.healthChecks)\n\t}\n\n\t/**\n\t * Finds a health check by the id and clientId\n\t *\n\t * @param {HealthCheckId} id\n\t * @param {ClientId} clientId\n\t * @returns {Promise<HealthCheckDataStruct>}\n\t * @memberof HealthCheckLogic\n\t */\n\tpublic findByClientId(\n\t\tid: HealthCheckId,\n\t\tclientId: ClientId\n\t): Promise<HealthCheckDataStruct | undefined> {\n\t\treturn this.database.transaction(\"r\", this.table.name, () => {\n\t\t\treturn this.table.where({ id, clientId }).first()\n\t\t})\n\t}\n\n\t/**\n\t * Finds all the health checks for a given client\n\t *\n\t * @param {ClientId} clientId\n\t * @returns {Promise<HealthCheckDataStruct[]>}\n\t * @memberof HealthCheckLogic\n\t */\n\tpublic findClientHealthChecks(\n\t\tclientId: ClientId\n\t): Promise<HealthCheckDataStruct[]> {\n\t\treturn this.database.transaction(\"r\", this.table.name, () => {\n\t\t\treturn this.table.where(\"clientId\").equals(clientId).toArray()\n\t\t})\n\t}\n}\n\n// Creates a instance of the logic class and exports the instance\nconst HealthCheckUseCase = new HealthCheckLogic()\n\nexport default HealthCheckUseCase\n","import React, { ReactElement, MouseEvent, useState } from \"react\"\nimport { ButtonProps } from \"./IconDeleteButton\"\nimport IconDeleteButton from \".\"\nimport ConfirmDialogue from \"../ConfirmDialogue\"\n\n/**\n * Icon delete button with a confirm dialog component\n *\n * @export\n * @param {ButtonProps} {\n * \tonClick,\n * }\n * @returns {ReactElement}\n */\nexport default function IconDeleteButtonwDialog({\n\tonClick,\n}: ButtonProps): ReactElement {\n\tconst [dialogOpen, setDialogOpen] = useState<boolean>(false)\n\n\t/**\n\t * Closes the dialog\n\t *\n\t */\n\tfunction onDialogClose(): void {\n\t\tsetDialogOpen(false)\n\t}\n\n\t/**\n\t * Performs onClick prop function\n\t *\n\t * @param {MouseEvent<HTMLButtonElement>} e\n\t */\n\tfunction onDialogConfirm(e: MouseEvent<HTMLButtonElement>): void {\n\t\tonClick(e)\n\t\tonDialogClose()\n\t}\n\n\t/**\n\t * Opens the dialog\n\t *\n\t * @param {MouseEvent<HTMLButtonElement>} e\n\t */\n\tfunction triggerDialog(e: MouseEvent<HTMLButtonElement>): void {\n\t\te.preventDefault()\n\t\tsetDialogOpen(true)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<IconDeleteButton onClick={triggerDialog} />\n\t\t\t<ConfirmDialogue\n\t\t\t\topen={dialogOpen}\n\t\t\t\tonClose={onDialogClose}\n\t\t\t\tonCancel={onDialogClose}\n\t\t\t\tonConfirm={onDialogConfirm}\n\t\t\t>\n\t\t\t\tAre you sure you want to remove this item?\n\t\t\t</ConfirmDialogue>\n\t\t</>\n\t)\n}\n","/* eslint-disable import/prefer-default-export */\nimport { makeStyles } from \"@material-ui/core\"\n\n// Client listing styles\nexport const useCLStyles = makeStyles((theme) => ({\n\tbutton: {\n\t\t[theme.breakpoints.up(\"sm\")]: {\n\t\t\tmarginLeft: theme.spacing(2),\n\t\t},\n\t\t[theme.breakpoints.down(\"sm\")]: {\n\t\t\tmarginLeft: 0,\n\t\t\tmarginTop: theme.spacing(2),\n\t\t},\n\t},\n\tactions: {\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"flex-end\",\n\t\t[theme.breakpoints.down(\"sm\")]: {\n\t\t\tflexDirection: \"column\",\n\t\t},\n\t},\n}))\n","import React, { ReactElement } from \"react\"\nimport { CardContent, Typography } from \"@material-ui/core\"\nimport { Link } from \"react-router-dom\"\nimport { PublicRoutes } from \"../../../util/routes/routes\"\n\nconst NoClients = (): ReactElement => {\n\treturn (\n\t\t<CardContent>\n\t\t\t<Typography variant=\"h6\">No clients found</Typography>\n\t\t\t<Typography>\n\t\t\t\tYou are able to import previously exported clients or go{\" \"}\n\t\t\t\t<Link to={PublicRoutes.Home}>Home</Link> to read additional information\n\t\t\t</Typography>\n\t\t</CardContent>\n\t)\n}\n\nexport default NoClients\n","import { IClientState } from \"../../../state/client/client-outline\"\nimport { ClientDataStruct, ClientId } from \"../../../data/_config/shape\"\nimport ClientUseCase from \"../../../data/client/ClientLogic\"\nimport HealthCheckUseCase from \"../../../data/healthChecks/HealthCheckLogic\"\nimport ActionChecklistUseCase from \"../../../data/ActionChecklist/ChecklistLogic\"\nimport ActionPriorityUseCase from \"../../../data/ActionChecklist/PriorityLogic\"\nimport ActionNotesUseCase from \"../../../data/ActionChecklist/NotesLogic\"\nimport CFCUseCase from \"../../../data/CFC/CFCLogic\"\n\n/**\n * Checks if the store contains any clients\n *\n * @param {IClientState} store\n * @returns boolean\n */\nexport const hasClients = ({ state: { clients } }: IClientState): boolean => {\n\treturn clients.length !== 0\n}\n\n/**\n * Checks if the current client is selected\n *\n * @param {ClientDataStruct|undefined} currentClient currently selected client\n * @param {number} id client id to compare to the current client\n * @returns {boolean}\n */\nexport const isClientSelected = (\n\tcurrentClient: ClientDataStruct | undefined,\n\tid = \"\"\n): boolean => {\n\treturn (currentClient && currentClient.id === id) || false\n}\n\nexport const deleteClientRelatedData = async (\n\tclient: ClientId\n): Promise<boolean | Error> => {\n\ttry {\n\t\t// delete client data from ClientDB\n\t\tawait ClientUseCase.delete(client)\n\t\t// delete client data from HealthCheckDB\n\t\tawait HealthCheckUseCase.deleteByClient(client)\n\t\t// delete client data from ActionChecklistDB\n\t\tawait ActionChecklistUseCase.deleteByClient(client)\n\t\tawait ActionPriorityUseCase.deleteByClient(client)\n\t\tawait ActionNotesUseCase.deleteByClient(client)\n\t\t// delete client data from CFCDB\n\t\tawait CFCUseCase.deleteByClient(client)\n\n\t\treturn true\n\t} catch (e) {\n\t\treturn e\n\t}\n}\n","import React, { ReactElement, useState, MouseEvent, useContext } from \"react\"\nimport {\n\tList,\n\tListItem,\n\tListItemText,\n\tListItemSecondaryAction,\n\tIconButton,\n\tTooltip,\n} from \"@material-ui/core\"\nimport { clone } from \"lodash-es\"\nimport VisibilityIcon from \"@material-ui/icons/Visibility\"\nimport { generateKey, constructKey } from \"../../../util/lists/key\"\nimport { ClientActionTypes } from \"../../../state/client/client-outline\"\nimport { IClientListProps } from \"../_config/shape\"\nimport { isClientSelected, deleteClientRelatedData } from \"../_config/utilities\"\nimport { ClientDataStruct, ClientId } from \"../../../data/_config/shape\"\nimport IconDeleteButtonwDialog from \"../../IconDeleteButton/IconDeleteButtonwDialog\"\nimport syncClientsWithDb from \"../../../data/client/syncWithDB\"\nimport {\n\tremoveStorageClient,\n\temptyClientValue,\n} from \"../../../util/localStorage/client\"\nimport ActionChecklistUseCase from \"../../../data/ActionChecklist/ChecklistLogic\"\nimport ActionPriorityUseCase from \"../../../data/ActionChecklist/PriorityLogic\"\nimport ActionNotesUseCase from \"../../../data/ActionChecklist/NotesLogic\"\nimport { ActionChecklistContext } from \"../../../state/action-checklist\"\nimport { ActionChecklistActionTypes } from \"../../../state/action-checklist/shape\"\n\n/**\n * Renders a list of current clients with the ability to change\n * which client is being edited\n *\n * @returns ReactElement\n */\nconst ClientList = ({\n\tstore: {\n\t\tstate: { clients, currentClient },\n\t\tdispatch,\n\t},\n\tshowSnackbar,\n}: IClientListProps): ReactElement => {\n\tconst [key] = useState(generateKey())\n\tconst { dispatch: ACDispatch } = useContext(ActionChecklistContext)\n\n\t/**\n\t * Changes the current client selected for editing\n\t *\n\t * @param {ChangeEvent<HTMLInputElement>} event Event created by the radio change\n\t * @returns void\n\t */\n\tconst handleChange = (client: ClientDataStruct) => (): void => {\n\t\tconsole.log(client)\n\t\tif (client?.id) {\n\t\t\tdispatch({\n\t\t\t\ttype: ClientActionTypes.ChangeCurrentClient,\n\t\t\t\tpayload: client.id,\n\t\t\t})\n\n\t\t\tshowSnackbar(`You are now managing ${client.name}`, \"success\")\n\t\t}\n\t}\n\n\t/**\n\t * Deletes all the clients data\n\t *\n\t * @param {ClientId|undefined} client\n\t * @returns Promise<void>\n\t */\n\tconst handleDelete = (client: ClientId | undefined) => async (\n\t\te: MouseEvent<HTMLButtonElement>\n\t): Promise<void> => {\n\t\te.preventDefault()\n\t\tif (client) {\n\t\t\tconst clientsCopy = clone(clients)\n\t\t\t// Deletes the client data across the various databases\n\t\t\tconst databaseDataDeleted = await deleteClientRelatedData(client)\n\n\t\t\tif (databaseDataDeleted instanceof Error) {\n\t\t\t\tshowSnackbar(databaseDataDeleted.message, \"error\")\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\t// Update current client if it is being deleted\n\t\t\tif (client === currentClient?.id || clientsCopy.length === 1) {\n\t\t\t\tremoveStorageClient()\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: ClientActionTypes.ChangeCurrentClient,\n\t\t\t\t\tpayload: emptyClientValue,\n\t\t\t\t})\n\t\t\t}\n\n\t\t\t// Update client context store\n\t\t\tawait syncClientsWithDb(dispatch)\n\n\t\t\t// ---\n\t\t\t// Update action checklist context store\n\t\t\tconst checklists = await ActionChecklistUseCase.syncWithDatabase()\n\t\t\tconst priority = await ActionPriorityUseCase.syncWithDatabase()\n\t\t\tconst notes = await ActionNotesUseCase.syncWithDatabase()\n\n\t\t\tACDispatch({\n\t\t\t\ttype: ActionChecklistActionTypes.UpdateDatabaseSync,\n\t\t\t\tpayload: {\n\t\t\t\t\tdata: checklists,\n\t\t\t\t\tpriority,\n\t\t\t\t\tnotes,\n\t\t\t\t},\n\t\t\t})\n\n\t\t\tshowSnackbar(\"Client data has been deleted\", \"success\")\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<List>\n\t\t\t\t{clients.map((client, idx) => (\n\t\t\t\t\t<ListItem key={constructKey(key, idx)} className=\"list-item-padded\">\n\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\tclassName=\"truncate list-item\"\n\t\t\t\t\t\t\tprimary={client.name}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ListItemSecondaryAction>\n\t\t\t\t\t\t\t{!isClientSelected(currentClient, client.id) && (\n\t\t\t\t\t\t\t\t<Tooltip title=\"Manage client\">\n\t\t\t\t\t\t\t\t\t<IconButton onClick={handleChange(client)}>\n\t\t\t\t\t\t\t\t\t\t<VisibilityIcon />\n\t\t\t\t\t\t\t\t\t\t<span className=\"MuiTypography-srOnly\">Manage client</span>\n\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<IconDeleteButtonwDialog onClick={handleDelete(client.id)} />\n\t\t\t\t\t\t</ListItemSecondaryAction>\n\t\t\t\t\t</ListItem>\n\t\t\t\t))}\n\t\t\t</List>\n\t\t</>\n\t)\n}\n\nexport default ClientList\n","import React, { ReactElement, useState } from \"react\"\nimport GetAppIcon from \"@material-ui/icons/GetApp\"\nimport { Button } from \"@material-ui/core\"\nimport { ImportClientDialog } from \"../../../content/dialog\"\n\n/**\n * Handles the functionality to import a client\n *\n * @returns ReactElement\n */\nexport default function ImportClient(): ReactElement {\n\tconst [dialogOpen, setDialogOpen] = useState(false)\n\tconst onDialogClose = (): void => setDialogOpen(false)\n\tconst onDialogOpen = (): void => setDialogOpen(true)\n\n\treturn (\n\t\t<>\n\t\t\t<Button\n\t\t\t\tvariant=\"outlined\"\n\t\t\t\tstartIcon={<GetAppIcon />}\n\t\t\t\tonClick={onDialogOpen}\n\t\t\t>\n\t\t\t\tImport\n\t\t\t</Button>\n\t\t\t<ImportClientDialog open={dialogOpen} onClose={onDialogClose} />\n\t\t</>\n\t)\n}\n","import { Machine } from \"xstate\"\nimport { IClientListingSchema, ClientListingEvents } from \"./shape\"\n\n/**\n * Defines the state machine used for the\n * Client listing component\n *\n */\nconst ClientListingMachine = Machine<\n\tnull,\n\tIClientListingSchema,\n\tClientListingEvents\n>({\n\tkey: \"client_listing_machine\",\n\tinitial: \"loading\",\n\tstates: {\n\t\tloading: {\n\t\t\ton: {\n\t\t\t\tIS_EMPTY: \"empty\",\n\t\t\t\tHAS_DATA: \"data\",\n\t\t\t},\n\t\t},\n\t\tempty: {\n\t\t\ton: {\n\t\t\t\tHAS_DATA: \"data\",\n\t\t\t},\n\t\t},\n\t\tdata: {\n\t\t\ton: {\n\t\t\t\tIS_EMPTY: \"empty\",\n\t\t\t},\n\t\t},\n\t},\n})\n\nexport default ClientListingMachine\n","/**\n * Download a blob to the file system by creating a ghost button to trigger\n * a click\n *\n * @export\n * @param {Blob} blob\n * @param {string} filename\n */\nexport default function saveBlob(blob: Blob, filename: string): void {\n\tif (navigator.msSaveBlob) {\n\t\tnavigator.msSaveBlob(blob, filename)\n\t\treturn\n\t}\n\n\t// Convert your blob into a Blob URL (a special url that points to an object in the browser's memory)\n\tconst blobUrl = URL.createObjectURL(blob)\n\n\t// Create a link element\n\tconst link: HTMLAnchorElement = document.createElement(\"a\")\n\n\t// Set link's href to point to the Blob URL\n\tlink.setAttribute(\"href\", blobUrl)\n\tlink.setAttribute(\"download\", filename)\n\n\t// Append link to the body\n\tdocument.body.appendChild(link)\n\n\t// Dispatch click event on the link\n\t// This is necessary as link.click() does not work on the latest firefox\n\tlink.dispatchEvent(\n\t\tnew MouseEvent(\"click\", {\n\t\t\tbubbles: true,\n\t\t\tcancelable: true,\n\t\t\tview: window,\n\t\t})\n\t)\n\n\t// Remove link from body\n\tdocument.body.removeChild(link)\n}\n","import Dexie from \"dexie\"\nimport { exportDB, ExportOptions } from \"dexie-export-import\"\nimport { DexieExportJsonStructure } from \"dexie-export-import/dist/json-structure\"\nimport { ClientId } from \"../../data/_config/shape\"\nimport hasProperty from \"../../util/object/hasProperty\"\nimport readFile from \"../../util/readFile\"\nimport ClientDB from \"../../data/client/ClientDatabase\"\nimport HealthCheckDB from \"../../data/healthChecks/HealthCheckDatabase\"\nimport ActionChecklistDB from \"../../data/ActionChecklist/ActionChecklistDatabase\"\nimport CFCDB from \"../../data/CFC/CFCDatabase\"\nimport saveBlob from \"../save-blob\"\nimport ClientUseCase from \"../../data/client/ClientLogic\"\nimport { JSONDataResult, ExportClientResult } from \"../__config/shape\"\n\n/**\n * Filters out records based on the client and returns a method that is used\n * within the export options\n *\n * @param {ClientId} client\n * @returns {ExportOptions[\"filter\"]}\n */\nexport function exportFilter(client: ClientId): ExportOptions[\"filter\"] {\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\treturn (table: string, value: any): boolean => {\n\t\tif (!value) return false\n\t\t// if we're looking at the clients table, filter by the record id\n\t\tif (table === \"clients\") return value.id === client\n\t\t// Otherwise look at the clientId key\n\t\treturn hasProperty(value, \"clientId\") ? value.clientId === client : false\n\t}\n}\n\n/**\n * Exports the database data into a blob\n *\n * @export\n * @param {Dexie} db\n * @returns {Promise<Blob>}\n */\nexport async function exportData(db: Dexie, client: ClientId): Promise<Blob> {\n\tconst blob: Blob = await exportDB(db, {\n\t\tfilter: exportFilter(client),\n\t})\n\treturn blob\n}\n\n/**\n * Exports the data for a client and returns the results as json\n *\n * @export\n * @param {Dexie} db\n * @param {ClientId} client\n * @returns {(Promise<JSONDataResult>)}\n */\nexport async function getDataAsJSON(\n\tdb: Dexie,\n\tclient: ClientId\n): Promise<JSONDataResult> {\n\t// Get the exported data from the database\n\tconst blob = await exportData(db, client)\n\t// Convert the blob to raw text\n\tconst text = await readFile(blob)\n\t// return an empty array if the text is invalid\n\tif (!text || typeof text !== \"string\") return null\n\n\t// Parse and return the data\n\tconst json: DexieExportJsonStructure = JSON.parse(text)\n\treturn json\n}\n\n/**\n * Extracts all the data from the different databases and constructs the payload\n * used in the json file\n *\n * @export\n * @param {ClientId} client\n * @returns {Promise<ExportClientResult>}\n */\nexport async function constructExportPayload(\n\tclient: ClientId\n): Promise<ExportClientResult> {\n\tconst clientData = await getDataAsJSON(ClientDB, client)\n\tconst healthData = await getDataAsJSON(HealthCheckDB, client)\n\tconst checklistData = await getDataAsJSON(ActionChecklistDB, client)\n\tconst cfcData = await getDataAsJSON(CFCDB, client)\n\n\tconst res: ExportClientResult = {\n\t\tClientDatabase: clientData,\n\t\tHealthCheckDatabase: healthData,\n\t\tActionChecklistDatabase: checklistData,\n\t\tCFCDatabase: cfcData,\n\t}\n\n\treturn res\n}\n\n/**\n * Constructs and downloads the export json file\n *\n * @export\n * @param {ClientId} client\n * @returns {(Promise<true | Error>)}\n */\nexport default async function ExportClient(\n\tclient: ClientId\n): Promise<true | Error> {\n\t// Ensures that the requested client does exist in the database\n\tconst dbClient = await ClientUseCase.findById(client)\n\tif (!dbClient) {\n\t\t// eslint-disable-next-line\n\t\tthrow new Error(\"Requested client could not be found\")\n\t}\n\n\t// Get the payload and create the file blob\n\tconst payload = await constructExportPayload(client)\n\tconst blob = new Blob([JSON.stringify(payload)], {\n\t\ttype: \"application/json\",\n\t})\n\n\t// Downloads the file\n\tsaveBlob(\n\t\tblob,\n\t\t`${dbClient.name.replace(/ /g, \"-\").toLowerCase()}--exported-data.json`\n\t)\n\treturn true\n}\n","import React, { ReactElement, useCallback, useState } from \"react\"\nimport { Tooltip, IconButton, CircularProgress } from \"@material-ui/core\"\nimport PublishIcon from \"@material-ui/icons/Publish\"\nimport { ClientId } from \"../../../data/_config/shape\"\nimport { SnackbarMsgData } from \"../../SnackbarMsg/SnackbarMsg\"\nimport ExportClient from \"../../../modules/export-client\"\n\ntype ExportClientProps = {\n\tclient: ClientId\n\tshowSnackbar: (\n\t\tmsg: SnackbarMsgData[\"msg\"],\n\t\tseverity: SnackbarMsgData[\"severity\"]\n\t) => void\n}\n\n/**\n * Component used to handle exporting a clients data\n *\n * @export\n * @param {ExportClientProps} {\n * \tclient,\n * }\n * @returns {ReactElement}\n */\nexport default function ExportClientButton({\n\tclient,\n\tshowSnackbar,\n}: ExportClientProps): ReactElement {\n\tconst [processing, setProcessing] = useState(false)\n\n\tconst exportClient = useCallback(async () => {\n\t\tif (client !== \"\") {\n\t\t\ttry {\n\t\t\t\tsetProcessing(true)\n\t\t\t\tawait ExportClient(client)\n\t\t\t\tshowSnackbar(\"Client data has been exported\", \"success\")\n\t\t\t} catch (e) {\n\t\t\t\tshowSnackbar(e.message, \"error\")\n\t\t\t} finally {\n\t\t\t\tsetProcessing(false)\n\t\t\t}\n\t\t}\n\t}, [client, setProcessing, showSnackbar])\n\n\treturn (\n\t\t<>\n\t\t\t<Tooltip title=\"Export data\">\n\t\t\t\t<IconButton onClick={exportClient}>\n\t\t\t\t\t{processing ? <CircularProgress size={24} /> : <PublishIcon />}\n\t\t\t\t</IconButton>\n\t\t\t</Tooltip>\n\t\t</>\n\t)\n}\n","import React, { useContext, ReactElement, useEffect, useState } from \"react\"\nimport {\n\tBox,\n\tCard,\n\tDivider,\n\tCardContent,\n\tList,\n\tListItem,\n\tListItemText,\n} from \"@material-ui/core\"\n\nimport AddIcon from \"@material-ui/icons/Add\"\nimport { useMachine } from \"@xstate/react\"\nimport { ClientContext } from \"../../state/client\"\nimport { NewClientDialog } from \"../../content/dialog\"\nimport { useCLStyles } from \"./_config/styles\"\nimport { NoClients, ClientList, ImportClient } from \"./_partials\"\nimport { IClientState } from \"../../state/client/client-outline\"\nimport ClientListingMachine from \"./_config/machine\"\nimport Loading from \"../Loading\"\nimport SectionTitle from \"../SectionTitle\"\nimport SnackbarMsg, { SnackbarMsgData } from \"../SnackbarMsg/SnackbarMsg\"\nimport Spacer from \"../Spacer\"\nimport ExportClientButton from \"./_partials/ExportClient\"\n\n/**\n * Component to render the whole Client Listing component\n * with section title, controls and the Client List\n *\n * @returns ReactElement\n */\nconst ClientListing = (): ReactElement => {\n\tconst clientStore: IClientState = useContext(ClientContext)\n\tconst {\n\t\tstate: { clientSynced, clients, currentClient },\n\t} = clientStore\n\tconst [state, send] = useMachine(ClientListingMachine)\n\tconst styles = useCLStyles()\n\tconst [snackbar, setSnackbar] = useState<SnackbarMsgData>({\n\t\topen: false,\n\t\tmsg: \"\",\n\t})\n\n\tfunction showSnackbar(\n\t\tmsg: SnackbarMsgData[\"msg\"],\n\t\tseverity: SnackbarMsgData[\"severity\"]\n\t): void {\n\t\tsetSnackbar({ ...snackbar, msg, severity, open: true })\n\t}\n\n\tfunction handleClose(\n\t\tevent: React.SyntheticEvent | React.MouseEvent,\n\t\treason?: string\n\t): void {\n\t\tif (reason && reason === \"clickaway\") {\n\t\t\treturn\n\t\t}\n\n\t\tsetSnackbar({ ...snackbar, open: false })\n\t}\n\n\t// Change the state of the component once clients are synced\n\tuseEffect(() => {\n\t\tif (clientSynced) {\n\t\t\tif (clients.length > 0) {\n\t\t\t\tsend(\"HAS_DATA\")\n\t\t\t} else {\n\t\t\t\tsend(\"IS_EMPTY\")\n\t\t\t}\n\t\t}\n\t}, [clientSynced, clients, send])\n\n\t/**\n\t * Renders components based on the component state\n\t *\n\t * @returns ReactElement\n\t */\n\tconst renderWithMachine = (type: \"list\" | \"current\"): ReactElement => {\n\t\tswitch (state.value) {\n\t\t\tcase \"data\":\n\t\t\t\tif (type === \"list\") {\n\t\t\t\t\treturn <ClientList store={clientStore} showSnackbar={showSnackbar} />\n\t\t\t\t}\n\n\t\t\t\tif (type === \"current\") {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<List>\n\t\t\t\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t\t\t\t<ListItemText className=\"truncate list-item\">\n\t\t\t\t\t\t\t\t\t\t{currentClient?.name}\n\t\t\t\t\t\t\t\t\t</ListItemText>\n\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t\t{currentClient?.id && (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<CardContent className={styles.actions}>\n\t\t\t\t\t\t\t\t\t\t<ExportClientButton\n\t\t\t\t\t\t\t\t\t\t\tclient={currentClient.id}\n\t\t\t\t\t\t\t\t\t\t\tshowSnackbar={showSnackbar}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t\t\t\t<SnackbarMsg\n\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t\t\t\t\t\t\t\t{...snackbar}\n\t\t\t\t\t\t\t\t\t\tonClose={handleClose}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</>\n\t\t\t\t\t)\n\t\t\t\t}\n\n\t\t\t\treturn <></>\n\t\t\tcase \"empty\":\n\t\t\t\treturn <NoClients />\n\t\t\tcase \"loading\":\n\t\t\tdefault:\n\t\t\t\treturn <Loading />\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Box>\n\t\t\t\t<SectionTitle>Current Client</SectionTitle>\n\t\t\t\t<Card>{renderWithMachine(\"current\")}</Card>\n\t\t\t\t<Spacer space={4} />\n\t\t\t\t<SectionTitle>Client List</SectionTitle>\n\t\t\t\t<Card>\n\t\t\t\t\t{renderWithMachine(\"list\")}\n\t\t\t\t\t<Divider />\n\t\t\t\t\t<CardContent className={styles.actions}>\n\t\t\t\t\t\t<ImportClient />\n\t\t\t\t\t\t<NewClientDialog\n\t\t\t\t\t\t\ttriggerText=\"Add new client\"\n\t\t\t\t\t\t\tstartIcon={<AddIcon />}\n\t\t\t\t\t\t\tclassName={styles.button}\n\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Card>\n\t\t\t</Box>\n\t\t\t{/* eslint-disable-next-line react/jsx-props-no-spreading */}\n\t\t\t<SnackbarMsg {...snackbar} onClose={handleClose} />\n\t\t</>\n\t)\n}\n\nexport default ClientListing\n","import { makeStyles } from \"@material-ui/core\"\n\nconst useStyles = makeStyles((theme) => ({\n\tbox: {\n\t\tpadding: `0 ${theme.spacing(2)}px`,\n\t},\n\tlist: {\n\t\tlistStyle: \"disc\",\n\t\tpaddingLeft: theme.spacing(2),\n\t\tpaddingTop: 0,\n\t\tpaddingBottom: 0,\n\t\t\"& ul\": {\n\t\t\tpaddingLeft: theme.spacing(3),\n\t\t},\n\t},\n\tembed: {\n\t\tminHeight: \"300px\",\n\t\tborder: \"none\",\n\t},\n}))\n\nexport default useStyles\n","import React, { ReactElement } from \"react\"\nimport { Typography, List, Box } from \"@material-ui/core\"\nimport ExpandableNav from \"../../components/ExpandableNav\"\nimport useStyles from \"./styles\"\n\nexport default function Prepare(): ReactElement {\n\tconst cls = useStyles()\n\n\treturn (\n\t\t<ExpandableNav\n\t\t\ttitle=\"Prepare for your client meeting\"\n\t\t\tdefaultExpanded={false}\n\t\t>\n\t\t\t<Box className={cls.box}>\n\t\t\t\t<List className={cls.list}>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tFamiliarise yourself with the tools in this kit. For more\n\t\t\t\t\t\tinformation click on the ‘Show me how’ button.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tNote the key things you want to discuss with your client.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tIdentify the cash flow coaching kit tools that will be most suitable\n\t\t\t\t\t\tto aid your coaching conversation.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">Ask your client to:</Typography>\n\t\t\t\t\t<List className={cls.list}>\n\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\tprepare a list of questions to ask\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\tbring the financial projections or reports for their business.\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</List>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tFor an existing client you can review their previous action\n\t\t\t\t\t\tchecklist, canvases and financials.\n\t\t\t\t\t</Typography>\n\t\t\t\t</List>\n\t\t\t</Box>\n\t\t</ExpandableNav>\n\t)\n}\n","import React, { ReactElement } from \"react\"\nimport {\n\tTypography,\n\tBox,\n\tList,\n\tCard,\n\tCardHeader,\n\tCardMedia,\n\tCardActions,\n\tButton,\n} from \"@material-ui/core\"\nimport ExpandableNav from \"../../components/ExpandableNav\"\nimport useStyles from \"./styles\"\nimport Spacer from \"../../components/Spacer\"\n\nexport default function Coaching(): ReactElement {\n\tconst cls = useStyles()\n\n\treturn (\n\t\t<ExpandableNav title=\"Cash Flow Coaching Kit\" defaultExpanded={false}>\n\t\t\t<Box className={cls.box}>\n\t\t\t\t<List className={cls.list}>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tThe Cash Flow Coaching Kit has specific coaching phases (Discover,\n\t\t\t\t\t\tApply, Plan & Action) each with their own set of tools and\n\t\t\t\t\t\tactivities. Use these as most appropriate for your client.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tExplain why the Four Key Questions are fundamental success factors\n\t\t\t\t\t\tfor cash flow. Refer back to these questions frequently to keep the\n\t\t\t\t\t\tconversation focused on cash flow improvements.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tUse the Health Check or review your client’s Action Checklist tasks\n\t\t\t\t\t\tto help start a conversation. Ask your client for their areas of\n\t\t\t\t\t\tinterest or concerns.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tIt isn’t necessary to complete the entire coaching kit in every\n\t\t\t\t\t\tsession.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tAs you explore the kit with your client, consider questions such as:\n\t\t\t\t\t\t<List className={cls.list}>\n\t\t\t\t\t\t\t<Typography component=\"li\">Why are you in business?</Typography>\n\t\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\t\tWhere do you see your business in 12 months?\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\t\tWhere do you see your business in 5 years?\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</Typography>\n\t\t\t\t</List>\n\n\t\t\t\t<Spacer space={4} />\n\n\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t<CardHeader title=\"What advisors think of the kit\" />\n\t\t\t\t\t<CardMedia\n\t\t\t\t\t\tclassName={cls.embed}\n\t\t\t\t\t\tcomponent=\"iframe\"\n\t\t\t\t\t\ttitle=\"What advisors think of the kit\"\n\t\t\t\t\t\tsrc=\"https://www.youtube.com/embed/z64Bc5K2TKo\"\n\t\t\t\t\t/>\n\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\thref=\"/transcripts/What-advisors-think-of-the-kit.docx\"\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tDownload Transcript\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</CardActions>\n\t\t\t\t</Card>\n\t\t\t</Box>\n\t\t</ExpandableNav>\n\t)\n}\n","import React, { ReactElement } from \"react\"\nimport {\n\tTypography,\n\tBox,\n\tList,\n\tCard,\n\tCardHeader,\n\tCardMedia,\n\tCardActions,\n\tButton,\n} from \"@material-ui/core\"\nimport ExpandableNav from \"../../components/ExpandableNav\"\nimport useStyles from \"./styles\"\nimport Spacer from \"../../components/Spacer\"\n\nexport default function HealthCheck(): ReactElement {\n\tconst cls = useStyles()\n\n\treturn (\n\t\t<ExpandableNav title=\"Health Check\" defaultExpanded={false}>\n\t\t\t<Box className={cls.box}>\n\t\t\t\t<List className={cls.list}>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tThe Health Check helps you understand how your client views their\n\t\t\t\t\t\tbusiness, and their knowledge of cash flow.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tIntroduce the Health Check to your client as an opportunity to\n\t\t\t\t\t\tunderstand where they are at, and identify areas for improvement.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tListen to their responses and observe their reactions. Notice the\n\t\t\t\t\t\tareas that they are uncomfortable with as this will provide\n\t\t\t\t\t\topportunities for you to coach or guide them.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tConsider questions such as:\n\t\t\t\t\t\t<List className={cls.list}>\n\t\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\t\tAre there areas of your business that are causing you concern?\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\t\tHow have you been trying to deal with this up to now?\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\t\tWhat could you do to improve in these areas?\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tIf your client is unsure about their results, they can learn more by\n\t\t\t\t\t\tusing the Discover Topics feature.\n\t\t\t\t\t</Typography>\n\t\t\t\t</List>\n\n\t\t\t\t<Spacer space={4} />\n\n\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t<CardHeader title=\"Health Check coaching tips\" />\n\t\t\t\t\t<CardMedia\n\t\t\t\t\t\tclassName={cls.embed}\n\t\t\t\t\t\tcomponent=\"iframe\"\n\t\t\t\t\t\ttitle=\"Health Check coaching tips\"\n\t\t\t\t\t\tsrc=\"https://www.youtube.com/embed/C6Gduin0fJg\"\n\t\t\t\t\t/>\n\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\thref=\"/transcripts/Health Check coaching tips.docx\"\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tDownload Transcript\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</CardActions>\n\t\t\t\t</Card>\n\t\t\t</Box>\n\t\t</ExpandableNav>\n\t)\n}\n","import React, { ReactElement } from \"react\"\nimport { Typography, List, Box } from \"@material-ui/core\"\nimport ExpandableNav from \"../../components/ExpandableNav\"\nimport useStyles from \"./styles\"\n\nexport default function DiscoverTopics(): ReactElement {\n\tconst cls = useStyles()\n\n\treturn (\n\t\t<ExpandableNav title=\"Discover Topics\" defaultExpanded={false}>\n\t\t\t<Box className={cls.box}>\n\t\t\t\t<List className={cls.list}>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tIntroduce Discover Topics to your client as a way to help them build\n\t\t\t\t\t\ttheir cash flow knowledge and ultimately improve their cash flow\n\t\t\t\t\t\tmanagement.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tIf your client needs to build their knowledge, identify the relevant\n\t\t\t\t\t\ttopics and add them to the Action Checklist by using the Task\n\t\t\t\t\t\tBuilder.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tUse the activities to build practical knowledge or offer activities\n\t\t\t\t\t\tof your own. Focus on making it real and relevant to your client.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tDecide whether to step through all or part of an activity in one\n\t\t\t\t\t\tsession or provide a copy for your client to complete in their own\n\t\t\t\t\t\ttime.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tAs you explore the Discover Topics with your client, consider\n\t\t\t\t\t\tquestions such as:\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<List className={cls.list}>\n\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\tWhy do you think this topic area is relevant for your business?\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\tWhat else would you like to know about this topic area?\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\tHow are you handling this aspect of your business now?\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\tWhat could you do to change this in the future?\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</List>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tOnce you reach the end of the topic discussion, you can give your\n\t\t\t\t\t\tclient a Quicksnap to reflect on.\n\t\t\t\t\t</Typography>\n\t\t\t\t</List>\n\t\t\t</Box>\n\t\t</ExpandableNav>\n\t)\n}\n","import React, { ReactElement } from \"react\"\nimport {\n\tTypography,\n\tBox,\n\tList,\n\tCard,\n\tCardHeader,\n\tCardMedia,\n\tCardActions,\n\tButton,\n} from \"@material-ui/core\"\nimport ExpandableNav from \"../../components/ExpandableNav\"\nimport useStyles from \"./styles\"\nimport Spacer from \"../../components/Spacer\"\n\nexport default function CFC(): ReactElement {\n\tconst cls = useStyles()\n\n\treturn (\n\t\t<ExpandableNav title=\"Cash Flow Canvas\" defaultExpanded={false}>\n\t\t\t<Box className={cls.box}>\n\t\t\t\t<List className={cls.list}>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tIntroduce the Cash Flow Canvas to your client as an opportunity to\n\t\t\t\t\t\tunderstand how their business is performing. Consider using the Four\n\t\t\t\t\t\tKey Questions as a frame to discuss this.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tExplain how each component, like Cash IN and Cash OUT, helps to\n\t\t\t\t\t\tidentify the main cash movements in and out of their business. Work\n\t\t\t\t\t\tthrough regular financial commitments and other important items in\n\t\t\t\t\t\ttheir cash flow.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tYour conversations on the canvas should draw out how their business\n\t\t\t\t\t\tis performing and identify where they want to go.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tConsider asking questions such as:\n\t\t\t\t\t\t<List className={cls.list}>\n\t\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\t\tWhat does the Cash Flow Canvas tell you about your business?\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\t\tWhat are the items in your Cash IN or your Cash OUT that have\n\t\t\t\t\t\t\t\tthe most impact on your cash flow?\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\t\tHave you set aside an amount for your regular financial\n\t\t\t\t\t\t\t\tcommitments?\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\t\tDo you think you can take more or less out of your business\n\t\t\t\t\t\t\t\tgiven your current cash flow position?\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\t\tHow do you think you can improve your cash flow position?\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</Typography>\n\t\t\t\t</List>\n\n\t\t\t\t<Spacer space={4} />\n\n\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t<CardHeader title=\"Cash Flow Canvas coaching tips\" />\n\t\t\t\t\t<CardMedia\n\t\t\t\t\t\tclassName={cls.embed}\n\t\t\t\t\t\tcomponent=\"iframe\"\n\t\t\t\t\t\ttitle=\"Cash Flow Canvas coaching tips\"\n\t\t\t\t\t\tsrc=\"https://www.youtube.com/embed/Q8_r35mb6YU\"\n\t\t\t\t\t/>\n\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\thref=\"/transcripts/Cash Flow Canvas coaching tips.docx\"\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tDownload Transcript\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</CardActions>\n\t\t\t\t</Card>\n\t\t\t</Box>\n\t\t</ExpandableNav>\n\t)\n}\n","import React, { ReactElement } from \"react\"\nimport {\n\tTypography,\n\tBox,\n\tList,\n\tCard,\n\tCardHeader,\n\tCardMedia,\n\tCardActions,\n\tButton,\n} from \"@material-ui/core\"\nimport ExpandableNav from \"../../components/ExpandableNav\"\nimport useStyles from \"./styles\"\nimport Spacer from \"../../components/Spacer\"\n\nexport default function ChangeLevers(): ReactElement {\n\tconst cls = useStyles()\n\n\treturn (\n\t\t<ExpandableNav title=\"Change Levers\" defaultExpanded={false}>\n\t\t\t<Box className={cls.box}>\n\t\t\t\t<List className={cls.list}>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tThe Change Levers highlight different options that could improve\n\t\t\t\t\t\tbusiness performance.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tKeep the conversation action focused and positive.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tThe actions and considerations in Change Levers will help structure\n\t\t\t\t\t\tyour conversation. Use them to tailor relevant messages and include\n\t\t\t\t\t\tsome additional insights in your coaching conversation.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tConsider asking questions such as:\n\t\t\t\t\t\t<List className={cls.list}>\n\t\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\t\tWhich of these actions stand out to you?\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\t\tHow do you feel about completing these actions?\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\t\tHow will you implement them?\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\t\tWhat do these actions look like for your business?\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\t\tHow do you think completing these actions will impact your cash\n\t\t\t\t\t\t\t\tflow?\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</Typography>\n\t\t\t\t</List>\n\n\t\t\t\t<Spacer space={4} />\n\n\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t<CardHeader title=\"Change Levers coaching tips\" />\n\t\t\t\t\t<CardMedia\n\t\t\t\t\t\tclassName={cls.embed}\n\t\t\t\t\t\tcomponent=\"iframe\"\n\t\t\t\t\t\ttitle=\"Change Levers coaching tips\"\n\t\t\t\t\t\tsrc=\"https://www.youtube.com/embed/_xYdO-STzYI\"\n\t\t\t\t\t/>\n\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\thref=\"/transcripts/Change Levers coaching tips.docx\"\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tDownload Transcript\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</CardActions>\n\t\t\t\t</Card>\n\t\t\t</Box>\n\t\t</ExpandableNav>\n\t)\n}\n","import React, { ReactElement } from \"react\"\nimport {\n\tTypography,\n\tBox,\n\tList,\n\tCard,\n\tCardHeader,\n\tCardMedia,\n\tCardActions,\n\tButton,\n} from \"@material-ui/core\"\nimport ExpandableNav from \"../../components/ExpandableNav\"\nimport useStyles from \"./styles\"\nimport Spacer from \"../../components/Spacer\"\n\nexport default function ActionChecklist(): ReactElement {\n\tconst cls = useStyles()\n\n\treturn (\n\t\t<ExpandableNav title=\"Action Checklist\" defaultExpanded={false}>\n\t\t\t<Box className={cls.box}>\n\t\t\t\t<List className={cls.list}>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tIntroduce the Action Checklist as your client's set of instructions\n\t\t\t\t\t\tto improve their business cash flow.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tExplain that putting their knowledge into action requires a clear\n\t\t\t\t\t\tplan with tasks and timeframes.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tFocus your conversation on practical actions your client can take to\n\t\t\t\t\t\tcreate change.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tStart prioritising tasks based on your client's needs. For example,\n\t\t\t\t\t\tprioritise the simpler tasks first to build momentum; or prioritise\n\t\t\t\t\t\ttasks based on their urgency.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tThe most important part of this whole process is keeping your client\n\t\t\t\t\t\taccountable for completing their actions.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tSometimes your client may need extra nudges to complete their agreed\n\t\t\t\t\t\tactions. Set a follow-up date to have another conversation to review\n\t\t\t\t\t\tthe tasks.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\tConsider questions such as:\n\t\t\t\t\t\t<List className={cls.list}>\n\t\t\t\t\t\t\t<Typography component=\"li\">What did we discuss?</Typography>\n\t\t\t\t\t\t\t<Typography component=\"li\">What did we agree to do?</Typography>\n\t\t\t\t\t\t\t<Typography component=\"li\">Who will do what by when?</Typography>\n\t\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\t\tWho is accountable for these actions?\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\t\t\t\tHow is the Action Checklist going?\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography component=\"li\">Are you making progress?</Typography>\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</Typography>\n\t\t\t\t</List>\n\n\t\t\t\t<Spacer space={4} />\n\n\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t<CardHeader title=\"Action Checklist coaching tips\" />\n\t\t\t\t\t<CardMedia\n\t\t\t\t\t\tclassName={cls.embed}\n\t\t\t\t\t\tcomponent=\"iframe\"\n\t\t\t\t\t\ttitle=\"Action Checklist coaching tips\"\n\t\t\t\t\t\tsrc=\"https://www.youtube.com/embed/td4ReSc9Eos\"\n\t\t\t\t\t/>\n\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\thref=\"/transcripts/Action Checklist coaching tips.docx\"\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tDownload Transcript\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</CardActions>\n\t\t\t\t</Card>\n\t\t\t</Box>\n\t\t</ExpandableNav>\n\t)\n}\n","import React, { ReactElement } from \"react\"\nimport { Typography, Grid, makeStyles, Box } from \"@material-ui/core\"\nimport { PageContainer } from \"../components/Layouts\"\nimport PageTip from \"../components/PageTip\"\nimport ClientListing from \"../components/ClientListing\"\nimport SectionTitle from \"../components/SectionTitle\"\nimport {\n\tPrepare,\n\tCoaching,\n\tCFC,\n\tHealthCheck,\n\tDiscoverTopics,\n\tChangeLevers,\n\tActionChecklist,\n} from \"../content/CoachingConversation\"\n\n// Client list styling\nconst useCLStyles = makeStyles((theme) => ({\n\ttagline: {\n\t\tmarginBottom: theme.spacing(4),\n\t},\n}))\n\n/**\n * Client listing page\n *\n * @returns ReactElement\n */\nconst ClientList = (): ReactElement => {\n\tconst styles = useCLStyles()\n\n\treturn (\n\t\t<>\n\t\t\t<PageContainer>\n\t\t\t\t<Typography variant=\"h5\" align=\"center\" className={styles.tagline}>\n\t\t\t\t\tManage your client list and prepare for your coaching conversation\n\t\t\t\t</Typography>\n\t\t\t\t<Grid container spacing={3}>\n\t\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t\t<ClientListing />\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t\t<SectionTitle>Coaching Conversation</SectionTitle>\n\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t<Prepare />\n\t\t\t\t\t\t\t<Coaching />\n\t\t\t\t\t\t\t<HealthCheck />\n\t\t\t\t\t\t\t<DiscoverTopics />\n\t\t\t\t\t\t\t<CFC />\n\t\t\t\t\t\t\t<ChangeLevers />\n\t\t\t\t\t\t\t<ActionChecklist />\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</PageContainer>\n\n\t\t\t<PageTip tip=\"ClientListTips\" />\n\t\t</>\n\t)\n}\n\nexport default ClientList\n"],"sourceRoot":""}