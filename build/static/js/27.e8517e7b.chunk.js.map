{"version":3,"sources":["components/ActionChecklist/ActionHeader/_config/style.ts","components/ActionChecklist/ActionHeader/ActionHeader.tsx","components/ActionChecklist/ActionContainer/_config/styles.ts","components/ActionChecklist/ActionContainer/_partials/Actions.tsx","components/ActionChecklist/ActionContainer/_partials/ActionItem.tsx","components/ActionChecklist/ActionContainer/_partials/ActionNotes.tsx","util/array/lastInArray.ts","util/array/arraySwap.ts","components/ActionChecklist/ActionContainer/ActionContainer.tsx","components/ActionChecklist/_config/data.ts","data/ActionChecklist/_config/machine.ts","pages/action-items.tsx","content/tips lazy /^/.//.*$/ groupOptions: {} namespace object","components/PageTip/_config/style.ts","components/PageTip/_partials/AsyncTip.tsx","components/PageTip/PageTip.tsx","components/ActionChecklist/ActionContainer/_config/data.ts","components/SectionTitle/_config/styles.ts","components/SectionTitle/SectionTitle.tsx","components/PDF/PDFLib.ts","components/ActionChecklist/ActionContainer/_config/utilities.ts","components/PDF/servePDF.ts","components/HealthCheck/FourQuestions/FourQuestions.tsx","components/HealthCheck/FourQuestions/_config/utilities.tsx","components/PDF/ActionChecklistPDF.ts"],"names":["useActionHeaderStyles","makeStyles","theme","root","marginBottom","spacing","box","flexGrow","display","justifyContent","ActionHeader","styles","useContext","ActionChecklistContext","hideCompleted","dispatch","Box","className","FormControlLabel","control","Checkbox","checked","onChange","event","type","ActionChecklistActionTypes","ChangeHideCompleted","payload","target","name","label","useActionContainerStyles","dropdownBody","paddingRight","paddingLeft","useActionsStyles","actionsWrapper","marginTop","alignItems","breakpoints","down","flexDirection","saveIndicator","userSelect","up","marginLeft","useActionItemStyles","gridRoot","margin","width","background","paddingTop","paddingBottom","hide","height","palette","grey","textfield","actions","dragIcon","cursor","completedText","padding","lineHeight","textDecoration","datepicker","useActionNotesStyles","gridActions","Actions","addNewAction","disabled","saving","lastSaved","Button","variant","color","startIcon","onClick","Typography","format","ActionItem","index","draggableId","data","deleteAction","lastItemInList","globalHide","useState","description","cacheDescription","setCacheDescription","dialogueOpen","setDialogueOpen","datepickerOpen","setDatepickerOpen","triggerDispatch","newData","id","UpdateActionItem","onDialogueClose","onDialogueConfirm","completed","reviewBy","Date","onDescriptionChange","e","value","onDescriptionBlur","a","handleDateChange","date","canComplete","handleCheckboxChange","handleDelete","preventDefault","provided","draggableProps","ref","innerRef","Grid","container","item","xs","sm","md","Tooltip","title","inputProps","indeterminate","TextField","onBlur","utils","DateFnsUtils","disableToolbar","inputVariant","KeyboardButtonProps","open","onOpen","onClose","fullWidth","IconButton","ConfirmDialogue","onCancel","onConfirm","dragHandleProps","ActionNotes","currentClient","note","notes","content","setContent","handleContentBlur","UpdateNotes","ActionNotesUseCase","update","addNotesToContainer","newNotesItem","create","AddNotes","removeNote","RemoveNote","delete","multiline","rows","lastInArray","arr","length","arraySwap","source","destination","replace","copy","splice","React","memo","identfier","priority","generateKey","key","setSaving","shouldSave","setShouldSave","setLastSaved","useEffect","setInterval","ActionChecklistUseCase","findByClientAndContainer","DB","ActionPriorityUseCase","PRIOR","isEqual","bulkUpdate","clearInterval","newActionItem","newChecklistItem","dbKey","order","AddNewActionItem","checklist","RemoveActionItem","targetId","priorityId","mapThroughPriorityOrder","idx","findObjectIndexByValue","constructKey","checklistItem","ExpandableNav","actionItemKeyTitleMapping","onDragEnd","results","droppableId","UpdatePriorityOrder","droppableProps","map","placeholder","allowNotes","ActionItemMapping","cashInActions","cashOutActions","planningBusiness","recordKeeping","funding","managing","planningCommitments","tracking","transition","ActionChecklistMachine","Machine","initial","states","loading","on","HAS_CONTENT","ActionChecklist","useMachine","state","send","checklistCollection","databaseSyced","ClientContext","printPDF","clientId","findByClient","pdfChecklists","pdfNotes","ActionChecklistPDF","pdf","servePDF","role","SectionTitle","component","Spacer","Divider","Object","keys","filter","filterByActionContainer","prior","Loading","renderActionChecklist","FourQuestions","List","disablePadding","ListItem","button","ListItemIcon","ListItemText","PageTip","tip","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","Error","code","ids","module","exports","usePageTipStyles","position","left","bottom","icon","marginRight","drawer","maxWidth","closeBox","borderBottom","borderBottomColor","borderBottomStyle","AsyncTip","loadable","props","fallback","style","drawerOpen","setDrawerOpen","toggleDrawer","KeyboardEvent","Fab","Drawer","anchor","classes","paper","actionTitleMapping","useSTStyles","fontWeight","fontSize","typography","h5","children","addPadding","columns","pageDefaultSettings","pageSize","pageMargins","footer","text","alignment","frameContent","inner","table","widths","body","pageHeading","layout","pagePadding","basicTable","items","identifier","indexOf","browser","detect","download","answers","useFourQsStyles","reactourLabel","list","fourQuestionsContent","listItem","listItemFirst","listItemText","answerIconRoot","answer","opt","getOptionByAnswer","answerTheming","Icon","getIcon","questions","options","answerText","pdfMake","vfs","pdfFonts","itemsSection","docDefinition","i","actionContainer","push","pageHeader","bold","fillColor","lightBlue","heading","subHeading","rightAlign","noResult","italics","defaultStyle","createPdf"],"mappings":"6UAceA,EAXeC,aAAW,SAACC,GAAD,MAAY,CACpDC,KAAM,CACLC,aAAcF,EAAMG,QAAQ,IAE7BC,IAAK,CACJC,SAAU,EACVC,QAAS,OACTC,eAAgB,gB,iBCqCHC,EApCM,WACpB,IAAMC,EAASX,IADyB,EAEJY,qBAAWC,KAAvCC,EAFgC,EAEhCA,cAAeC,EAFiB,EAEjBA,SAkBvB,OACC,kBAACC,EAAA,EAAD,CAAKC,UAAWN,EAAOR,MACtB,kBAACe,EAAA,EAAD,CACCC,QACC,kBAACC,EAAA,EAAD,CACCC,QAASP,EACTQ,SAfoB,SACxBC,GAEAR,EAAS,CACRS,KAAMC,IAA2BC,oBACjCC,QAASJ,EAAMK,OAAOP,WAWnBQ,KAAK,eAGPC,MAAM,6B,0CCtCGC,EAA2B9B,aAAW,SAACC,GAAD,MAAY,CAC9D8B,aAAc,CACbC,aAAc/B,EAAMG,QAAQ,GAC5B6B,YAAahC,EAAMG,QAAQ,QAKhB8B,EAAmBlC,aAAW,SAACC,GAAD,MAAY,CACtDkC,eAAe,aACd5B,QAAS,OACTC,eAAgB,aAChB4B,UAAWnC,EAAMG,QAAQ,GACzBiC,WAAY,UACXpC,EAAMqC,YAAYC,KAAK,MAAQ,CAC/BC,cAAe,SACfH,WAAY,aACZD,UAAWnC,EAAMG,QAAQ,KAG3BqC,cAAc,aACbC,WAAY,QACXzC,EAAMqC,YAAYK,GAAG,MAAQ,CAC7BC,WAAY3C,EAAMG,QAAQ,SAMhByC,EAAsB7C,aAAW,SAACC,GAAD,MAAY,CACzD6C,SAAU,CACTT,WAAY,SACZU,OAAQ,EACRC,MAAO,OACPC,WAAY,QACZ,oBAAqB,CACpBC,WAAYjD,EAAMG,QAAQ,GAC1B+C,cAAelD,EAAMG,QAAQ,KAG/BgD,KAAM,CACLC,OAAQ,OACRJ,WAAYhD,EAAMqD,QAAQC,KAAK,KAC/BnB,UAAWnC,EAAMG,QAAQ,GACzBD,aAAcF,EAAMG,QAAQ,GAC5B,QAAS,CACRG,QAAS,oBAGXiD,UAAW,CACVR,MAAO,QAERS,QAAS,CACRlD,QAAS,OACTC,eAAgB,YAEjBkD,SAAU,CACTC,OAAQ,QAETC,cAAe,CACdC,QAAS,cACTC,WAAY,WACZC,eAAgB,gBAEjBC,WAAY,CACXjB,OAAQ,OAIGkB,EAAuBjE,aAAW,SAACC,GAAD,MAAY,CAC1DI,IAAK,CACJ+B,UAAWnC,EAAMG,QAAQ,IAE1BoD,UAAW,CACVR,MAAO,QAERF,SAAU,CACTT,WAAY,UAEb6B,YAAa,CACZ3D,QAAS,OACTC,eAAgB,gB,oCCxCH2D,EA9BC,SAAC,GAKmB,IAJnCC,EAIkC,EAJlCA,aACAC,EAGkC,EAHlCA,SACAC,EAEkC,EAFlCA,OACAC,EACkC,EADlCA,UAEM7D,EAASwB,IAEf,OACC,kBAACnB,EAAA,EAAD,CAAKC,UAAWN,EAAOyB,gBACtB,kBAACqC,EAAA,EAAD,CACCC,QAAQ,WACRC,MAAM,UACNC,UAAW,kBAAC,IAAD,MACXC,QAASR,EACTC,SAAUA,GALX,cASA,kBAACQ,EAAA,EAAD,CACCJ,QAAQ,WACRC,MAAM,gBACN1D,UAAWN,EAAO+B,eAEjB6B,EAAS,YAAH,mBAA6BQ,YAAOP,EAAW,iB,qGCsP3CQ,GAxPI,SAAC,GAQmB,IAPtCC,EAOqC,EAPrCA,MACAC,EAMqC,EANrCA,YACAC,EAKqC,EALrCA,KACApE,EAIqC,EAJrCA,SACAqE,EAGqC,EAHrCA,aACAC,EAEqC,EAFrCA,eACAC,EACqC,EADrCA,WAEM3E,EAASmC,IADsB,EAEWyC,mBAC/CJ,EAAKK,aAH+B,mBAE9BC,EAF8B,KAEZC,EAFY,OAKGH,oBAAkB,GALrB,mBAK9BI,EAL8B,KAKhBC,EALgB,OAMOL,oBAAS,GANhB,mBAM9BM,EAN8B,KAMdC,EANc,KAc/BC,EAAkB,SAACC,IACxB,OAAIb,QAAJ,IAAIA,OAAJ,EAAIA,EAAMc,KACTlF,EAAS,CACRS,KAAMC,IAA2ByE,iBACjCvE,QAAS,CACRsE,GAAId,EAAKc,GACTd,KAAMa,MAWJG,EAAkB,WACvBP,GAAgB,IAQXQ,EAAoB,WACpBf,GAKJK,EAAoB,IACpBK,EAAgB,2BACZZ,GADW,IAEdK,YAAa,GACba,WAAW,EACXC,SAAU,IAAIC,SARfnB,EAAaD,EAAKc,IAAM,IAWzBL,GAAgB,IAQXY,EAAsB,SAACC,GAC5Bf,EAAoBe,EAAE7E,OAAO8E,QAWxBC,EAAiB,uCAAG,WACzBF,GADyB,SAAAG,EAAA,sDAGrBzB,EAAKK,cAAgBC,GACxBM,EAAgB,2BACZZ,GADW,IAEdK,YAAaC,KANU,2CAAH,sDAiBjBoB,EAAmB,SAACC,GACrBA,IACHf,EAAgB,2BACZZ,GADW,IAEdmB,SAAUQ,KAEXhB,GAAkB,KASdiB,EAAc,iBAAoC,KAArBtB,GAQ7BuB,EAAuB,SAACP,GAC7BV,EAAgB,2BACZZ,GADW,IAEdkB,UAAWI,EAAE7E,OAAOP,YAWhB4F,EAAe,SAACR,GACrBA,EAAES,iBACFtB,GAAgB,IAGjB,OACC,kBAAC,IAAD,CAAWV,YAAW,UAAKA,GAAeD,MAAOA,IAC/C,SAACkC,GAAD,OACA,yCAEKA,EAASC,eAFd,CAGCC,IAAKF,EAASG,SACdrG,UAAU,gBAEV,kBAACsG,EAAA,EAAD,CACCC,WAAS,EACTnH,QAAS,EACTY,UAAS,UAAKN,EAAOoC,SAAZ,YACRuC,GAAcH,EAAKkB,UAAY1F,EAAO0C,KAAO,KAI9C,kBAACkE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC5B,kBAACC,EAAA,EAAD,CAASC,MAAM,gBACd,kBAAC1G,EAAA,EAAD,CACCC,QAAS8D,EAAKkB,UACd0B,WAAY,CAAE,aAAc,sBAC5B9B,GAAE,kCAAsBd,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAMc,IAC9B3E,SAAU0F,EACV1C,UAAWyC,IACXiB,eAAgBjB,QAInB,kBAACQ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5BzC,EAAKkB,UACL,kBAACvB,EAAA,EAAD,CAAY7D,UAAWN,EAAOkD,eAC5BsB,EAAKK,aAGP,kBAACyC,EAAA,EAAD,CACChH,UAAWN,EAAO8C,UAClBwC,GAAE,qCAAyBd,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAMc,IACjCnE,MAAM,cACN4C,QAAQ,WACRgC,MAAOjB,EACPnE,SAAUkF,EACV0B,OAAQvB,KAIX,kBAACY,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5BzC,EAAKkB,UACL,kBAACvB,EAAA,EAAD,CAAY7D,UAAWN,EAAOkD,eAC5BkB,YAAOI,EAAKmB,SAAU,eAGxB,kBAAC,IAAD,CAAyB6B,MAAOC,MAC/B,kBAAC,IAAD,CACCC,gBAAc,EACd3D,QAAQ,SACR4D,aAAa,WACbvD,OAAO,aACPkB,GAAE,kCAAsBd,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAMc,IAC9BnE,MAAM,YACN4E,MAAOvB,EAAKmB,SACZhF,SAAUuF,EACV0B,oBAAqB,CACpB,aAAc,eAEftH,UAAWN,EAAOsD,WAClBuE,KAAM3C,EACN4C,OAAQ,kBAAY3C,GAAkB,IACtC4C,QAAS,kBAAY5C,GAAkB,IACvC6C,WAAS,MAKb,kBAACpB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAG3G,UAAWN,EAAO+C,SAClD,kBAACmE,EAAA,EAAD,CAASC,MAAM,UACd,kBAACc,EAAA,EAAD,CAAY/D,QAASoC,GACpB,kBAAC,IAAD,MACA,0BAAMhG,UAAU,wBAAhB,iBAGF,kBAAC4H,GAAA,EAAD,CACCL,KAAM7C,EACN+C,QAASvC,EACT2C,SAAU3C,EACV4C,UAAW3C,GAJZ,8CAQA,kBAACyB,EAAA,EAAD,CAASC,MAAM,cACd,kBAACc,EAAA,EAAD,eACC3H,UAAWN,EAAOgD,UAEdwD,EAAS6B,iBAEb,kBAAC,IAAD,MACA,0BAAM/H,UAAU,wBAAhB,6B,oBCpKMgI,GA5FK,SAAC,GAKmB,IAJvCC,EAIsC,EAJtCA,cACA1B,EAGsC,EAHtCA,UACA2B,EAEsC,EAFtCA,KACApI,EACsC,EADtCA,SAEMJ,EAASuD,IADuB,EAERqB,oBAAqB,OAAJ4D,QAAI,IAAJA,OAAA,EAAAA,EAAMC,QAAS,IAFxB,mBAE/BC,EAF+B,KAEtBC,EAFsB,KAQhCC,EAAiB,uCAAG,4BAAA3C,EAAA,2DACjB,OAAJuC,QAAI,IAAJA,OAAA,EAAAA,EAAMlD,KAAMkD,EAAKC,QAAUC,EADN,uBAElBrD,EAFkB,2BAGpBmD,GAHoB,IAIvBC,MAAOC,IAERtI,EAAS,CACRS,KAAMC,IAA2B+H,YACjC7H,QAAS,CACRsE,GAAIkD,EAAKlD,GACTd,KAAMa,KAVgB,SAalByD,KAAmBC,OAAOP,EAAKlD,GAAID,GAbjB,2CAAH,qDAiBjB2D,EAAmB,uCAAG,WAC3BlD,GAD2B,iBAAAG,EAAA,6DAG3BH,EAAES,iBACIO,EAAOmC,aAAaV,EAAe1B,GAJd,SAKViC,KAAmBI,OAAOpC,GALhB,OAKrBxB,EALqB,OAM3BlF,EAAS,CACRS,KAAMC,IAA2BqI,SACjCnI,QAAQ,aACPsE,MACGwB,KAVsB,2CAAH,sDAenBsC,EAAU,uCAAG,WAClBtD,GADkB,SAAAG,EAAA,yDAGlBH,EAAES,mBAHgB,OAIdiC,QAJc,IAIdA,OAJc,EAIdA,EAAMlD,IAJQ,uBAKjBlF,EAAS,CACRS,KAAMC,IAA2BuI,WACjCrI,QAASwH,EAAKlD,KAPE,SASXwD,KAAmBQ,OAAOd,EAAKlD,IATpB,2CAAH,sDAahB,OACC,kBAACjF,EAAA,EAAD,CAAKC,UAAWN,EAAOL,KACrB6I,EACA,kBAAC5B,EAAA,EAAD,CAAMC,WAAS,EAACvG,UAAWN,EAAOoC,UACjC,kBAACwE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACd,kBAACO,EAAA,EAAD,CACChH,UAAWN,EAAO8C,UAClB3B,MAAM,QACNoI,WAAS,EACTC,KAAM,EACNzF,QAAQ,WACRgC,MAAO2C,EACP/H,SA7DsB,SAACmF,GAC5B6C,EAAW7C,EAAE7E,OAAO8E,QA6DfwB,OAAQqB,KAGV,kBAAChC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGzG,UAAWN,EAAOwD,aACnC,kBAAC0D,EAAA,EAAD,CAASC,MAAM,eACd,kBAACc,EAAA,EAAD,CAAY/D,QAASkF,GACpB,kBAAC,IAAD,MACA,0BAAM9I,UAAU,wBAAhB,mBAMJ,kBAACwD,EAAA,EAAD,CAAQG,UAAW,kBAAC,IAAD,MAAaC,QAAS8E,GAAzC,e,UC9FWS,GADK,SAACC,GAAD,OAAqBA,EAAIA,EAAIC,OAAS,I,wCCgB3CC,GAbG,SACjBF,EACAG,EACAC,EACAC,GAEA,IAAMC,EAAI,YAAON,GAIjB,OAHAM,EAAKC,OAAOJ,EAAQ,GACpBG,EAAKC,OAAOH,EAAa,EAAGC,GAErBC,GC6POE,OAAMC,MA3OG,SAAC,GAMmB,IAL3CC,EAK0C,EAL1CA,UACA5F,EAI0C,EAJ1CA,KACA6F,EAG0C,EAH1CA,SACA5B,EAE0C,EAF1CA,MACAF,EAC0C,EAD1CA,cAGMvI,EAASoB,IAF2B,EAGNnB,qBAAWC,KAAvCE,EAHkC,EAGlCA,SAAUD,EAHwB,EAGxBA,cAHwB,EAI5ByE,mBAAS0F,gBAAhBC,EAJmC,sBAKd3F,oBAAkB,GALJ,mBAKnChB,EALmC,KAK3B4G,EAL2B,OAMN5F,oBAAkB,GANZ,mBAMnC6F,EANmC,KAMvBC,EANuB,OAOR9F,mBAAe,IAAIgB,MAPX,mBAOnC/B,EAPmC,KAOxB8G,EAPwB,KAS1CC,qBAAU,WAET,IAAMtF,EAAKuF,YAAW,sBAAC,8BAAA5E,EAAA,yDACjBwE,EADiB,iEAGLK,KAAuBC,yBACvCX,EACA7B,GALqB,cAGhByC,EAHgB,gBAOFC,KAAsBF,yBACzCX,EACA7B,GATqB,UAOhB2C,EAPgB,OAajBC,YAAQH,EAAIxG,IAAU2G,YAAQD,EAAM,GAAIb,GAbvB,wBAerBG,GAAU,GAfW,UAgBfM,KAAuBM,WAAW5G,GAhBnB,oBAiBjB6F,QAjBiB,IAiBjBA,OAjBiB,EAiBjBA,EAAU/E,IAjBO,kCAkBd2F,KAAsBlC,OAAOsB,EAAS/E,GAAI+E,GAlB5B,QAoBrBM,EAAa,IAAI/E,MACjB4E,GAAU,GArBW,4CAuBpB,KAEH,OAAO,kBAAYa,cAAc/F,MAC/B,CAACd,EAAM4F,EAAWC,EAAU9B,EAAekC,IAQ9C,IAiCM/G,EAAY,uCAAG,WACpBoC,GADoB,iBAAAG,EAAA,yDAGpBH,EAAES,kBACEgC,IAAiB8B,EAAS/E,GAJV,uBAKbgG,EAAgBC,aAAiBhD,EAAe6B,GALnC,SAOCU,KAAuB5B,OAAOoC,GAP/B,cAObE,EAPa,gBASbP,KAAsBlC,OAAOsB,EAAS/E,GAAtC,2BACF+E,GADE,IAELoB,MAAM,GAAD,mBAAMpB,EAASoB,OAAf,CAAsBD,OAXT,OAenBpL,EAAS,CACRS,KAAMC,IAA2B4K,iBACjC1K,QAAS,CACR2K,UAAU,aACTrG,GAAIkG,GACDF,GAEJjB,SAAUA,EAAS/E,MAtBF,2CAAH,sDAmCZb,EAAY,uCAAG,WAAOa,GAAP,SAAAW,EAAA,0DAChBoE,EAAS/E,GADO,uBAEnBoF,GAAc,GAFK,SAIbI,KAAuBxB,OAAOhE,GAJjB,UAOW,IAA1B+E,EAASoB,MAAM9B,OAPA,gCAQZsB,KAAsB3B,OAAOe,EAAS/E,IAR1B,OAWnBlF,EAAS,CACRS,KAAMC,IAA2B8K,iBACjC5K,QAAS,CACR6K,SAAUvG,EACVwG,WAAYzB,EAAS/E,MAIvBoF,GAAc,GAnBK,2CAAH,sDAkDZqB,EAA0B,SAC/BzG,EACA0G,GAEA,IAAM1H,EAAQ2H,aAAuBzH,EAAM,KAAMc,GAEjD,IAAe,IAAXhB,EAAc,OAAO,kBAAC,WAAD,CAAUiG,IAAK2B,aAAa3B,EAAKyB,KAE1D,IAAMG,EAAuC3H,EAAKF,GAClD,cAAI6H,QAAJ,IAAIA,OAAJ,EAAIA,EAAe7G,IAEjB,kBAAC,GAAD,CACCiF,IAAG,OAAE4B,QAAF,IAAEA,OAAF,EAAEA,EAAe7G,GACpBf,YAAW,OAAE4H,QAAF,IAAEA,OAAF,EAAEA,EAAe7G,GAC5BhB,MAAO0H,EACPxH,KAAM2H,EACN/L,SAAUA,EACVqE,aAAcA,EACdC,eA7BoB,IAAhBF,EAAKmF,OA8BThF,WAAYxE,IAIR,kBAAC,WAAD,CAAUoK,IAAK2B,aAAa3B,EAAKyB,MAMzC,OACC,kBAACI,EAAA,EAAD,CAAejF,MAAOkF,aAA0BjC,IAC/C,kBAAC,IAAD,CAAiBkC,UArJD,SAACC,GAA+B,IACzCzC,EAAqCyC,EAArCzC,YAAaD,EAAwB0C,EAAxB1C,OAAQtF,EAAgBgI,EAAhBhI,YAE7B,GACEuF,IACAA,EAAY0C,cAAgB3C,EAAO2C,aACnC1C,EAAYxF,QAAUuF,EAAOvF,OAH/B,CAQA,IAAMmH,EAAQ7B,GACbS,EAASoB,MACT5B,EAAOvF,MACPwF,EAAYxF,MACZC,GAGDnE,EAAS,CACRS,KAAMC,IAA2B2L,oBACjCzL,QAAQ,2BACJqJ,GADG,IAENoB,eAgIA,kBAACpL,EAAA,EAAD,CAAKC,UAAWN,EAAOqB,cACtB,kBAAC,IAAD,CAAWmL,YAAapC,IACtB,SAAC5D,GAAD,OACA,yCAEKA,EAASkG,eAFd,CAGChG,IAAKF,EAASG,WAEb0D,EAASoB,MAAMkB,IAAIZ,GACnBvF,EAASoG,gBAIZC,aAAWzC,IACX,kBAAC,GAAD,CACC7B,cAAeA,EACf1B,UAAWuD,EACX5B,KAAMC,EACNrI,SAAUA,IAGZ,kBAAC,EAAD,CACCsD,aAAcA,EACdC,SA3EqC,KAAlC8F,GAAYjF,GAAMK,YA4ErBjB,OAAQA,EACRC,UAAWA,U,UCpQJiJ,GAGT,CACHC,cAAe,gBACfC,eAAgB,iBAChBC,iBAAkB,mBAClBC,cAAe,gBACfC,QAAS,UACTC,SAAU,WACVC,oBAAqB,sBACrBC,SAAU,WACVC,WAAY,c,8BCFAC,GAAyBC,aAIpC,CACDlD,IAAK,aACLmD,QAAS,UACTC,OAAQ,CACPC,QAAS,CACRC,GAAI,CACHC,YAAa,YAGfpF,QAAS,M,uCCsIIqF,UApHS,WAAqB,IAAD,EACrBC,qBAAWR,IADU,mBACpCS,EADoC,KAC7BC,EAD6B,OAEqBjO,qBAC/DC,KADOiO,EAFmC,EAEnCA,oBAAqB9D,EAFc,EAEdA,SAAU+D,EAFI,EAEJA,cAAe3F,EAFX,EAEWA,MAI5CF,EACNtI,qBAAWoO,MADdJ,MAAS1F,cANiC,EAQ7B3D,mBAAS0F,gBAAhBC,EARoC,oBAU3CK,qBAAU,YACQ,OAAbrC,QAAa,IAAbA,OAAA,EAAAA,EAAejD,KAAM8I,GACxBF,EAAK,iBAEJ,CAAC3F,EAAe6F,EAAeF,IAQlC,IAqCMI,EAAQ,uCAAG,oCAAArI,EAAA,kEACZsC,QADY,IACZA,OADY,EACZA,EAAejD,IADH,wBAETiJ,EAAWhG,EAAcjD,GAFhB,SAGawF,KAAuB0D,aAAaD,GAHjD,cAGTE,EAHS,gBAIQ3F,KAAmB0F,aAAaD,GAJxC,cAITG,EAJS,iBAMGC,aAAkB,iBACnCpG,QADmC,IACnCA,OADmC,EACnCA,EAAerH,YADoB,QACZ,SACvBuN,EACAC,GATc,QAMTE,EANS,OAWfC,aAASD,GAXM,4CAAH,qDAed,OACC,oCACC,kBAAC,IAAD,CAAeE,KAAK,QACnB,kBAAClI,EAAA,EAAD,CAAMC,WAAS,EAACnH,QAAS,GACxB,kBAACkH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIE,GAAI,GACtB,kBAAC8H,EAAA,EAAD,CAAcC,UAAU,MAAxB,oBACA,kBAAC3O,EAAA,EAAD,CAAKC,UAAU,gBACd,kBAAC6D,EAAA,EAAD,yGAIA,kBAACA,EAAA,EAAD,yEAID,kBAAC8K,GAAA,EAAD,MACA,kBAACC,EAAA,EAAD,MACA,kBAACD,GAAA,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC5O,EAAA,EAAD,KA5CyB,WAC7B,OAAQ4N,EAAMlI,OACb,IAAK,UACJ,OAAO,oCA7BDoJ,OAAOC,KAAKtC,IAA6CH,KAChE,SAAC7F,EAAMkF,GACN,UAAIzD,QAAJ,IAAIA,OAAJ,EAAIA,EAAejD,GAAI,CACtB,IAAMd,EAAO2J,EAAoBkB,OAAOC,aAAwBxI,IAC1DyI,EAAQlF,EAASgF,OAAOC,aAAwBxI,IAChD0B,EAAOC,EAAM4G,OAAOC,aAAwBxI,IAElD,GAAItC,EAAKmF,OAAS,GAAK4F,EAAM5F,OAAS,EACrC,OACC,kBAAC,GAAD,CACCY,IAAK2B,aAAa3B,EAAKyB,GACvB5B,UAAWtD,EACXtC,KAAMA,EACN6F,SAAUkF,EAAM,GAChB9G,MAAOD,EAAK,IAAM,KAClBD,cAAeA,EAAcjD,KAMjC,OAAO,kBAAC,WAAD,CAAUiF,IAAK2B,aAAa3B,EAAKyB,SASzC,IAAK,UACL,QACC,OAAO,kBAACwD,GAAA,EAAD,OAsCCC,KAEP,kBAAC7I,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIE,GAAI,GACtB,kBAACyI,EAAA,EAAD,MACA,kBAACtD,EAAA,EAAD,KACC,kBAACuD,EAAA,EAAD,CAAMX,UAAU,MAAMY,gBAAc,GACnC,kBAACC,EAAA,EAAD,CAAUC,QAAM,GACf,kBAACC,EAAA,EAAD,KACC,kBAAC,IAAD,OAED,kBAACC,EAAA,EAAD,CAAc9L,QAASoK,GAAvB,sBAQN,kBAAC2B,GAAA,EAAD,CAASC,IAAI,0B,oBC3JhB,IAAIvD,EAAM,CACT,uBAAwB,CACvB,IACA,GAED,2BAA4B,CAC3B,IACA,GAED,gBAAiB,CAChB,IACA,GAED,oBAAqB,CACpB,IACA,GAED,iBAAkB,CACjB,IACA,GAED,qBAAsB,CACrB,IACA,GAED,mBAAoB,CACnB,IACA,GAED,uBAAwB,CACvB,IACA,GAED,oBAAqB,CACpB,IACA,GAED,wBAAyB,CACxB,IACA,GAED,uBAAwB,CACvB,IACA,GAED,2BAA4B,CAC3B,IACA,GAED,oBAAqB,CACpB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,UAAW,CACV,IACA,IAED,aAAc,CACb,IACA,KAGF,SAASwD,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAE3D,EAAKyD,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAI3K,EAAI,IAAI4K,MAAM,uBAAyBN,EAAM,KAEjD,MADAtK,EAAE6K,KAAO,mBACH7K,KAIR,IAAI8K,EAAMjE,EAAIyD,GAAM9K,EAAKsL,EAAI,GAC7B,OAAOP,EAAoBvK,EAAE8K,EAAI,IAAIH,MAAK,WACzC,OAAOJ,EAAoB/K,MAG7B6K,EAAoBf,KAAO,WAC1B,OAAOD,OAAOC,KAAKzC,IAEpBwD,EAAoB7K,GAAK,IACzBuL,EAAOC,QAAUX,G,wLCzDFY,EAzBUzR,aAAW,SAACC,GAAD,MAAY,CAC/CC,KAAM,CACLwR,SAAU,QACVC,KAAM1R,EAAMG,QAAQ,GACpBwR,OAAQ3R,EAAMG,QAAQ,IAEvByR,KAAM,CACLC,YAAa7R,EAAMG,QAAQ,IAE5B2R,OAAQ,CACPlO,QAAS5D,EAAMG,QAAQ,GACvB4R,SAAU,QACVhP,MAAO,QAERiP,SAAU,CACT1R,QAAS,OACTC,eAAgB,gBAChBL,aAAcF,EAAMG,QAAQ,GAC5B+C,cAAelD,EAAMG,QAAQ,GAC7B8R,aAAc,EACdC,kBAAmBlS,EAAMqD,QAAQC,KAAK,KACtC6O,kBAAmB,a,iBCRNC,EAPEC,aAChB,SAACC,GAAD,OAA4B,OAAO,YAAyBA,EAAM3B,QAClE,CACC4B,SAAU,kBAACtC,EAAA,EAAD,QC6DGS,EA1DC,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,IACZ6B,EAAQhB,IADsC,EAEhBnM,oBAAkB,GAFF,mBAE7CoN,EAF6C,KAEjCC,EAFiC,KAU9CC,EAAe,SAACrK,GAAD,OAAmB,SACvCjH,GAEIA,aAAiBuR,eAEJ,YAAfvR,EAAMC,OACS,QAAdD,EAAM2J,KAA+B,UAAd3J,EAAM2J,MAOhC0H,EAAcpK,KAGf,OACC,oCACC,yBAAKvH,UAAWyR,EAAMvS,KAAMsP,KAAK,iBAChC,kBAACsD,EAAA,EAAD,CAAKpO,MAAM,YAAYE,QAASgO,GAAa,GAAOnO,QAAQ,YAC3D,kBAAC,IAAD,CAAiBzD,UAAWyR,EAAMZ,OADnC,SAKD,kBAACkB,EAAA,EAAD,CACCC,OAAO,OACPzK,KAAMmK,EACNjK,QAASmK,GAAa,GACtBK,QAAS,CACRC,MAAOT,EAAMV,SAGd,kBAAChR,EAAA,EAAD,CAAKC,UAAWyR,EAAMR,UACrB,kBAACpN,EAAA,EAAD,CAAYJ,QAAQ,MAApB,QACA,kBAACD,EAAA,EAAD,CACCI,QAASgO,GAAa,GACtBjO,UAAW,kBAAC,IAAD,OAFZ,UAQD,kBAAC,EAAD,CAAUiM,IAAKA,Q,iCClEnB,kCAIO,IAAMuC,EAA0D,CACtE1F,cAAe,kBACfC,eAAgB,mBAChBC,iBAAkB,iCAClBC,cAAe,yBACfC,QAAS,gCACTC,SAAU,kCACVC,oBAAqB,sDACrBC,SAAU,oCACVC,WAAY,6C,yHCAEmF,EAVKpT,aAAW,SAACC,GAAD,MAAY,CAC1C4H,MAAM,aACLwL,WAAY,IACZlT,aAAcF,EAAMG,QAAQ,IAC3BH,EAAMqC,YAAYC,KAAK,MAAQ,CAC/B+Q,SAAUrT,EAAMsT,WAAWC,GAAGF,eCsBlB7D,EAnBM,SAAC,GAIkB,IAHvCgE,EAGsC,EAHtCA,SACAzS,EAEsC,EAFtCA,UACGuR,EACmC,wCAChC7R,EAAS0S,IACf,OACC,kBAACvO,EAAA,EAAD,eACCJ,QAAQ,KACRC,MAAM,cACN1D,UAAS,UAAKN,EAAOmH,MAAZ,YAAqB7G,IAE1BuR,GAEHkB,K,iQCjBSC,EAAa,SAACtK,GAA+B,IAAjBrG,EAAgB,uDAAP,GACjD,MAAO,CACNA,SACA4Q,QAAS,CAACvK,KAQCwK,EAAsB,WAClC,MAAO,CASNC,SAAU,KACVC,YAAa,CAAC,EAAG,EAAG,EAAG,IACvBC,OAAQ,CACPJ,QAAS,CACR,CACCK,KAAK,kBAAD,OAAoBlP,YAAO,IAAIwB,KAAQ,sBAC3C2N,UAAW,SACXX,SAAU,GACV5O,MAAO,YAaCwP,EAAe,SAACC,GAAsC,IAA1B1B,EAAyB,uDAAP,GAC1D,MAAO,CACN2B,MAAO,CACNC,OAAQ,CAAC,KACTC,KAAM,CAAC,CAACH,KAET1B,UASW8B,EAAc,SAACP,GAC3B,IAAM5K,EAAU8K,EAAaR,EAAWM,GAAO,CAAC,eAEhD,OAAO,2BACH5K,GADJ,IAECoL,OAAQ,eAQGC,EAAc,SAACrL,GAAD,OAAkBsK,EAAWtK,EAAS,KAMpDsL,EAAa,SAACC,GAAsC,IAA1BlC,EAAyB,uDAAP,GACxD,MAAO,CACN2B,MAAO,CACNC,OAAQ,CAAC,MAAO,KAChBC,KAAMK,GAEPlC,QACA+B,OAAQ,e,iCC3FV,iFAUazH,EAA4B,SAAC9B,GACzC,OAAOkI,IAAmBlI,IAoBdsC,EAAa,SAACqH,GAC1B,OAAmD,IAZS,CAC5D,gBACA,kBAU0BC,QAAQD,K,iCC/BnC,aAEe,aAAUtF,GACxB,IAAMwF,EAAUC,cACM,QAAX,OAAPD,QAAO,IAAPA,OAAA,EAAAA,EAASlT,OAAmC,UAAX,OAAPkT,QAAO,IAAPA,OAAA,EAAAA,EAASlT,MAKvC0N,EAAI/G,OAJH+G,EAAI0F,a,uKC8DS5E,EAnDO,SAAC,GAAoD,IAAlD6E,EAAiD,EAAjDA,QAClBvU,EAASwU,cAiBf,OACC,kBAACpI,EAAA,EAAD,CACCjF,MAAM,qBACNsN,cAAc,sBAEd,kBAACpU,EAAA,EAAD,CAAKC,UAAWN,EAAOL,KACtB,kBAACgQ,EAAA,EAAD,CAAMrP,UAAWN,EAAO0U,MACtBC,IAAqBhI,KACrB,SAACjE,EAAiBsD,GAAlB,OACC,kBAAC3L,EAAA,EAAD,CAAKkK,IAAK7B,EAASsG,UAAU,MAC5B,kBAACa,EAAA,EAAD,CACCb,UAAU,MACV1O,UAAS,UAAKN,EAAO4U,SAAZ,YACA,IAAR5I,EAAYhM,EAAO6U,cAAgB,KAGpC,kBAAC7E,EAAA,EAAD,CAAc1P,UAAWN,EAAO8U,cAAhC,UACK9I,EAAM,EADX,aACiBtD,GAChB,kBAACrI,EAAA,EAAD,CAAKC,UAAWN,EAAO+U,iBACd,OAAPR,QAAO,IAAPA,OAAA,EAAAA,EAAUvI,KA5BL,SAACgJ,GAChB,IAAMC,EAAMC,YAAkBF,EAAQG,KACtC,OAAIF,EACI,kBAACA,EAAIG,KAAL,CAAUrD,MAAO,CAAE/N,MAAOiR,EAAIjR,SAG/B,qCAsBqBqR,CAAQd,EAAQvI,ICtCpB,SACzBA,EACAuI,GAEA,GAAIA,GAAmC,qBAAjBA,EAAQvI,GAAsB,CAAC,IAC5ChI,EAAUkR,YAAkBX,EAAQvI,GAAMmJ,KAA1CnR,MACR,OACC,kBAACG,EAAA,EAAD,CAAY4N,MAAO,CAAE/N,QAAO2O,WAAY,MACtC2C,IAAUtJ,GAAKuJ,QAAQhB,EAAQvI,KAKnC,OAAO,ED0BIwJ,CAAWxJ,EAAKuI,e,qJErC5BkB,IAAQC,IAAMC,IAASF,QAAQC,IAE/B,IAAME,EAAe,SAAC3B,GACrB,OAAqB,IAAjBA,EAAMtK,OACF,CACN2J,KAAM,kBACNvB,MAAO,YAIFiC,YACNC,EAAMtH,KAAI,gBAAG9H,EAAH,EAAGA,YAAac,EAAhB,EAAgBA,SAAhB,MAA+B,CACxC,CACC2N,KAAMzO,GAAe,0BACrBkN,MAAuB,KAAhBlN,EAAqB,WAAa,IAE1CT,YAAOuB,EAAU,oBAKpB,2CAAe,WACdwB,EACAgH,EACA1F,GAHc,eAAAxC,EAAA,6DAKR4P,EALQ,2BAMV3C,eANU,IAQbxK,QAAS,CACRmL,YAAY,GAAD,OAAI1M,EAAJ,wBACX4M,YAAY,YACP5E,OAAOC,KAAKqD,KAA8C9F,KAC7D,SAAC5G,EAAOiG,GACP,IAAMtC,EAAM,GACNuK,EAAQ9F,EAAoBkB,QACjC,SAACyG,GAAD,OAAOA,EAAEC,kBAAoBhQ,KAExByC,EAAOC,EAAM4G,QAAO,SAACyG,GAAD,OAAOA,EAAEC,kBAAoBhQ,KACvD,OAAqB,IAAjBkO,EAAMtK,OAAqB,IAEnB,IAARqC,GAAWtC,EAAIsM,KAAK,KACxBtM,EAAIsM,KAAK,CAAE1C,KAAMb,IAAmB1M,GAAQgM,MAAO,YACnDrI,EAAIsM,KAAKJ,EAAa3B,IAClBzL,EAAKmB,OAAS,GAAuB,KAAlBnB,EAAK,GAAGC,QAC9BiB,EAAIsM,KAAK,KACTtM,EAAIsM,KAAK,CAAE1C,KAAM,QAASvB,MAAO,eACjCrI,EAAIsM,KAAKxN,EAAK,GAAGC,QAEXiB,SAMX1J,OAAQ,CACPiW,WAAY,CACXrD,SAAU,GACVsD,MAAM,EACNC,UAAWC,IAAU,KACrBpS,MAAO,QACPuP,UAAW,UAEZ8C,QAAS,CACRzD,SAAU,GACVsD,MAAM,GAEPI,WAAY,CACX1D,SAAU,GACVsD,MAAM,GAEPK,WAAY,CACXhD,UAAW,SAEZiD,SAAU,CACTC,SAAS,EACTzS,MAAO,SAIT0S,aAAc,CACb9D,SAAU,GACVsD,MAAM,KA7DM,kBAgEPT,IAAQkB,UAAUd,IAhEX,2CAAf","file":"static/js/27.e8517e7b.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core\"\n\n// Styles definition for the Action Header components\nconst useActionHeaderStyles = makeStyles((theme) => ({\n\troot: {\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\tbox: {\n\t\tflexGrow: 2,\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"flex-end\",\n\t},\n}))\n\nexport default useActionHeaderStyles\n","import React, { ReactElement, useContext } from \"react\"\nimport { FormControlLabel, Checkbox, Box } from \"@material-ui/core\"\nimport useActionHeaderStyles from \"./_config/style\"\nimport { ActionChecklistContext } from \"../../../state/action-checklist\"\nimport { ActionChecklistActionTypes } from \"../../../state/action-checklist/shape\"\n\n/**\n * Header component for the Action Checklist page\n *\n * @returns ReactElement\n */\nconst ActionHeader = (): ReactElement => {\n\tconst styles = useActionHeaderStyles()\n\tconst { hideCompleted, dispatch } = useContext(ActionChecklistContext)\n\n\t/**\n\t * Change the state of the \"hide all completed\"\n\t * checkbox\n\t *\n\t * @param {React.ChangeEvent<HTMLInputElement>} event\n\t * @returns void\n\t */\n\tconst handleHideChange = (\n\t\tevent: React.ChangeEvent<HTMLInputElement>\n\t): void => {\n\t\tdispatch({\n\t\t\ttype: ActionChecklistActionTypes.ChangeHideCompleted,\n\t\t\tpayload: event.target.checked,\n\t\t})\n\t}\n\n\treturn (\n\t\t<Box className={styles.root}>\n\t\t\t<FormControlLabel\n\t\t\t\tcontrol={\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tchecked={hideCompleted}\n\t\t\t\t\t\tonChange={handleHideChange}\n\t\t\t\t\t\tname=\"hide-items\"\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tlabel=\"Hide completed actions\"\n\t\t\t/>\n\t\t</Box>\n\t)\n}\n\nexport default ActionHeader\n","import { makeStyles } from \"@material-ui/core\"\n\n// style definition for action container component\nexport const useActionContainerStyles = makeStyles((theme) => ({\n\tdropdownBody: {\n\t\tpaddingRight: theme.spacing(2),\n\t\tpaddingLeft: theme.spacing(2),\n\t},\n}))\n\n// style definition for action styles component\nexport const useActionsStyles = makeStyles((theme) => ({\n\tactionsWrapper: {\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"flex-start\",\n\t\tmarginTop: theme.spacing(3),\n\t\talignItems: \"center\",\n\t\t[theme.breakpoints.down(\"sm\")]: {\n\t\t\tflexDirection: \"column\",\n\t\t\talignItems: \"flex-start\",\n\t\t\tmarginTop: theme.spacing(2),\n\t\t},\n\t},\n\tsaveIndicator: {\n\t\tuserSelect: \"none\",\n\t\t[theme.breakpoints.up(\"sm\")]: {\n\t\t\tmarginLeft: theme.spacing(2),\n\t\t},\n\t},\n}))\n\n// style definition for action item component\nexport const useActionItemStyles = makeStyles((theme) => ({\n\tgridRoot: {\n\t\talignItems: \"center\",\n\t\tmargin: 0,\n\t\twidth: \"100%\",\n\t\tbackground: \"white\",\n\t\t\"& > .MuiGrid-item\": {\n\t\t\tpaddingTop: theme.spacing(1),\n\t\t\tpaddingBottom: theme.spacing(1),\n\t\t},\n\t},\n\thide: {\n\t\theight: \"10px\",\n\t\tbackground: theme.palette.grey[200],\n\t\tmarginTop: theme.spacing(1),\n\t\tmarginBottom: theme.spacing(1),\n\t\t\"& > *\": {\n\t\t\tdisplay: \"none !important\",\n\t\t},\n\t},\n\ttextfield: {\n\t\twidth: \"100%\",\n\t},\n\tactions: {\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"flex-end\",\n\t},\n\tdragIcon: {\n\t\tcursor: \"move\",\n\t},\n\tcompletedText: {\n\t\tpadding: \"18.5px 14px\",\n\t\tlineHeight: \"1.1876em\",\n\t\ttextDecoration: \"line-through\",\n\t},\n\tdatepicker: {\n\t\tmargin: 0,\n\t},\n}))\n\nexport const useActionNotesStyles = makeStyles((theme) => ({\n\tbox: {\n\t\tmarginTop: theme.spacing(3),\n\t},\n\ttextfield: {\n\t\twidth: \"100%\",\n\t},\n\tgridRoot: {\n\t\talignItems: \"center\",\n\t},\n\tgridActions: {\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"flex-end\",\n\t},\n}))\n","import React, { ReactElement } from \"react\"\nimport AddIcon from \"@material-ui/icons/Add\"\nimport { Box, Button, Typography } from \"@material-ui/core\"\nimport { format } from \"date-fns\"\nimport { useActionsStyles } from \"../_config/styles\"\nimport { IActionsProps } from \"../_config/shape\"\n\n/**\n * Component to display all the actions for a\n * action container\n *\n * @param {IActionsProps} props\n * @returns ReactElement\n */\nconst Actions = ({\n\taddNewAction,\n\tdisabled,\n\tsaving,\n\tlastSaved,\n}: IActionsProps): ReactElement => {\n\tconst styles = useActionsStyles()\n\n\treturn (\n\t\t<Box className={styles.actionsWrapper}>\n\t\t\t<Button\n\t\t\t\tvariant=\"outlined\"\n\t\t\t\tcolor=\"primary\"\n\t\t\t\tstartIcon={<AddIcon />}\n\t\t\t\tonClick={addNewAction}\n\t\t\t\tdisabled={disabled}\n\t\t\t>\n\t\t\t\tAdd action\n\t\t\t</Button>\n\t\t\t<Typography\n\t\t\t\tvariant=\"overline\"\n\t\t\t\tcolor=\"textSecondary\"\n\t\t\t\tclassName={styles.saveIndicator}\n\t\t\t>\n\t\t\t\t{saving ? \"Saving...\" : `Saved at ${format(lastSaved, \"H:mm:ss a\")}`}\n\t\t\t</Typography>\n\t\t</Box>\n\t)\n}\n\nexport default Actions\n","import React, {\n\tReactElement,\n\tChangeEvent,\n\tFocusEvent,\n\tuseState,\n\tMouseEvent,\n} from \"react\"\nimport {\n\tGrid,\n\tCheckbox,\n\tTextField,\n\tIconButton,\n\tTooltip,\n\tTypography,\n} from \"@material-ui/core\"\nimport DragIndicatorIcon from \"@material-ui/icons/DragIndicator\"\nimport DeleteIcon from \"@material-ui/icons/Delete\"\nimport { Draggable } from \"react-beautiful-dnd\"\nimport {\n\tMuiPickersUtilsProvider,\n\tKeyboardDatePicker,\n} from \"@material-ui/pickers\"\nimport DateFnsUtils from \"@date-io/date-fns\"\nimport { format } from \"date-fns\"\nimport { useActionItemStyles } from \"../_config/styles\"\nimport { IActionItemProps } from \"../_config/shape\"\nimport { ActionChecklistActionTypes } from \"../../../../state/action-checklist/shape\"\nimport { BaseActionChecklistStruct } from \"../../../../data/_config/shape\"\nimport ConfirmDialogue from \"../../../ConfirmDialogue\"\n\n/**\n * Component used to render a single action item\n *\n * @param {IActionItemProps} props\n * @returns ReactElement\n */\nconst ActionItem = ({\n\tindex,\n\tdraggableId,\n\tdata,\n\tdispatch,\n\tdeleteAction,\n\tlastItemInList,\n\tglobalHide,\n}: IActionItemProps): ReactElement => {\n\tconst styles = useActionItemStyles()\n\tconst [cacheDescription, setCacheDescription] = useState<string>(\n\t\tdata.description\n\t)\n\tconst [dialogueOpen, setDialogueOpen] = useState<boolean>(false)\n\tconst [datepickerOpen, setDatepickerOpen] = useState(false)\n\n\t/**\n\t * Triggers a update action to change the state\n\t *\n\t * @param {BaseActionChecklistStruct} newData Updated data\n\t * @returns void\n\t */\n\tconst triggerDispatch = (newData: BaseActionChecklistStruct): void => {\n\t\tif (data?.id) {\n\t\t\tdispatch({\n\t\t\t\ttype: ActionChecklistActionTypes.UpdateActionItem,\n\t\t\t\tpayload: {\n\t\t\t\t\tid: data.id,\n\t\t\t\t\tdata: newData,\n\t\t\t\t},\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Closes the confirmation dialogue\n\t *\n\t * @returns void\n\t */\n\tconst onDialogueClose = (): void => {\n\t\tsetDialogueOpen(false)\n\t}\n\n\t/**\n\t * Triggers the delete method if the dialogue is confirmed\n\t *\n\t * @returns void\n\t */\n\tconst onDialogueConfirm = (): void => {\n\t\tif (!lastItemInList) {\n\t\t\t// Deletes the item from the db & state\n\t\t\tdeleteAction(data.id || \"\")\n\t\t} else {\n\t\t\t// Reset the last item\n\t\t\tsetCacheDescription(\"\")\n\t\t\ttriggerDispatch({\n\t\t\t\t...data,\n\t\t\t\tdescription: \"\",\n\t\t\t\tcompleted: false,\n\t\t\t\treviewBy: new Date(),\n\t\t\t})\n\t\t}\n\t\tsetDialogueOpen(false)\n\t}\n\n\t/**\n\t * Changes the state for the description value\n\t *\n\t * @param {ChangeEvent<HTMLInputElement>} e\n\t */\n\tconst onDescriptionChange = (e: ChangeEvent<HTMLInputElement>): void => {\n\t\tsetCacheDescription(e.target.value)\n\t}\n\n\t/**\n\t * When focusing OFF the description field,\n\t * update the state. This prevents a delay in input\n\t *\n\t * @async\n\t * @param {FocusEvent<HTMLInputElement>} e\n\t * @returns Promise<void>\n\t */\n\tconst onDescriptionBlur = async (\n\t\te: FocusEvent<HTMLInputElement>\n\t): Promise<void> => {\n\t\tif (data.description !== cacheDescription) {\n\t\t\ttriggerDispatch({\n\t\t\t\t...data,\n\t\t\t\tdescription: cacheDescription,\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Change the state of the \"Review by\" date\n\t *\n\t * @param {Date|null} date\n\t * @returns void\n\t */\n\tconst handleDateChange = (date: Date | null): void => {\n\t\tif (date) {\n\t\t\ttriggerDispatch({\n\t\t\t\t...data,\n\t\t\t\treviewBy: date,\n\t\t\t})\n\t\t\tsetDatepickerOpen(false)\n\t\t}\n\t}\n\n\t/**\n\t * Check to see if item can be completed\n\t *\n\t * @returns boolean\n\t */\n\tconst canComplete = (): boolean => cacheDescription !== \"\"\n\n\t/**\n\t * Handles the change event when completing a action\n\t *\n\t * @param {ChangeEvent<HTMLInputElement>} e\n\t * @returns void\n\t */\n\tconst handleCheckboxChange = (e: ChangeEvent<HTMLInputElement>): void => {\n\t\ttriggerDispatch({\n\t\t\t...data,\n\t\t\tcompleted: e.target.checked,\n\t\t})\n\t}\n\n\t/**\n\t * Method to handle the action triggered when clicking\n\t * on the delete icon\n\t *\n\t * @param {MouseEvent<HTMLButtonElement>} e\n\t * @returns void\n\t */\n\tconst handleDelete = (e: MouseEvent<HTMLButtonElement>): void => {\n\t\te.preventDefault()\n\t\tsetDialogueOpen(true)\n\t}\n\n\treturn (\n\t\t<Draggable draggableId={`${draggableId}`} index={index}>\n\t\t\t{(provided): ReactElement => (\n\t\t\t\t<div\n\t\t\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\tclassName=\"action-item\"\n\t\t\t\t>\n\t\t\t\t\t<Grid\n\t\t\t\t\t\tcontainer\n\t\t\t\t\t\tspacing={2}\n\t\t\t\t\t\tclassName={`${styles.gridRoot} ${\n\t\t\t\t\t\t\tglobalHide && data.completed ? styles.hide : \"\"\n\t\t\t\t\t\t}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t{/* TODO: Split some of these into other partials */}\n\t\t\t\t\t\t<Grid item xs={2} sm={1} md={1}>\n\t\t\t\t\t\t\t<Tooltip title=\"Mark as done\">\n\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\tchecked={data.completed}\n\t\t\t\t\t\t\t\t\tinputProps={{ \"aria-label\": \"completed checkbox\" }}\n\t\t\t\t\t\t\t\t\tid={`action-complete--${data?.id}`}\n\t\t\t\t\t\t\t\t\tonChange={handleCheckboxChange}\n\t\t\t\t\t\t\t\t\tdisabled={!canComplete()}\n\t\t\t\t\t\t\t\t\tindeterminate={!canComplete()}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={10} sm={5} md={6}>\n\t\t\t\t\t\t\t{data.completed ? (\n\t\t\t\t\t\t\t\t<Typography className={styles.completedText}>\n\t\t\t\t\t\t\t\t\t{data.description}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tclassName={styles.textfield}\n\t\t\t\t\t\t\t\t\tid={`action-description--${data?.id}`}\n\t\t\t\t\t\t\t\t\tlabel=\"Action item\"\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tvalue={cacheDescription}\n\t\t\t\t\t\t\t\t\tonChange={onDescriptionChange}\n\t\t\t\t\t\t\t\t\tonBlur={onDescriptionBlur}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={12} sm={4} md={3}>\n\t\t\t\t\t\t\t{data.completed ? (\n\t\t\t\t\t\t\t\t<Typography className={styles.completedText}>\n\t\t\t\t\t\t\t\t\t{format(data.reviewBy, \"dd/MM/yyyy\")}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<MuiPickersUtilsProvider utils={DateFnsUtils}>\n\t\t\t\t\t\t\t\t\t<KeyboardDatePicker\n\t\t\t\t\t\t\t\t\t\tdisableToolbar\n\t\t\t\t\t\t\t\t\t\tvariant=\"inline\"\n\t\t\t\t\t\t\t\t\t\tinputVariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tformat=\"dd/MM/yyyy\"\n\t\t\t\t\t\t\t\t\t\tid={`action-reviewby--${data?.id}`}\n\t\t\t\t\t\t\t\t\t\tlabel=\"Review by\"\n\t\t\t\t\t\t\t\t\t\tvalue={data.reviewBy}\n\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange}\n\t\t\t\t\t\t\t\t\t\tKeyboardButtonProps={{\n\t\t\t\t\t\t\t\t\t\t\t\"aria-label\": \"change date\",\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tclassName={styles.datepicker}\n\t\t\t\t\t\t\t\t\t\topen={datepickerOpen}\n\t\t\t\t\t\t\t\t\t\tonOpen={(): void => setDatepickerOpen(true)}\n\t\t\t\t\t\t\t\t\t\tonClose={(): void => setDatepickerOpen(false)}\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</MuiPickersUtilsProvider>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={12} sm={2} md={2} className={styles.actions}>\n\t\t\t\t\t\t\t<Tooltip title=\"Delete\">\n\t\t\t\t\t\t\t\t<IconButton onClick={handleDelete}>\n\t\t\t\t\t\t\t\t\t<DeleteIcon />\n\t\t\t\t\t\t\t\t\t<span className=\"MuiTypography-srOnly\">Delete item</span>\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t<ConfirmDialogue\n\t\t\t\t\t\t\t\topen={dialogueOpen}\n\t\t\t\t\t\t\t\tonClose={onDialogueClose}\n\t\t\t\t\t\t\t\tonCancel={onDialogueClose}\n\t\t\t\t\t\t\t\tonConfirm={onDialogueConfirm}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tAre you sure you want to remove this item?\n\t\t\t\t\t\t\t</ConfirmDialogue>\n\t\t\t\t\t\t\t<Tooltip title=\"Reposition\">\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\tclassName={styles.dragIcon}\n\t\t\t\t\t\t\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<DragIndicatorIcon />\n\t\t\t\t\t\t\t\t\t<span className=\"MuiTypography-srOnly\">Reorder priority</span>\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</Draggable>\n\t)\n}\n\nexport default ActionItem\n","import React, { ReactElement, useState, ChangeEvent, MouseEvent } from \"react\"\nimport {\n\tTextField,\n\tBox,\n\tButton,\n\tIconButton,\n\tGrid,\n\tTooltip,\n} from \"@material-ui/core\"\nimport AddIcon from \"@material-ui/icons/Add\"\nimport DeleteIcon from \"@material-ui/icons/Delete\"\nimport { useActionNotesStyles } from \"../_config/styles\"\nimport { IActionNotesProps } from \"../_config/shape\"\nimport ActionNotesUseCase from \"../../../../data/ActionChecklist/NotesLogic\"\nimport { newNotesItem } from \"../../../../data/ActionChecklist/_config/utilities\"\nimport { ActionChecklistActionTypes } from \"../../../../state/action-checklist/shape\"\n\nconst ActionNotes = ({\n\tcurrentClient,\n\tcontainer,\n\tnote,\n\tdispatch,\n}: IActionNotesProps): ReactElement => {\n\tconst styles = useActionNotesStyles()\n\tconst [content, setContent] = useState<string>(note?.notes || \"\")\n\n\tconst handleContentChange = (e: ChangeEvent<HTMLInputElement>): void => {\n\t\tsetContent(e.target.value)\n\t}\n\n\tconst handleContentBlur = async (): Promise<void> => {\n\t\tif (note?.id && note.notes !== content) {\n\t\t\tconst newData = {\n\t\t\t\t...note,\n\t\t\t\tnotes: content,\n\t\t\t}\n\t\t\tdispatch({\n\t\t\t\ttype: ActionChecklistActionTypes.UpdateNotes,\n\t\t\t\tpayload: {\n\t\t\t\t\tid: note.id,\n\t\t\t\t\tdata: newData,\n\t\t\t\t},\n\t\t\t})\n\t\t\tawait ActionNotesUseCase.update(note.id, newData)\n\t\t}\n\t}\n\n\tconst addNotesToContainer = async (\n\t\te: MouseEvent<HTMLButtonElement>\n\t): Promise<void> => {\n\t\te.preventDefault()\n\t\tconst item = newNotesItem(currentClient, container)\n\t\tconst id = await ActionNotesUseCase.create(item)\n\t\tdispatch({\n\t\t\ttype: ActionChecklistActionTypes.AddNotes,\n\t\t\tpayload: {\n\t\t\t\tid,\n\t\t\t\t...item,\n\t\t\t},\n\t\t})\n\t}\n\n\tconst removeNote = async (\n\t\te: MouseEvent<HTMLButtonElement>\n\t): Promise<void> => {\n\t\te.preventDefault()\n\t\tif (note?.id) {\n\t\t\tdispatch({\n\t\t\t\ttype: ActionChecklistActionTypes.RemoveNote,\n\t\t\t\tpayload: note.id,\n\t\t\t})\n\t\t\tawait ActionNotesUseCase.delete(note.id)\n\t\t}\n\t}\n\n\treturn (\n\t\t<Box className={styles.box}>\n\t\t\t{note ? (\n\t\t\t\t<Grid container className={styles.gridRoot}>\n\t\t\t\t\t<Grid item xs={10}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tclassName={styles.textfield}\n\t\t\t\t\t\t\tlabel=\"Notes\"\n\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\trows={3}\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tvalue={content}\n\t\t\t\t\t\t\tonChange={handleContentChange}\n\t\t\t\t\t\t\tonBlur={handleContentBlur}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={2} className={styles.gridActions}>\n\t\t\t\t\t\t<Tooltip title=\"Delete note\">\n\t\t\t\t\t\t\t<IconButton onClick={removeNote}>\n\t\t\t\t\t\t\t\t<DeleteIcon />\n\t\t\t\t\t\t\t\t<span className=\"MuiTypography-srOnly\">Delete note</span>\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t) : (\n\t\t\t\t<Button startIcon={<AddIcon />} onClick={addNotesToContainer}>\n\t\t\t\t\tAdd notes\n\t\t\t\t</Button>\n\t\t\t)}\n\t\t</Box>\n\t)\n}\n\nexport default ActionNotes\n","/**\n * Returns the last items in an array\n *\n * @param {any[]} arr\n * @returns {any}\n */\nconst lastInArray = (arr: any[]): any => arr[arr.length - 1]\nexport default lastInArray\n","/**\n * Swaps a items in an array\n *\n * @param {T[]} arr\n * @param {number} source\n * @param {number} destination\n * @param {T} replace\n * @returns {T[]}\n */\nconst arraySwap = <T>(\n\tarr: T[],\n\tsource: number,\n\tdestination: number,\n\treplace: T\n): T[] => {\n\tconst copy = [...arr]\n\tcopy.splice(source, 1)\n\tcopy.splice(destination, 0, replace)\n\n\treturn copy\n}\n\nexport default arraySwap\n","import React, {\n\tReactElement,\n\tMouseEvent,\n\tuseContext,\n\tuseState,\n\tFragment,\n\tuseEffect,\n} from \"react\"\nimport { Box } from \"@material-ui/core\"\nimport { DragDropContext, Droppable, DropResult } from \"react-beautiful-dnd\"\nimport { isEqual } from \"lodash-es\"\nimport ExpandableNav from \"../../ExpandableNav\"\nimport { IActionContainerProps } from \"./_config/shape\"\nimport { useActionContainerStyles } from \"./_config/styles\"\nimport { Actions, ActionItem, ActionNotes } from \"./_partials\"\nimport { actionItemKeyTitleMapping, allowNotes } from \"./_config/utilities\"\nimport { ActionChecklistContext } from \"../../../state/action-checklist\"\nimport { ActionChecklistActionTypes } from \"../../../state/action-checklist/shape\"\nimport lastInArray from \"../../../util/array/lastInArray\"\nimport { generateKey, constructKey } from \"../../../util/lists/key\"\nimport {\n\tActionChecklistId,\n\tActionChecklistStruct,\n} from \"../../../data/_config/shape\"\nimport findObjectIndexByValue from \"../../../util/array/findObjectIndexByValue\"\nimport ActionChecklistUseCase from \"../../../data/ActionChecklist/ChecklistLogic\"\nimport ActionPriorityUseCase from \"../../../data/ActionChecklist/PriorityLogic\"\nimport arraySwap from \"../../../util/array/arraySwap\"\nimport { newChecklistItem } from \"../../../data/ActionChecklist/_config/utilities\"\n\n/**\n * A single Action items wrapper\n *\n * @param {PossibleActionItems} {identfier}\n * @param {ISingleActionItem} {data}\n * @returns ReactElement\n */\nconst ActionContainer = ({\n\tidentfier,\n\tdata,\n\tpriority,\n\tnotes,\n\tcurrentClient,\n}: IActionContainerProps): ReactElement => {\n\t// #region Component functionality\n\tconst styles = useActionContainerStyles()\n\tconst { dispatch, hideCompleted } = useContext(ActionChecklistContext)\n\tconst [key] = useState(generateKey())\n\tconst [saving, setSaving] = useState<boolean>(false)\n\tconst [shouldSave, setShouldSave] = useState<boolean>(true)\n\tconst [lastSaved, setLastSaved] = useState<Date>(new Date())\n\n\tuseEffect(() => {\n\t\t// Run every 1.5s\n\t\tconst id = setInterval(async () => {\n\t\t\tif (!shouldSave) return\n\t\t\t// Get the database data for this container\n\t\t\tconst DB = await ActionChecklistUseCase.findByClientAndContainer(\n\t\t\t\tidentfier,\n\t\t\t\tcurrentClient\n\t\t\t)\n\t\t\tconst PRIOR = await ActionPriorityUseCase.findByClientAndContainer(\n\t\t\t\tidentfier,\n\t\t\t\tcurrentClient\n\t\t\t)\n\n\t\t\t// If it is out of sync with the state\n\t\t\tif (!isEqual(DB, data) || !isEqual(PRIOR[0], priority)) {\n\t\t\t\t// Bulk update the database to insync with the state\n\t\t\t\tsetSaving(true)\n\t\t\t\tawait ActionChecklistUseCase.bulkUpdate(data)\n\t\t\t\tif (priority?.id) {\n\t\t\t\t\tawait ActionPriorityUseCase.update(priority.id, priority)\n\t\t\t\t}\n\t\t\t\tsetLastSaved(new Date())\n\t\t\t\tsetSaving(false)\n\t\t\t}\n\t\t}, 2000)\n\n\t\treturn (): void => clearInterval(id)\n\t}, [data, identfier, priority, currentClient, shouldSave])\n\n\t/**\n\t * Event that triggers once a item is dropped\n\t *\n\t * @param {DropResult} results\n\t * @returns void\n\t */\n\tconst onDragEnd = (results: DropResult): void => {\n\t\tconst { destination, source, draggableId } = results\n\n\t\tif (\n\t\t\t!destination ||\n\t\t\t(destination.droppableId === source.droppableId &&\n\t\t\t\tdestination.index === source.index)\n\t\t) {\n\t\t\treturn\n\t\t}\n\n\t\tconst order = arraySwap<string>(\n\t\t\tpriority.order,\n\t\t\tsource.index,\n\t\t\tdestination.index,\n\t\t\tdraggableId\n\t\t)\n\n\t\tdispatch({\n\t\t\ttype: ActionChecklistActionTypes.UpdatePriorityOrder,\n\t\t\tpayload: {\n\t\t\t\t...priority,\n\t\t\t\torder,\n\t\t\t},\n\t\t})\n\t}\n\n\t/**\n\t * Handles the state change when adding a new action item\n\t *\n\t * @param {MouseEvent<HTMLButtonElement>} e\n\t * @returns void\n\t */\n\tconst addNewAction = async (\n\t\te: MouseEvent<HTMLButtonElement>\n\t): Promise<void> => {\n\t\te.preventDefault()\n\t\tif (currentClient && priority.id) {\n\t\t\tconst newActionItem = newChecklistItem(currentClient, identfier)\n\t\t\t// Adds checklist item to db\n\t\t\tconst dbKey = await ActionChecklistUseCase.create(newActionItem)\n\t\t\t// Updates db item with order\n\t\t\tawait ActionPriorityUseCase.update(priority.id, {\n\t\t\t\t...priority,\n\t\t\t\torder: [...priority.order, dbKey],\n\t\t\t})\n\n\t\t\t// Dispatch the state change\n\t\t\tdispatch({\n\t\t\t\ttype: ActionChecklistActionTypes.AddNewActionItem,\n\t\t\t\tpayload: {\n\t\t\t\t\tchecklist: {\n\t\t\t\t\t\tid: dbKey,\n\t\t\t\t\t\t...newActionItem,\n\t\t\t\t\t},\n\t\t\t\t\tpriority: priority.id,\n\t\t\t\t},\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Deletes a action from the db and state\n\t *\n\t * @async\n\t * @param {ActionChecklistId} id ID of the checklist to delete\n\t * @returns Promise<void>\n\t */\n\tconst deleteAction = async (id: ActionChecklistId): Promise<void> => {\n\t\tif (priority.id) {\n\t\t\tsetShouldSave(false)\n\t\t\t// remove the checklist item from the db\n\t\t\tawait ActionChecklistUseCase.delete(id)\n\t\t\t// remove the priority item from the db if it is removing the last item\n\t\t\t// in the order\n\t\t\tif (priority.order.length === 1) {\n\t\t\t\tawait ActionPriorityUseCase.delete(priority.id)\n\t\t\t}\n\t\t\t// remove the checklist item from state and priority order\n\t\t\tdispatch({\n\t\t\t\ttype: ActionChecklistActionTypes.RemoveActionItem,\n\t\t\t\tpayload: {\n\t\t\t\t\ttargetId: id,\n\t\t\t\t\tpriorityId: priority.id,\n\t\t\t\t},\n\t\t\t})\n\n\t\t\tsetShouldSave(true)\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the latest item has content before\n\t * letting a user add more actions\n\t *\n\t * @returns boolean\n\t */\n\tconst preventAddingNew = (): boolean => {\n\t\treturn lastInArray(data).description === \"\"\n\t}\n\n\t/**\n\t * Checks if the item is the last in the list\n\t *\n\t * @returns boolean\n\t */\n\tconst lastItemInList = (): boolean => {\n\t\treturn data.length === 1\n\t}\n\n\t/**\n\t * Map method to render all the action items\n\t * in priority order\n\t *\n\t * @param {ActionChecklistId} id\n\t * @param {number} idx\n\t * @returns ReactElement\n\t */\n\tconst mapThroughPriorityOrder = (\n\t\tid: ActionChecklistId,\n\t\tidx: number\n\t): ReactElement => {\n\t\tconst index = findObjectIndexByValue(data, \"id\", id)\n\n\t\tif (index === -1) return <Fragment key={constructKey(key, idx)} />\n\n\t\tconst checklistItem: ActionChecklistStruct = data[index]\n\t\tif (checklistItem?.id) {\n\t\t\treturn (\n\t\t\t\t<ActionItem\n\t\t\t\t\tkey={checklistItem?.id}\n\t\t\t\t\tdraggableId={checklistItem?.id}\n\t\t\t\t\tindex={idx}\n\t\t\t\t\tdata={checklistItem}\n\t\t\t\t\tdispatch={dispatch}\n\t\t\t\t\tdeleteAction={deleteAction}\n\t\t\t\t\tlastItemInList={lastItemInList()}\n\t\t\t\t\tglobalHide={hideCompleted}\n\t\t\t\t/>\n\t\t\t)\n\t\t}\n\t\treturn <Fragment key={constructKey(key, idx)} />\n\t}\n\n\t// #endregion\n\n\t// #region Component Markup\n\treturn (\n\t\t<ExpandableNav title={actionItemKeyTitleMapping(identfier)}>\n\t\t\t<DragDropContext onDragEnd={onDragEnd}>\n\t\t\t\t<Box className={styles.dropdownBody}>\n\t\t\t\t\t<Droppable droppableId={identfier}>\n\t\t\t\t\t\t{(provided): ReactElement => (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t\t\t\t\t\t{...provided.droppableProps}\n\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{priority.order.map(mapThroughPriorityOrder)}\n\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Droppable>\n\t\t\t\t\t{allowNotes(identfier) && (\n\t\t\t\t\t\t<ActionNotes\n\t\t\t\t\t\t\tcurrentClient={currentClient}\n\t\t\t\t\t\t\tcontainer={identfier}\n\t\t\t\t\t\t\tnote={notes}\n\t\t\t\t\t\t\tdispatch={dispatch}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t<Actions\n\t\t\t\t\t\taddNewAction={addNewAction}\n\t\t\t\t\t\tdisabled={preventAddingNew()}\n\t\t\t\t\t\tsaving={saving}\n\t\t\t\t\t\tlastSaved={lastSaved}\n\t\t\t\t\t/>\n\t\t\t\t</Box>\n\t\t\t</DragDropContext>\n\t\t</ExpandableNav>\n\t)\n\t// #endregion\n}\n\nexport default React.memo(ActionContainer)\n","import { PossibleActionItems } from \"../../../state/action-checklist/shape\"\n\n// eslint-disable-next-line import/prefer-default-export\nexport const ActionItemMapping: Record<\n\tPossibleActionItems,\n\tPossibleActionItems\n> = {\n\tcashInActions: \"cashInActions\",\n\tcashOutActions: \"cashOutActions\",\n\tplanningBusiness: \"planningBusiness\",\n\trecordKeeping: \"recordKeeping\",\n\tfunding: \"funding\",\n\tmanaging: \"managing\",\n\tplanningCommitments: \"planningCommitments\",\n\ttracking: \"tracking\",\n\ttransition: \"transition\",\n}\n","import { Machine } from \"xstate\"\n\nexport type StateMap = \"loading\" | \"content\"\n\nexport interface IActionChecklistSchema {\n\tstates: {\n\t\tloading: {}\n\t\tcontent: {}\n\t}\n}\n\nexport type ACEvents = { type: \"HAS_CONTENT\" }\n\nexport const ActionChecklistMachine = Machine<\n\tnull,\n\tIActionChecklistSchema,\n\tACEvents\n>({\n\tkey: \"ac_machine\",\n\tinitial: \"loading\",\n\tstates: {\n\t\tloading: {\n\t\t\ton: {\n\t\t\t\tHAS_CONTENT: \"content\",\n\t\t\t},\n\t\t},\n\t\tcontent: {},\n\t},\n})\n","import React, {\n\tReactElement,\n\tuseContext,\n\tuseState,\n\tFragment,\n\tuseEffect,\n} from \"react\"\nimport {\n\tGrid,\n\tList,\n\tListItem,\n\tListItemText,\n\tListItemIcon,\n\tBox,\n\tTypography,\n\tDivider,\n} from \"@material-ui/core\"\nimport PictureAsPdfIcon from \"@material-ui/icons/PictureAsPdf\"\nimport { useMachine } from \"@xstate/react\"\nimport { PageContainer } from \"../components/Layouts\"\nimport SectionTitle from \"../components/SectionTitle\"\nimport FourQuestions from \"../components/HealthCheck/FourQuestions\"\nimport ExpandableNav from \"../components/ExpandableNav\"\nimport { ActionHeader, ActionContainer } from \"../components/ActionChecklist\"\nimport PageTip from \"../components/PageTip\"\nimport { ActionChecklistContext } from \"../state/action-checklist\"\nimport { generateKey, constructKey } from \"../util/lists/key\"\nimport { PossibleActionItems } from \"../state/action-checklist/shape\"\nimport { ActionItemMapping } from \"../components/ActionChecklist/_config/data\"\nimport { ClientContext } from \"../state/client\"\nimport filterByActionContainer from \"../util/filters/ByActionContainer\"\nimport { ActionChecklistMachine } from \"../data/ActionChecklist/_config/machine\"\nimport Loading from \"../components/Loading\"\nimport Spacer from \"../components/Spacer\"\nimport ActionChecklistPDF from \"../components/PDF/ActionChecklistPDF\"\nimport servePDF from \"../components/PDF/servePDF\"\nimport ActionChecklistUseCase from \"../data/ActionChecklist/ChecklistLogic\"\nimport ActionNotesUseCase from \"../data/ActionChecklist/NotesLogic\"\n\n/**\n * Action Checklist page component\n *\n * @returns ReactElement\n */\nconst ActionChecklist = (): ReactElement => {\n\tconst [state, send] = useMachine(ActionChecklistMachine)\n\tconst { checklistCollection, priority, databaseSyced, notes } = useContext(\n\t\tActionChecklistContext\n\t)\n\tconst {\n\t\tstate: { currentClient },\n\t} = useContext(ClientContext)\n\tconst [key] = useState(generateKey())\n\n\tuseEffect(() => {\n\t\tif (currentClient?.id && databaseSyced) {\n\t\t\tsend(\"HAS_CONTENT\")\n\t\t}\n\t}, [currentClient, databaseSyced, send])\n\n\t/**\n\t * Renders all the action containers based on\n\t * current state data\n\t *\n\t * @returns ReactElement[]\n\t */\n\tconst renderActionContainers = (): ReactElement[] => {\n\t\treturn (Object.keys(ActionItemMapping) as PossibleActionItems[]).map(\n\t\t\t(item, idx) => {\n\t\t\t\tif (currentClient?.id) {\n\t\t\t\t\tconst data = checklistCollection.filter(filterByActionContainer(item))\n\t\t\t\t\tconst prior = priority.filter(filterByActionContainer(item))\n\t\t\t\t\tconst note = notes.filter(filterByActionContainer(item))\n\n\t\t\t\t\tif (data.length > 0 && prior.length > 0) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<ActionContainer\n\t\t\t\t\t\t\t\tkey={constructKey(key, idx)}\n\t\t\t\t\t\t\t\tidentfier={item}\n\t\t\t\t\t\t\t\tdata={data}\n\t\t\t\t\t\t\t\tpriority={prior[0]}\n\t\t\t\t\t\t\t\tnotes={note[0] || null}\n\t\t\t\t\t\t\t\tcurrentClient={currentClient.id}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn <Fragment key={constructKey(key, idx)} />\n\t\t\t}\n\t\t)\n\t}\n\n\tconst renderActionChecklist = (): ReactElement => {\n\t\tswitch (state.value) {\n\t\t\tcase \"content\":\n\t\t\t\treturn <>{renderActionContainers()}</>\n\t\t\tcase \"loading\":\n\t\t\tdefault:\n\t\t\t\treturn <Loading />\n\t\t}\n\t}\n\n\tconst printPDF = async (): Promise<void> => {\n\t\tif (currentClient?.id) {\n\t\t\tconst clientId = currentClient.id\n\t\t\tconst pdfChecklists = await ActionChecklistUseCase.findByClient(clientId)\n\t\t\tconst pdfNotes = await ActionNotesUseCase.findByClient(clientId)\n\n\t\t\tconst pdf = await ActionChecklistPDF(\n\t\t\t\tcurrentClient?.name ?? \"Client\",\n\t\t\t\tpdfChecklists,\n\t\t\t\tpdfNotes\n\t\t\t)\n\t\t\tservePDF(pdf)\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<PageContainer role=\"main\">\n\t\t\t\t<Grid container spacing={3}>\n\t\t\t\t\t<Grid item xs={12} md={9}>\n\t\t\t\t\t\t<SectionTitle component=\"h1\">Action Checklist</SectionTitle>\n\t\t\t\t\t\t<Box className=\"content-area\">\n\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\tYour checklist has all the actions you selected in previous\n\t\t\t\t\t\t\t\tparts of the Cash Flow Coaching Kit.\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\tUse the checklist to track, prioritise and review your actions.\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Spacer />\n\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t<Spacer />\n\t\t\t\t\t\t<ActionHeader />\n\t\t\t\t\t\t<Box>{renderActionChecklist()}</Box>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} md={3}>\n\t\t\t\t\t\t<FourQuestions />\n\t\t\t\t\t\t<ExpandableNav>\n\t\t\t\t\t\t\t<List component=\"nav\" disablePadding>\n\t\t\t\t\t\t\t\t<ListItem button>\n\t\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t\t<PictureAsPdfIcon />\n\t\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t\t<ListItemText onClick={printPDF}>Generate PDF</ListItemText>\n\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t</ExpandableNav>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</PageContainer>\n\n\t\t\t<PageTip tip=\"ActionChecklistTip\" />\n\t\t</>\n\t)\n}\n\nexport default ActionChecklist\n","var map = {\n\t\"./ActionChecklistTip\": [\n\t\t822,\n\t\t4\n\t],\n\t\"./ActionChecklistTip.tsx\": [\n\t\t822,\n\t\t4\n\t],\n\t\"./CFCanvasTip\": [\n\t\t823,\n\t\t5\n\t],\n\t\"./CFCanvasTip.tsx\": [\n\t\t823,\n\t\t5\n\t],\n\t\"./ChangeLevers\": [\n\t\t824,\n\t\t6\n\t],\n\t\"./ChangeLevers.tsx\": [\n\t\t824,\n\t\t6\n\t],\n\t\"./ClientListTips\": [\n\t\t825,\n\t\t7\n\t],\n\t\"./ClientListTips.tsx\": [\n\t\t825,\n\t\t7\n\t],\n\t\"./CoachingKitTips\": [\n\t\t826,\n\t\t8\n\t],\n\t\"./CoachingKitTips.tsx\": [\n\t\t826,\n\t\t8\n\t],\n\t\"./DiscoverTopicsTips\": [\n\t\t827,\n\t\t9\n\t],\n\t\"./DiscoverTopicsTips.tsx\": [\n\t\t827,\n\t\t9\n\t],\n\t\"./HCQuestionnaire\": [\n\t\t828,\n\t\t10\n\t],\n\t\"./HCQuestionnaire.tsx\": [\n\t\t828,\n\t\t10\n\t],\n\t\"./style\": [\n\t\t818,\n\t\t11\n\t],\n\t\"./style.ts\": [\n\t\t818,\n\t\t11\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 829;\nmodule.exports = webpackAsyncContext;","import { makeStyles } from \"@material-ui/core/styles\"\n\nconst usePageTipStyles = makeStyles((theme) => ({\n\troot: {\n\t\tposition: \"fixed\",\n\t\tleft: theme.spacing(2),\n\t\tbottom: theme.spacing(2),\n\t},\n\ticon: {\n\t\tmarginRight: theme.spacing(1),\n\t},\n\tdrawer: {\n\t\tpadding: theme.spacing(2),\n\t\tmaxWidth: \"350px\",\n\t\twidth: \"100%\",\n\t},\n\tcloseBox: {\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"space-between\",\n\t\tmarginBottom: theme.spacing(2),\n\t\tpaddingBottom: theme.spacing(2),\n\t\tborderBottom: 1,\n\t\tborderBottomColor: theme.palette.grey[500],\n\t\tborderBottomStyle: \"solid\",\n\t},\n}))\n\nexport default usePageTipStyles\n","import React from \"react\"\nimport loadable from \"@loadable/component\"\nimport Loading from \"../../Loading\"\n\n/**\n * Loadable component to dynamically render the tip content\n *\n */\nconst AsyncTip = loadable(\n\t(props: { tip: string }) => import(`../../../content/tips/${props.tip}`),\n\t{\n\t\tfallback: <Loading />,\n\t}\n)\n\nexport default AsyncTip\n","import React, { ReactElement, useState, MouseEvent } from \"react\"\nimport { Fab, Drawer, Button, Box, Typography } from \"@material-ui/core\"\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\"\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\"\nimport usePageTipStyles from \"./_config/style\"\nimport { IPageTip } from \"./_config/shape\"\nimport { AsyncTip } from \"./_partials\"\n\n/**\n * Renders a page tip tooltip at the bottom left of the page\n *\n * @param {string} {tip} File name (no extension) for the tip component\n * @returns ReactElement\n */\nconst PageTip = ({ tip }: IPageTip): ReactElement => {\n\tconst style = usePageTipStyles()\n\tconst [drawerOpen, setDrawerOpen] = useState<boolean>(false)\n\n\t/**\n\t * Toggles the state of the drawer\n\t *\n\t * @param {Boolean} open State to change the drawer to\n\t * @param {KeyboardEvent|MouseEvent<HTMLButtonElement>} event Event generated by a keypress|click\n\t */\n\tconst toggleDrawer = (open: boolean) => (\n\t\tevent: KeyboardEvent | MouseEvent<HTMLButtonElement>\n\t): void => {\n\t\tif (event instanceof KeyboardEvent) {\n\t\t\tif (\n\t\t\t\tevent.type === \"keydown\" &&\n\t\t\t\t(event.key === \"Tab\" || event.key === \"Shift\")\n\t\t\t) {\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\n\t\t// Change the state of the drawer\n\t\tsetDrawerOpen(open)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div className={style.root} role=\"complementary\">\n\t\t\t\t<Fab color=\"secondary\" onClick={toggleDrawer(true)} variant=\"extended\">\n\t\t\t\t\t<HelpOutlineIcon className={style.icon} />\n\t\t\t\t\tTips\n\t\t\t\t</Fab>\n\t\t\t</div>\n\t\t\t<Drawer\n\t\t\t\tanchor=\"left\"\n\t\t\t\topen={drawerOpen}\n\t\t\t\tonClose={toggleDrawer(false)}\n\t\t\t\tclasses={{\n\t\t\t\t\tpaper: style.drawer,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Box className={style.closeBox}>\n\t\t\t\t\t<Typography variant=\"h6\">Tips</Typography>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={toggleDrawer(false)}\n\t\t\t\t\t\tstartIcon={<HighlightOffIcon />}\n\t\t\t\t\t>\n\t\t\t\t\t\tClose\n\t\t\t\t\t</Button>\n\t\t\t\t</Box>\n\n\t\t\t\t<AsyncTip tip={tip} />\n\t\t\t</Drawer>\n\t\t</>\n\t)\n}\n\nexport default PageTip\n","/* eslint-disable import/prefer-default-export */\nimport { PossibleActionItems } from \"../../../../state/action-checklist/shape\"\n\n// Action title mapping object\nexport const actionTitleMapping: Record<PossibleActionItems, string> = {\n\tcashInActions: \"Cash IN actions\",\n\tcashOutActions: \"Cash OUT actions\",\n\tplanningBusiness: \"Planning your business actions\",\n\trecordKeeping: \"Record keeping actions\",\n\tfunding: \"Funding your business actions\",\n\tmanaging: \"Managing your cash flow actions\",\n\tplanningCommitments: \"Planning your regular financial commitments actions\",\n\ttracking: \"Tracking your performance actions\",\n\ttransition: \"Selling, closing and succession planning\",\n}\n","import { makeStyles } from \"@material-ui/core\"\n\n// Section title styles\nconst useSTStyles = makeStyles((theme) => ({\n\ttitle: {\n\t\tfontWeight: 500,\n\t\tmarginBottom: theme.spacing(2),\n\t\t[theme.breakpoints.down(\"sm\")]: {\n\t\t\tfontSize: theme.typography.h5.fontSize,\n\t\t},\n\t},\n}))\n\nexport default useSTStyles\n","import React, { ReactElement } from \"react\"\nimport { Typography } from \"@material-ui/core\"\nimport { SectionTitleProps } from \"./_config/shape\"\nimport useSTStyles from \"./_config/styles\"\n\n/**\n * Abstraction for the Typography for a consistent heading for sections\n *\n * @param {SectionTitleProps} props Mimics the props for `<Typography>`\n * @returns ReactElement\n */\nconst SectionTitle = ({\n\tchildren,\n\tclassName,\n\t...props\n}: SectionTitleProps): ReactElement => {\n\tconst styles = useSTStyles()\n\treturn (\n\t\t<Typography\n\t\t\tvariant=\"h4\"\n\t\t\tcolor=\"textPrimary\"\n\t\t\tclassName={`${styles.title} ${className}`}\n\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t{...props}\n\t\t>\n\t\t\t{children}\n\t\t</Typography>\n\t)\n}\n\nexport default SectionTitle\n","/**\n * Add Padding\n *\n * add white space around some content\n */\n\nimport { format } from \"date-fns\"\n\nexport const addPadding = (content: any, margin = 10) => {\n\treturn {\n\t\tmargin,\n\t\tcolumns: [content],\n\t}\n}\n\n/**\n * Page and margin defaults\n */\n\nexport const pageDefaultSettings = () => {\n\treturn {\n\t\t// watermark: {\n\t\t// \ttext: \"draft\",\n\t\t// \tcolor: \"blue\",\n\t\t// \topacity: 0.3,\n\t\t// \tbold: true,\n\t\t// \titalics: false,\n\t\t// },\n\n\t\tpageSize: \"A4\",\n\t\tpageMargins: [0, 0, 0, 25],\n\t\tfooter: {\n\t\t\tcolumns: [\n\t\t\t\t{\n\t\t\t\t\ttext: `Created on the ${format(new Date(), \"do 'of' MMMM yyyy\")}`,\n\t\t\t\t\talignment: \"center\",\n\t\t\t\t\tfontSize: 12,\n\t\t\t\t\tcolor: \"#333\",\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t}\n}\n\n/**\n * Frame Content\n *\n * Put content in a table with a border\n */\n\nexport const frameContent = (inner: any, style: string[] = []) => {\n\treturn {\n\t\ttable: {\n\t\t\twidths: [\"*\"], // to make it full length\n\t\t\tbody: [[inner]],\n\t\t},\n\t\tstyle,\n\t}\n}\n\n/**\n * Table with Text in it for top of page\n * Requires a pageHeader style\n */\n\nexport const pageHeading = (text: string) => {\n\tconst content = frameContent(addPadding(text), [\"pageHeader\"])\n\n\treturn {\n\t\t...content,\n\t\tlayout: \"noBorders\",\n\t}\n}\n\n/**\n * Add 20 points of padding on a full page\n */\n\nexport const pagePadding = (content: any) => addPadding(content, 20)\n\n/**\n * Basic table of key .... value\n */\n\nexport const basicTable = (items: any, style: string[] = []) => {\n\treturn {\n\t\ttable: {\n\t\t\twidths: [\"75%\", \"*\"],\n\t\t\tbody: items,\n\t\t},\n\t\tstyle,\n\t\tlayout: \"noBorders\",\n\t}\n}\n","/* eslint-disable import/prefer-default-export */\nimport { PossibleActionItems } from \"../../../../state/action-checklist/shape\"\nimport { actionTitleMapping } from \"./data\"\n\n/**\n * Gets the title for the current Action container\n *\n * @param {PossibleActionItems} key\n * @returns string\n */\nexport const actionItemKeyTitleMapping = (key: PossibleActionItems): string => {\n\treturn actionTitleMapping[key]\n}\n\n/**\n * Get a list of identifiers that are \"static\",\n * ie they should always be showen\n *\n * @returns PossibleActionItems[]\n */\nexport const staticIdentifier = (): PossibleActionItems[] => [\n\t\"cashInActions\",\n\t\"cashOutActions\",\n]\n\n/**\n * Checks if the container is not cashInActions OR cashOutActions\n *\n * @param {PossibleActionItems} identifier\n * @returns boolean\n */\nexport const allowNotes = (identifier: PossibleActionItems): boolean => {\n\treturn staticIdentifier().indexOf(identifier) === -1\n}\n","import pdfMake from \"pdfmake/build/pdfmake\"\nimport { detect } from \"detect-browser\"\n\nexport default function (pdf: pdfMake.TCreatedPdf): void {\n\tconst browser = detect()\n\tif (browser?.name === \"ie\" || browser?.name === \"edge\") {\n\t\tpdf.download()\n\t\treturn\n\t}\n\n\tpdf.open()\n}\n","import React, { ReactElement } from \"react\"\nimport { List, ListItem, ListItemText, Box } from \"@material-ui/core\"\nimport { fourQuestionsContent, answerTheming } from \"../_config/data\"\nimport useFourQsStyles from \"./_config/styles\"\nimport { IFourQuestionsProps } from \"./_config/shape\"\nimport { answerText } from \"./_config/utilities\"\nimport ExpandableNav from \"../../ExpandableNav\"\nimport { getOptionByAnswer } from \"../_config/utilities\"\nimport { QuestionOptions } from \"../_config/shape\"\n\n/**\n * Component to render the Four key questions with optional\n * answers, used on the questionnaire summary page\n *\n * @param {QuestionOptions[]} { answers? }\n * @returns ReactElement\n */\nconst FourQuestions = ({ answers }: IFourQuestionsProps): ReactElement => {\n\tconst styles = useFourQsStyles()\n\n\t/**\n\t * Renders the answer related icon next to the question\n\t *\n\t * @param {QuestionOptions} answer\n\t * @returns {ReactElement}\n\t */\n\tconst getIcon = (answer: QuestionOptions): ReactElement => {\n\t\tconst opt = getOptionByAnswer(answer, answerTheming)\n\t\tif (opt) {\n\t\t\treturn <opt.Icon style={{ color: opt.color }} />\n\t\t}\n\n\t\treturn <></>\n\t}\n\n\treturn (\n\t\t<ExpandableNav\n\t\t\ttitle=\"Four Key Questions\"\n\t\t\treactourLabel=\"four-questions-nav\"\n\t\t>\n\t\t\t<Box className={styles.box}>\n\t\t\t\t<List className={styles.list}>\n\t\t\t\t\t{fourQuestionsContent.map(\n\t\t\t\t\t\t(content: string, idx: number): ReactElement => (\n\t\t\t\t\t\t\t<Box key={content} component=\"li\">\n\t\t\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t\t\tcomponent=\"div\"\n\t\t\t\t\t\t\t\t\tclassName={`${styles.listItem} ${\n\t\t\t\t\t\t\t\t\t\tidx === 0 ? styles.listItemFirst : \"\"\n\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<ListItemText className={styles.listItemText}>\n\t\t\t\t\t\t\t\t\t\t{`${idx + 1}. ${content}`}\n\t\t\t\t\t\t\t\t\t\t<Box className={styles.answerIconRoot}>\n\t\t\t\t\t\t\t\t\t\t\t{answers?.[idx] && getIcon(answers[idx])}\n\t\t\t\t\t\t\t\t\t\t\t{answerText(idx, answers)}\n\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t</ListItemText>\n\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t)\n\t\t\t\t\t)}\n\t\t\t\t</List>\n\t\t\t</Box>\n\t\t</ExpandableNav>\n\t)\n}\n\nexport default FourQuestions\n","/* eslint-disable import/prefer-default-export */\n\nimport React, { ReactElement } from \"react\"\nimport { Typography } from \"@material-ui/core\"\nimport { QuestionOptions } from \"../../_config/shape\"\nimport { getOptionByAnswer } from \"../../_config/utilities\"\nimport { answerTheming, questions } from \"../../_config/data\"\n\n/**\n * Checks if a question has a answer and displays the answer\n * with a theme\n *\n * @param {number} idx Question index\n * @param {QuestionOptions[]|undefined} answers Answers given in the quiz\n * @returns (boolean | ReactElement)\n */\nexport const answerText = (\n\tidx: number,\n\tanswers: QuestionOptions[] | undefined\n): ReactElement | boolean => {\n\tif (answers && typeof answers[idx] !== \"undefined\") {\n\t\tconst { color } = getOptionByAnswer(answers[idx], answerTheming)\n\t\treturn (\n\t\t\t<Typography style={{ color, fontWeight: 500 }}>\n\t\t\t\t{questions[idx].options[answers[idx]]}\n\t\t\t</Typography>\n\t\t)\n\t}\n\n\treturn false\n}\n","/* eslint-disable */\nimport pdfMake, { TCreatedPdf } from \"pdfmake/build/pdfmake\"\nimport pdfFonts from \"pdfmake/build/vfs_fonts\"\nimport { format } from \"date-fns\"\nimport { lightBlue } from \"@material-ui/core/colors\"\nimport {\n\tpageHeading,\n\tpagePadding,\n\tpageDefaultSettings,\n\tbasicTable,\n} from \"./PDFLib\"\nimport {\n\tActionChecklistStruct,\n\tActionChecklistNotesStruct,\n} from \"../../data/_config/shape\"\nimport { actionTitleMapping } from \"../ActionChecklist/ActionContainer/_config/data\"\nimport { PossibleActionItems } from \"../../state/action-checklist/shape\"\n\npdfMake.vfs = pdfFonts.pdfMake.vfs\n\nconst itemsSection = (items: ActionChecklistStruct[]) => {\n\tif (items.length === 0) {\n\t\treturn {\n\t\t\ttext: \"No action items\",\n\t\t\tstyle: \"noResult\",\n\t\t}\n\t}\n\n\treturn basicTable(\n\t\titems.map(({ description, reviewBy }) => [\n\t\t\t{\n\t\t\t\ttext: description || \"No description provided\",\n\t\t\t\tstyle: description === \"\" ? \"noResult\" : \"\",\n\t\t\t},\n\t\t\tformat(reviewBy, \"dd/MM/yyyy\"),\n\t\t])\n\t)\n}\n\nexport default async (\n\ttitle: string,\n\tchecklistCollection: ActionChecklistStruct[],\n\tnotes: ActionChecklistNotesStruct[]\n): Promise<TCreatedPdf> => {\n\tconst docDefinition: any = {\n\t\t...pageDefaultSettings(),\n\n\t\tcontent: [\n\t\t\tpageHeading(`${title} - Action Checklist`),\n\t\t\tpagePadding([\n\t\t\t\t...(Object.keys(actionTitleMapping) as PossibleActionItems[]).map(\n\t\t\t\t\t(value, idx) => {\n\t\t\t\t\t\tconst arr = []\n\t\t\t\t\t\tconst items = checklistCollection.filter(\n\t\t\t\t\t\t\t(i) => i.actionContainer === value\n\t\t\t\t\t\t)\n\t\t\t\t\t\tconst note = notes.filter((i) => i.actionContainer === value)\n\t\t\t\t\t\tif (items.length === 0) return \"\"\n\n\t\t\t\t\t\tif (idx !== 0) arr.push(\" \")\n\t\t\t\t\t\tarr.push({ text: actionTitleMapping[value], style: \"heading\" })\n\t\t\t\t\t\tarr.push(itemsSection(items))\n\t\t\t\t\t\tif (note.length > 0 && note[0].notes !== \"\") {\n\t\t\t\t\t\t\tarr.push(\" \")\n\t\t\t\t\t\t\tarr.push({ text: \"Notes\", style: \"subHeading\" })\n\t\t\t\t\t\t\tarr.push(note[0].notes)\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn arr\n\t\t\t\t\t}\n\t\t\t\t),\n\t\t\t]),\n\t\t],\n\n\t\tstyles: {\n\t\t\tpageHeader: {\n\t\t\t\tfontSize: 20,\n\t\t\t\tbold: true,\n\t\t\t\tfillColor: lightBlue[\"800\"],\n\t\t\t\tcolor: \"white\",\n\t\t\t\talignment: \"center\",\n\t\t\t},\n\t\t\theading: {\n\t\t\t\tfontSize: 16,\n\t\t\t\tbold: true,\n\t\t\t},\n\t\t\tsubHeading: {\n\t\t\t\tfontSize: 14,\n\t\t\t\tbold: true,\n\t\t\t},\n\t\t\trightAlign: {\n\t\t\t\talignment: \"right\",\n\t\t\t},\n\t\t\tnoResult: {\n\t\t\t\titalics: true,\n\t\t\t\tcolor: \"#333\",\n\t\t\t},\n\t\t},\n\n\t\tdefaultStyle: {\n\t\t\tfontSize: 15,\n\t\t\tbold: false,\n\t\t},\n\t}\n\treturn pdfMake.createPdf(docDefinition)\n}\n"],"sourceRoot":""}