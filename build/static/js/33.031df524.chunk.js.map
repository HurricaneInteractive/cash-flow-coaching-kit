{"version":3,"sources":["components/SectionTitle/_config/styles.ts","components/SectionTitle/SectionTitle.tsx","components/IconDeleteButton/IconDeleteButtonwDialog.tsx","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","components/Forms/CFC/__config/styles.ts","components/CFC/NoCanvases.tsx","../node_modules/@material-ui/core/esm/ListItemSecondaryAction/ListItemSecondaryAction.js","components/CFC/CanvasList.tsx","pages/CashFlowCanvas/listing.tsx"],"names":["useSTStyles","makeStyles","theme","title","fontWeight","marginBottom","spacing","breakpoints","down","fontSize","typography","h5","SectionTitle","children","className","props","styles","Typography","variant","color","IconDeleteButtonwDialog","onClick","useState","dialogOpen","setDialogOpen","onDialogClose","e","preventDefault","open","onClose","onCancel","onConfirm","CardContent","React","ref","classes","_props$component","component","Component","other","_objectWithoutProperties","_extends","clsx","root","withStyles","padding","paddingBottom","name","useStyles","box","display","justifyContent","alignItems","flexDirection","saveButton","up","marginLeft","NoCanvases","to","PrivateRoutes","ClientList","routeVarReplacement","CFC","ListItemSecondaryAction","muiName","position","right","top","transform","CanvasList","data","remove","onDelete","id","List","map","item","ListItem","key","button","Link","CFCEdit","toString","ListItemText","primary","canvasDisplayTitle","secondary","createdAt","format","CardActions","Button","startIcon","CFCListing","useMachine","fetchMachine","stateMachine","changeState","useCurrentClient","currentClient","canvasData","setCanvasData","fetchData","useCallback","a","CFCUseCase","findByClient","length","removeCanvas","newData","filter","filterById","delete","useEffect","Grid","container","xs","md","Card","value","Loading","renderBasedOnState"],"mappings":"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","file":"static/js/33.031df524.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core\"\n\n// Section title styles\nconst useSTStyles = makeStyles((theme) => ({\n\ttitle: {\n\t\tfontWeight: 500,\n\t\tmarginBottom: theme.spacing(2),\n\t\t[theme.breakpoints.down(\"sm\")]: {\n\t\t\tfontSize: theme.typography.h5.fontSize,\n\t\t},\n\t},\n}))\n\nexport default useSTStyles\n","import React, { ReactElement } from \"react\"\nimport { Typography } from \"@material-ui/core\"\nimport { SectionTitleProps } from \"./_config/shape\"\nimport useSTStyles from \"./_config/styles\"\n\n/**\n * Abstraction for the Typography for a consistent heading for sections\n *\n * @param {SectionTitleProps} props Mimics the props for `<Typography>`\n * @returns ReactElement\n */\nconst SectionTitle = ({\n\tchildren,\n\tclassName,\n\t...props\n}: SectionTitleProps): ReactElement => {\n\tconst styles = useSTStyles()\n\treturn (\n\t\t<Typography\n\t\t\tvariant=\"h4\"\n\t\t\tcolor=\"textPrimary\"\n\t\t\tclassName={`${styles.title} ${className}`}\n\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t{...props}\n\t\t>\n\t\t\t{children}\n\t\t</Typography>\n\t)\n}\n\nexport default SectionTitle\n","import React, { ReactElement, MouseEvent, useState } from \"react\"\nimport { ButtonProps } from \"./IconDeleteButton\"\nimport IconDeleteButton from \".\"\nimport ConfirmDialogue from \"../ConfirmDialogue\"\n\n/**\n * Icon delete button with a confirm dialog component\n *\n * @export\n * @param {ButtonProps} {\n * \tonClick,\n * }\n * @returns {ReactElement}\n */\nexport default function IconDeleteButtonwDialog({\n\tonClick,\n}: ButtonProps): ReactElement {\n\tconst [dialogOpen, setDialogOpen] = useState<boolean>(false)\n\n\t/**\n\t * Closes the dialog\n\t *\n\t */\n\tfunction onDialogClose(): void {\n\t\tsetDialogOpen(false)\n\t}\n\n\t/**\n\t * Performs onClick prop function\n\t *\n\t * @param {MouseEvent<HTMLButtonElement>} e\n\t */\n\tfunction onDialogConfirm(e: MouseEvent<HTMLButtonElement>): void {\n\t\tonClick(e)\n\t\tonDialogClose()\n\t}\n\n\t/**\n\t * Opens the dialog\n\t *\n\t * @param {MouseEvent<HTMLButtonElement>} e\n\t */\n\tfunction triggerDialog(e: MouseEvent<HTMLButtonElement>): void {\n\t\te.preventDefault()\n\t\tsetDialogOpen(true)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<IconDeleteButton onClick={triggerDialog} />\n\t\t\t<ConfirmDialogue\n\t\t\t\topen={dialogOpen}\n\t\t\t\tonClose={onDialogClose}\n\t\t\t\tonCancel={onDialogClose}\n\t\t\t\tonConfirm={onDialogConfirm}\n\t\t\t>\n\t\t\t\tAre you sure you want to remove this item?\n\t\t\t</ConfirmDialogue>\n\t\t</>\n\t)\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import { makeStyles } from \"@material-ui/core\"\n\nconst useStyles = makeStyles((theme) => ({\n\tbox: {\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"flex-end\",\n\t\talignItems: \"center\",\n\t\t[theme.breakpoints.down(\"sm\")]: {\n\t\t\tflexDirection: \"column\",\n\t\t\talignItems: \"flex-start\",\n\t\t},\n\t},\n\tsaveButton: {\n\t\t[theme.breakpoints.up(\"md\")]: {\n\t\t\tmarginLeft: theme.spacing(1),\n\t\t},\n\t},\n}))\n\nexport default useStyles\n","import React, { ReactElement } from \"react\"\nimport { Typography } from \"@material-ui/core\"\nimport { Link } from \"react-router-dom\"\nimport { PrivateRoutes, routeVarReplacement } from \"../../util/routes/routes\"\n\n/**\n * No canvas data message\n *\n * @export\n * @returns {ReactElement}\n */\nexport default function NoCanvases(): ReactElement {\n\treturn (\n\t\t<>\n\t\t\t<Typography variant=\"h6\">No canvas data found</Typography>\n\t\t\t<Typography>\n\t\t\t\tCheck that you have the correct{\" \"}\n\t\t\t\t<Link to={PrivateRoutes.ClientList}>client selected</Link> or{\" \"}\n\t\t\t\t<Link to={routeVarReplacement(PrivateRoutes.CFC, [[\":id?\", \"\"]])}>\n\t\t\t\t\tstart a new canvas\n\t\t\t\t</Link>\n\t\t\t\t.\n\t\t\t</Typography>\n\t\t</>\n\t)\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    position: 'absolute',\n    right: 16,\n    top: '50%',\n    transform: 'translateY(-50%)'\n  }\n};\n/**\n * Must be used as the last child of ListItem to function properly.\n */\n\nvar ListItemSecondaryAction = React.forwardRef(function ListItemSecondaryAction(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemSecondaryAction.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `IconButton` or selection control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nListItemSecondaryAction.muiName = 'ListItemSecondaryAction';\nexport default withStyles(styles, {\n  name: 'MuiListItemSecondaryAction'\n})(ListItemSecondaryAction);","import React, { ReactElement, MouseEvent } from \"react\"\nimport {\n\tList,\n\tListItem,\n\tListItemText,\n\tListItemSecondaryAction,\n\tCardActions,\n\tButton,\n} from \"@material-ui/core\"\nimport { format } from \"date-fns\"\nimport { Link } from \"react-router-dom\"\nimport AddIcon from \"@material-ui/icons/Add\"\nimport { CFCStruct, CFCId } from \"../../data/_config/shape\"\nimport { canvasDisplayTitle } from \"./__config/utilities\"\nimport { routeVarReplacement, PrivateRoutes } from \"../../util/routes/routes\"\nimport IconDeleteButtonwDialog from \"../IconDeleteButton/IconDeleteButtonwDialog\"\nimport useStyles from \"../Forms/CFC/__config/styles\"\n\ninterface CanvasListProps {\n\tdata: CFCStruct[]\n\tremove: (id: CFCId) => Promise<void>\n}\n\ntype ButtonClick = (e: MouseEvent<HTMLButtonElement>) => void\n\n/**\n * Displays a list of canvases with a way to add a new one\n *\n * @export\n * @param {CanvasListProps} {\n * \tdata,\n * \tremove,\n * }\n * @returns {ReactElement}\n */\nexport default function CanvasList({\n\tdata,\n\tremove,\n}: CanvasListProps): ReactElement {\n\tconst styles = useStyles()\n\n\t/**\n\t * Creates the link to the edit canvas page\n\t *\n\t * @param {CFCId} id\n\t * @returns {string}\n\t */\n\tfunction itemLink(id: CFCId): string {\n\t\treturn routeVarReplacement(PrivateRoutes.CFCEdit, [[\":id\", id.toString()]])\n\t}\n\n\t/**\n\t * Triggers the parent remove method\n\t *\n\t * @param {CFCId} id\n\t * @returns {ButtonClick}\n\t */\n\tfunction onDelete(id: CFCId): ButtonClick {\n\t\treturn (e): void => {\n\t\t\te.preventDefault()\n\t\t\tremove(id)\n\t\t}\n\t}\n\n\t/**\n\t * Renders the canvas list item\n\t *\n\t * @param {CFCStruct} item\n\t * @returns {ReactElement}\n\t */\n\tfunction renderCanvas(item: CFCStruct): ReactElement {\n\t\tif (!item?.id) return <></>\n\n\t\treturn (\n\t\t\t<ListItem key={item.id} button component={Link} to={itemLink(item.id)}>\n\t\t\t\t<ListItemText\n\t\t\t\t\tprimary={canvasDisplayTitle(item)}\n\t\t\t\t\tsecondary={\n\t\t\t\t\t\titem.createdAt\n\t\t\t\t\t\t\t? format(item.createdAt, \"dd/MM/yyyy hh:mm a\")\n\t\t\t\t\t\t\t: false\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<ListItemSecondaryAction>\n\t\t\t\t\t<IconDeleteButtonwDialog onClick={onDelete(item.id)} />\n\t\t\t\t</ListItemSecondaryAction>\n\t\t\t</ListItem>\n\t\t)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<List>{data.map(renderCanvas)}</List>\n\t\t\t<CardActions className={styles.box}>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tstartIcon={<AddIcon />}\n\t\t\t\t\tcomponent={Link}\n\t\t\t\t\tto={PrivateRoutes.CFC}\n\t\t\t\t>\n\t\t\t\t\tCreate new Canvas\n\t\t\t\t</Button>\n\t\t\t</CardActions>\n\t\t</>\n\t)\n}\n","import React, { ReactElement, useCallback, useState, useEffect } from \"react\"\nimport { Typography, Grid, Card, CardContent } from \"@material-ui/core\"\nimport { useMachine } from \"@xstate/react\"\nimport { PageContainer } from \"../../components/Layouts\"\nimport SectionTitle from \"../../components/SectionTitle\"\nimport fetchMachine from \"../../components/Forms/CFC/__config/machine\"\nimport useCurrentClient from \"../../state/client/useCurrentClient\"\nimport CFCUseCase from \"../../data/CFC/CFCLogic\"\nimport { CFCStruct, CFCId } from \"../../data/_config/shape\"\nimport CanvasList from \"../../components/CFC/CanvasList\"\nimport Loading from \"../../components/Loading\"\nimport NoCanvases from \"../../components/CFC/NoCanvases\"\nimport filterById from \"../../util/filters/ById\"\n\nconst CFCListing = (): ReactElement => {\n\tconst [stateMachine, changeState] = useMachine(fetchMachine)\n\tconst [currentClient] = useCurrentClient()\n\tconst [canvasData, setCanvasData] = useState<CFCStruct[]>([])\n\tconst fetchData = useCallback(async () => {\n\t\tif (currentClient?.id) {\n\t\t\ttry {\n\t\t\t\tconst data = await CFCUseCase.findByClient(currentClient.id)\n\t\t\t\tif (data.length === 0) {\n\t\t\t\t\tchangeState(\"REJECT\")\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tsetCanvasData(data)\n\t\t\t\tchangeState(\"RESOLVE\")\n\t\t\t} catch {\n\t\t\t\tchangeState(\"REJECT\")\n\t\t\t}\n\t\t}\n\t}, [currentClient, changeState])\n\n\tuseEffect(() => {\n\t\tfetchData()\n\t}, [fetchData])\n\n\tasync function removeCanvas(id: CFCId): Promise<void> {\n\t\tconst newData = canvasData.filter(filterById(id, true))\n\t\tsetCanvasData(newData)\n\t\tif (newData.length === 0) {\n\t\t\tchangeState(\"REJECT\")\n\t\t}\n\t\tawait CFCUseCase.delete(id)\n\t}\n\n\tfunction renderBasedOnState(): ReactElement {\n\t\tswitch (stateMachine.value) {\n\t\t\tcase \"failure\":\n\t\t\t\treturn (\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<NoCanvases />\n\t\t\t\t\t</CardContent>\n\t\t\t\t)\n\t\t\tcase \"success\":\n\t\t\t\treturn <CanvasList data={canvasData} remove={removeCanvas} />\n\t\t\tcase \"loading\":\n\t\t\tdefault:\n\t\t\t\treturn <Loading />\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<PageContainer>\n\t\t\t\t<SectionTitle>\n\t\t\t\t\tPreviously saved canvases{\" \"}\n\t\t\t\t\t<Typography variant=\"subtitle1\" component=\"p\" color=\"textSecondary\">\n\t\t\t\t\t\tLoad previous canvas by selecting the list below\n\t\t\t\t\t</Typography>\n\t\t\t\t</SectionTitle>\n\n\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t\t<Card>{renderBasedOnState()}</Card>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</PageContainer>\n\t\t</>\n\t)\n}\n\nexport default CFCListing\n"],"sourceRoot":""}