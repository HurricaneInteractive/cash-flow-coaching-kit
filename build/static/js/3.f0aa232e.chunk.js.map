{"version":3,"sources":["util/array/arrayFillWith.ts","components/Forms/CFC/initialValues.ts","components/Forms/CFC/calculateInitial.ts","components/PDF/PDFLib.ts","components/CFCCompare/__config/utilities.ts","components/PDF/servePDF.ts","state/CFC/createCashFlow.tsx","components/PDF/CashFlowCanvasPDF.ts","components/CFC/NoCanvases.tsx","components/CFCCompare/__config/styles.ts","components/CFCCompare/TimeframeOutOfSync.tsx","components/CFCCompare/CompareSelector.tsx","components/CFCCompare/TableHeader.tsx","components/CFCCompare/CanvasItemRow.tsx","components/CFCCompare/CompareTable.tsx","components/CFCCompare/NotEnoughCanvases.tsx","components/CFCCompare/CompareCanvases.tsx","components/CFCCompare/ControlCompareLink.tsx","components/CFC/CopyCanvasTrigger.tsx","components/PDF/CFCComparePDF.ts","components/CFC/ControlPanel.tsx"],"names":["arrayFillWith","len","fill","Array","initialValues","canvasTitle","canvasType","canvasTimeFrame","canvasStartDate","Date","canvasEndDate","calculatedEndDate","openingBalance","paygWithholding","superAmount","incomeTax","cashToOwner","stock","creditors","debtors","assets","loans","cashInItems","createCashFlowItem","cashOutItems","calculateInitial","values","gstOnSales","calcCashFlowGST","closingBalance","calcClosingBalance","gstOnPurchases","totalNetAssets","calcTotalNetAssets","cashSurplus","calcCashSurplus","availableToSpend","calcAvailableToSpend","incomeTaxPercentage","calcIncomeTaxPer","addPadding","content","margin","columns","pageDefaultSettings","pageSize","pageMargins","footer","text","format","alignment","fontSize","color","frameContent","inner","style","table","widths","body","pageHeading","layout","pagePadding","basicTable","items","getCanvasData","client","a","CFCUseCase","findByClient","data","reduceToOptions","acc","cur","concat","value","id","label","canvasDisplayTitle","changeSelected","allCanvases","selected","idx","newItem","filter","filterById","isAfter","calculateDifferencePer","val1","val2","diff","pipe","toTwoDecimal","removeTrailingZeros","concatStr","pdf","browser","detect","name","open","download","uuidv4","description","amount","gstApplicable","pdfMake","vfs","pdfFonts","formatDollars","toString","openingBalanceSection","cashInSection","cashInTotal","bold","map","line","cashOutSection","cashOutTotal","gstOnPurchasesSection","cashSurplusSection","incomeSection","availableToSpendSection","closingCashBalanceSection","yourNetAssetPositionSection","title","calcCashFlowTotal","cashInGST","calcTotalCashOut","cashOutGST","calculated","docDefinition","upperFirst","styles","pageHeader","fillColor","green","rightAlign","yellowBlock","defaultStyle","createPdf","NoCanvases","variant","to","PrivateRoutes","ClientList","routeVarReplacement","CFC","useStyles","makeStyles","theme","compareLabel","display","alignItems","compareTooltip","marginLeft","spacing","cell1","width","cellCanvas","cellDifference","tableRow","background","palette","grey","noBorderBottom","borderBottom","breakpoints","down","minWidth","md","marginTop","marginBottom","TimeframeOutOfSync","Alert","severity","CompareSelector","selectedCanvases","leftSelected","rightSelected","cls","selectOptions","useMemo","reduce","changeSelectedCanvas","e","target","Grid","container","item","xs","Typography","className","Tooltip","SelectField","onChange","options","align","component","React","memo","left","right","TableHead","TableRow","TableCell","CanvasItemRow","border","formatNumber","addDollarSign","CompareTable","leftCalculated","rightCalculated","renderRepeaterFields","length","key","newTimestamp","TableContainer","Table","TableBody","colSpan","NotEnoughCanvases","CompareCanvases","dispatch","useContext","CFCContext","useMachine","fetchMachine","stateMachine","changeState","useCurrentClient","currentClient","clientSynced","useState","canvases","setCanvases","setSelectedCanvases","useEffect","leftCalc","rightCalc","type","CFCActionTypes","ChangeQuestionValues","payload","one","calcQuestionOne","two","calcQuestionTwo","three","calcQuestionThree","four","calcQuestionFour","ChangeCompare","fetchCanvasData","useCallback","item1","item2","newSelected","Spacer","Divider","Loading","renderForStateMachine","ControlCompareLink","history","useHistory","count","setCount","useParams","getCount","countClientRecords","c","route","ListItem","button","onClick","CFCCompare","push","ListItemIcon","ListItemText","CopyCanvasTrigger","setOpen","ChangeCopyCanvasActive","onClose","rowValue","defaultStyles","ControlPanel","location","useLocation","canvasId","leftCompare","rightCompare","goTo","isNewPage","pathname","isCompare","printPDF","findById","undefined","alert","CashFlowCanvasPDF","servePDF","CFCComparePDF","ExpandableNav","reactourLabel","List","disablePadding","CFCListing"],"mappings":"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","file":"static/js/3.f0aa232e.chunk.js","sourcesContent":["/**\n * Creates and fills an array with some data\n *\n * @export\n * @template T\n * @param {number} len\n * @param {T} fill\n * @returns {T[]}\n */\nexport default function arrayFillWith<T>(len: number, fill: T): T[] {\n\treturn new Array(len).fill(fill)\n}\n","import { BaseCFCStruct } from \"../../../data/_config/shape\"\nimport createCashFlowItem from \"../../../state/CFC/createCashFlow\"\nimport { calculatedEndDate } from \"../../../util/dates\"\n\nconst initialValues: BaseCFCStruct = {\n\tcanvasTitle: \"\",\n\tcanvasType: \"review\",\n\tcanvasTimeFrame: \"quaterly\",\n\tcanvasStartDate: new Date(),\n\tcanvasEndDate: calculatedEndDate(new Date(), \"quaterly\"),\n\topeningBalance: 0,\n\tpaygWithholding: 0,\n\tsuperAmount: 0,\n\tincomeTax: 25,\n\tcashToOwner: 0,\n\tstock: 0,\n\tcreditors: 0,\n\tdebtors: 0,\n\tassets: 0,\n\tloans: 0,\n\tcashInItems: [createCashFlowItem()],\n\tcashOutItems: [createCashFlowItem()],\n}\n\nexport default initialValues\n","import { BaseCFCStruct } from \"../../../data/_config/shape\"\nimport { CalculatedValues } from \"../../../state/CFC/useCalculated\"\nimport {\n\tcalcTotalNetAssets,\n\tcalcAvailableToSpend,\n\tcalcCashSurplus,\n\tcalcCashFlowGST,\n\tcalcClosingBalance,\n\tcalcIncomeTaxPer,\n} from \"../../../state/CFC/accumulators\"\n\n/**\n * Calculates the values for the dynamic values\n *\n * @param {BaseCFCStruct} values\n * @returns {CalculatedValues}\n */\nfunction calculateInitial(values: BaseCFCStruct): CalculatedValues {\n\treturn {\n\t\tgstOnSales: calcCashFlowGST(values.cashInItems),\n\t\tclosingBalance: calcClosingBalance(values),\n\t\tgstOnPurchases: calcCashFlowGST(values.cashOutItems),\n\t\ttotalNetAssets: calcTotalNetAssets(values),\n\t\tcashSurplus: calcCashSurplus(values),\n\t\tavailableToSpend: calcAvailableToSpend(values),\n\t\tincomeTaxPercentage: calcIncomeTaxPer(values),\n\t}\n}\n\nexport default calculateInitial\n","/**\n * Add Padding\n *\n * add white space around some content\n */\n\nimport { format } from \"date-fns\"\n\nexport const addPadding = (content: any, margin = 10) => {\n\treturn {\n\t\tmargin,\n\t\tcolumns: [content],\n\t}\n}\n\n/**\n * Page and margin defaults\n */\n\nexport const pageDefaultSettings = () => {\n\treturn {\n\t\t// watermark: {\n\t\t// \ttext: \"draft\",\n\t\t// \tcolor: \"blue\",\n\t\t// \topacity: 0.3,\n\t\t// \tbold: true,\n\t\t// \titalics: false,\n\t\t// },\n\n\t\tpageSize: \"A4\",\n\t\tpageMargins: [0, 0, 0, 25],\n\t\tfooter: {\n\t\t\tcolumns: [\n\t\t\t\t{\n\t\t\t\t\ttext: `Created on the ${format(new Date(), \"do 'of' MMMM yyyy\")}`,\n\t\t\t\t\talignment: \"center\",\n\t\t\t\t\tfontSize: 12,\n\t\t\t\t\tcolor: \"#333\",\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t}\n}\n\n/**\n * Frame Content\n *\n * Put content in a table with a border\n */\n\nexport const frameContent = (inner: any, style: string[] = []) => {\n\treturn {\n\t\ttable: {\n\t\t\twidths: [\"*\"], // to make it full length\n\t\t\tbody: [[inner]],\n\t\t},\n\t\tstyle,\n\t}\n}\n\n/**\n * Table with Text in it for top of page\n * Requires a pageHeader style\n */\n\nexport const pageHeading = (text: string) => {\n\tconst content = frameContent(addPadding(text), [\"pageHeader\"])\n\n\treturn {\n\t\t...content,\n\t\tlayout: \"noBorders\",\n\t}\n}\n\n/**\n * Add 20 points of padding on a full page\n */\n\nexport const pagePadding = (content: any) => addPadding(content, 20)\n\n/**\n * Basic table of key .... value\n */\n\nexport const basicTable = (items: any, style: string[] = []) => {\n\treturn {\n\t\ttable: {\n\t\t\twidths: [\"75%\", \"*\"],\n\t\t\tbody: items,\n\t\t},\n\t\tstyle,\n\t\tlayout: \"noBorders\",\n\t}\n}\n","import { isAfter } from \"date-fns\"\nimport { CFCStruct, ClientId, CFCId } from \"../../../data/_config/shape\"\nimport CFCUseCase from \"../../../data/CFC/CFCLogic\"\nimport { SelectFieldOptions } from \"../../SelectField/SelectField\"\nimport { canvasDisplayTitle } from \"../../CFC/__config/utilities\"\nimport { CanvasTuple } from \"./shape\"\nimport filterById from \"../../../util/filters/ById\"\nimport {\n\ttoTwoDecimal,\n\tremoveTrailingZeros,\n} from \"../../../util/money/formatting\"\nimport concatStr from \"../../../util/strings/concatStr\"\nimport { pipe } from \"../../../util/reduce/math\"\n\ntype Client = ClientId | undefined\n\n/**\n * Fetches the canvases for a specific client\n *\n * @param {Client} client\n * @returns {Promise<CFCStruct[]>}\n */\nexport async function getCanvasData(client: Client): Promise<CFCStruct[]> {\n\tif (!client) return []\n\tconst data = await CFCUseCase.findByClient(client)\n\treturn data\n}\n\n/**\n * Reduces a CFC object into options for the select field\n *\n * @returns {ReducerHOF<SelectFieldOptions, CFCStruct>}\n */\nexport function reduceToOptions(): ReducerHOF<SelectFieldOptions, CFCStruct> {\n\treturn (acc, cur): SelectFieldOptions => {\n\t\treturn acc.concat({\n\t\t\tvalue: cur.id || -1,\n\t\t\tlabel: canvasDisplayTitle(cur),\n\t\t})\n\t}\n}\n\n/**\n * Changes which canvases are selected for comparing\n *\n * @export\n * @param {CFCStruct[]} allCanvases\n * @param {CanvasTuple} selected\n * @param {number} idx\n * @param {CFCId} id\n * @returns {CanvasTuple}\n */\nexport function changeSelected(\n\tallCanvases: CFCStruct[],\n\tselected: CanvasTuple,\n\tidx: number,\n\tid: CFCId\n): CanvasTuple {\n\tconst newItem = allCanvases.filter(filterById(id))[0]\n\t// return if undefined\n\tif (!newItem) return selected\n\n\tif (idx === 0) {\n\t\tif (isAfter(selected[1].canvasStartDate, newItem.canvasStartDate)) {\n\t\t\treturn [selected[1], newItem]\n\t\t}\n\t\treturn [newItem, selected[1]]\n\t}\n\n\tif (isAfter(newItem.canvasStartDate, selected[0].canvasStartDate)) {\n\t\treturn [newItem, selected[0]]\n\t}\n\treturn [selected[0], newItem]\n}\n\n/**\n * Calculated the percentage difference of two fields\n *\n * @export\n * @param {number} val1\n * @param {number} val2\n * @returns {string}\n */\nexport function calculateDifferencePer(val1: number, val2: number): string {\n\tif (val2 === 0) return \"N/A\"\n\tconst diff = ((val1 - val2) / val2) * 100\n\n\treturn pipe(toTwoDecimal, removeTrailingZeros, concatStr(\"%\"))(`${diff}`)\n}\n","import pdfMake from \"pdfmake/build/pdfmake\"\nimport { detect } from \"detect-browser\"\n\nexport default function (pdf: pdfMake.TCreatedPdf): void {\n\tconst browser = detect()\n\tif (browser?.name === \"ie\" || browser?.name === \"edge\") {\n\t\tpdf.download()\n\t\treturn\n\t}\n\n\tpdf.open()\n}\n","import { v4 as uuidv4 } from \"uuid\"\nimport { CashFlow } from \"../../data/_config/shape\"\n\nexport default function createCashFlowItem(): CashFlow {\n\treturn {\n\t\tid: uuidv4(),\n\t\tdescription: \"\",\n\t\tamount: 0,\n\t\tgstApplicable: true,\n\t}\n}\n","import pdfMake from \"pdfmake/build/pdfmake\"\nimport pdfFonts from \"pdfmake/build/vfs_fonts\"\nimport { green } from \"@material-ui/core/colors\"\nimport { format } from \"date-fns\"\nimport {\n\tframeContent,\n\tbasicTable,\n\tpageDefaultSettings,\n\tpageHeading,\n\tpagePadding,\n} from \"./PDFLib\"\nimport { BaseCFCStruct, CashFlow } from \"../../data/_config/shape\"\nimport {\n\tcalcCashFlowGST,\n\tcalcCashFlowTotal,\n\tcalcTotalCashOut,\n} from \"../../state/CFC/accumulators\"\nimport { calculateInitial } from \"../Forms/CFC\"\nimport { canvasDisplayTitle } from \"../CFC/__config/utilities\"\nimport upperFirst from \"../../util/strings/upperCaseFirst\"\n\npdfMake.vfs = pdfFonts.pdfMake.vfs\n\nconst formatDollars = (value: number) => `$${value.toString()}`\n\nconst openingBalanceSection = (openingBalance: number): any => {\n\treturn frameContent(\n\t\tbasicTable([\n\t\t\t[\n\t\t\t\t\"Opening Balance\",\n\t\t\t\t{ text: formatDollars(openingBalance), style: [\"rightAlign\"] },\n\t\t\t],\n\t\t])\n\t)\n}\n\nconst cashInSection = (cashInItems: CashFlow[], cashInTotal: number): any => {\n\treturn frameContent([\n\t\t{\n\t\t\ttext: \"Cash IN\",\n\t\t\tbold: true,\n\t\t},\n\t\tbasicTable([\n\t\t\t...cashInItems.map((line) => [\n\t\t\t\tline.description,\n\t\t\t\t{ text: formatDollars(line.amount), style: [\"rightAlign\"] },\n\t\t\t]),\n\t\t\t[\n\t\t\t\t\"Total (Exc GST)\",\n\t\t\t\t{\n\t\t\t\t\ttext: formatDollars(cashInTotal),\n\t\t\t\t\tstyle: [\"rightAlign\"],\n\t\t\t\t},\n\t\t\t],\n\t\t]),\n\t])\n}\n\nconst gstOnSalesSection = (gstOnSales: number): any => {\n\treturn frameContent(\n\t\tbasicTable(\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"GST on Sales\",\n\t\t\t\t\t{ text: formatDollars(gstOnSales), style: [\"rightAlign\"] },\n\t\t\t\t],\n\t\t\t],\n\t\t\t[\"yellowBlock\"]\n\t\t)\n\t)\n}\n\nconst cashOutSection = (\n\tcashOutItems: CashFlow[],\n\tcashOutTotal: number\n): any => {\n\treturn frameContent([\n\t\t{ text: \"Cash OUT\", bold: true },\n\t\tbasicTable([\n\t\t\t...cashOutItems.map((line) => [\n\t\t\t\tline.description,\n\t\t\t\t{ text: formatDollars(line.amount), style: [\"rightAlign\"] },\n\t\t\t]),\n\t\t\t[\n\t\t\t\t\"Total (Exc GST)\",\n\t\t\t\t{\n\t\t\t\t\ttext: formatDollars(cashOutTotal),\n\t\t\t\t\tstyle: [\"rightAlign\"],\n\t\t\t\t},\n\t\t\t],\n\t\t]),\n\t])\n}\n\nconst gstOnPurchasesSection = (\n\tgstOnPurchases: number,\n\tpaygWithholding: number,\n\tsuperAmount: number\n): any => {\n\treturn frameContent(\n\t\tbasicTable(\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"GST on Purchases\",\n\t\t\t\t\t{ text: formatDollars(gstOnPurchases), style: [\"rightAlign\"] },\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"PAYG Withholding\",\n\t\t\t\t\t{ text: formatDollars(paygWithholding), style: [\"rightAlign\"] },\n\t\t\t\t],\n\t\t\t\t[\"Super\", { text: formatDollars(superAmount), style: [\"rightAlign\"] }],\n\t\t\t],\n\t\t\t[\"yellowBlock\"]\n\t\t)\n\t)\n}\n\nconst cashSurplusSection = (cashSurplus: number): any => {\n\treturn frameContent(\n\t\tbasicTable([\n\t\t\t[\n\t\t\t\t\"Cash Surplus\",\n\t\t\t\t{ text: formatDollars(cashSurplus), style: [\"rightAlign\"] },\n\t\t\t],\n\t\t])\n\t)\n}\n\nconst incomeSection = (incomeTax: number): any => {\n\treturn frameContent(\n\t\tbasicTable(\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"Income/Company Tax\",\n\t\t\t\t\t// TODO: Needs to use the new calculations in feature/122 branch\n\t\t\t\t\t{ text: formatDollars(incomeTax), style: [\"rightAlign\"] },\n\t\t\t\t],\n\t\t\t],\n\t\t\t[\"yellowBlock\"]\n\t\t)\n\t)\n}\n\nconst availableToSpendSection = (availableToSpend: number): any => {\n\treturn frameContent(\n\t\tbasicTable([\n\t\t\t[\n\t\t\t\t\"Available to spend\",\n\t\t\t\t{ text: formatDollars(availableToSpend), style: [\"rightAlign\"] },\n\t\t\t],\n\t\t])\n\t)\n}\n\nconst closingCashBalanceSection = (\n\tcashToOwner: number,\n\tclosingBalance: number\n): any => {\n\treturn frameContent([\n\t\t{ text: \"Your Closing Cash Balance\", bold: true },\n\t\tbasicTable([\n\t\t\t[\n\t\t\t\t\"Cash to owner\",\n\t\t\t\t{ text: formatDollars(cashToOwner), style: [\"rightAlign\"] },\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Closing balance\",\n\t\t\t\t{ text: formatDollars(closingBalance), style: [\"rightAlign\"] },\n\t\t\t],\n\t\t]),\n\t])\n}\n\nconst yourNetAssetPositionSection = (\n\tstock: number,\n\tcreditors: number,\n\tdebtors: number,\n\tassets: number,\n\tloans: number,\n\ttotalNetAssets: number\n): any => {\n\treturn frameContent([\n\t\t{ text: \"Your net asset position\", bold: true },\n\t\tbasicTable([\n\t\t\t[\"Stocks\", { text: formatDollars(stock), style: [\"rightAlign\"] }],\n\t\t\t[\"Creditors\", { text: formatDollars(creditors), style: [\"rightAlign\"] }],\n\t\t\t[\"Debtors\", { text: formatDollars(debtors), style: [\"rightAlign\"] }],\n\t\t\t[\"Assets\", { text: formatDollars(assets), style: [\"rightAlign\"] }],\n\t\t\t[\"Loans\", { text: formatDollars(loans), style: [\"rightAlign\"] }],\n\t\t\t[\n\t\t\t\t{ text: \"Total net assets\", bold: true },\n\t\t\t\t{ text: formatDollars(totalNetAssets), style: [\"rightAlign\"] },\n\t\t\t],\n\t\t]),\n\t])\n}\n\nexport default async (title: string, values: BaseCFCStruct) => {\n\tconst {\n\t\topeningBalance,\n\t\tcashInItems,\n\t\tcashOutItems,\n\t\tpaygWithholding,\n\t\tsuperAmount,\n\t\tincomeTax,\n\t\tcashToOwner,\n\t\tstock,\n\t\tcreditors,\n\t\tdebtors,\n\t\tassets,\n\t\tloans,\n\t} = values\n\n\tconst cashInTotal = calcCashFlowTotal(cashInItems)\n\tconst cashInGST = calcCashFlowGST(cashInItems)\n\tconst cashOutTotal = calcTotalCashOut(values)\n\tconst cashOutGST = calcCashFlowGST(cashOutItems)\n\n\tconst calculated = calculateInitial(values)\n\tconst {\n\t\tcashSurplus,\n\t\tavailableToSpend,\n\t\tclosingBalance,\n\t\ttotalNetAssets,\n\t} = calculated\n\n\tconst docDefinition: any = {\n\t\t...pageDefaultSettings(),\n\n\t\tcontent: [\n\t\t\tpageHeading(`${title} - CANVAS - ${canvasDisplayTitle(values)}`),\n\t\t\tpagePadding([\n\t\t\t\tframeContent({\n\t\t\t\t\ttable: {\n\t\t\t\t\t\twidths: [\"25%\", \"25%\", \"25%\", \"25%\"],\n\t\t\t\t\t\tbody: [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t{ text: \"Canvas Type\", bold: true },\n\t\t\t\t\t\t\t\t\tupperFirst(values.canvasType),\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t{ text: \"Time-frame\", bold: true },\n\t\t\t\t\t\t\t\t\tupperFirst(values.canvasTimeFrame),\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t{ text: \"Start date\", bold: true },\n\t\t\t\t\t\t\t\t\t`${format(values.canvasStartDate, \"dd/MM/yyyy\")}`,\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t{ text: \"End date\", bold: true },\n\t\t\t\t\t\t\t\t\t`${format(values.canvasEndDate, \"dd/MM/yyyy\")}`,\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\tlayout: \"noBorders\",\n\t\t\t\t}),\n\t\t\t\t\" \",\n\t\t\t\topeningBalanceSection(openingBalance),\n\n\t\t\t\t{\n\t\t\t\t\ttable: {\n\t\t\t\t\t\twidths: [\"60%\", \"*\"],\n\t\t\t\t\t\tbody: [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tcashInSection(cashInItems, cashInTotal),\n\t\t\t\t\t\t\t\tgstOnSalesSection(cashInGST),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tcashOutSection(cashOutItems, cashOutTotal),\n\t\t\t\t\t\t\t\tgstOnPurchasesSection(cashOutGST, paygWithholding, superAmount),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[cashSurplusSection(cashSurplus), incomeSection(incomeTax)],\n\t\t\t\t\t\t\t[availableToSpendSection(availableToSpend), {}],\n\t\t\t\t\t\t\t[closingCashBalanceSection(cashToOwner, closingBalance), {}],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tyourNetAssetPositionSection(\n\t\t\t\t\t\t\t\t\tstock,\n\t\t\t\t\t\t\t\t\tcreditors,\n\t\t\t\t\t\t\t\t\tdebtors,\n\t\t\t\t\t\t\t\t\tassets,\n\t\t\t\t\t\t\t\t\tloans,\n\t\t\t\t\t\t\t\t\ttotalNetAssets\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\tlayout: \"noBorders\",\n\t\t\t\t},\n\t\t\t]),\n\t\t],\n\n\t\tstyles: {\n\t\t\tpageHeader: {\n\t\t\t\tfontSize: 20,\n\t\t\t\tbold: true,\n\t\t\t\tfillColor: green[\"800\"],\n\t\t\t\tcolor: \"white\",\n\t\t\t\talignment: \"center\",\n\t\t\t},\n\t\t\trightAlign: {\n\t\t\t\t// fillColor: \"#CCCCCC\",\n\t\t\t\talignment: \"right\",\n\t\t\t},\n\t\t\tyellowBlock: {\n\t\t\t\tfillColor: \"yellow\",\n\t\t\t},\n\t\t},\n\n\t\tdefaultStyle: {\n\t\t\tfontSize: 15,\n\t\t\tbold: false,\n\t\t},\n\t}\n\treturn pdfMake.createPdf(docDefinition)\n}\n","import React, { ReactElement } from \"react\"\nimport { Typography } from \"@material-ui/core\"\nimport { Link } from \"react-router-dom\"\nimport { PrivateRoutes, routeVarReplacement } from \"../../util/routes/routes\"\n\n/**\n * No canvas data message\n *\n * @export\n * @returns {ReactElement}\n */\nexport default function NoCanvases(): ReactElement {\n\treturn (\n\t\t<>\n\t\t\t<Typography variant=\"h6\">No canvas data found</Typography>\n\t\t\t<Typography>\n\t\t\t\tCheck that you have the correct{\" \"}\n\t\t\t\t<Link to={PrivateRoutes.ClientList}>client selected</Link> or{\" \"}\n\t\t\t\t<Link to={routeVarReplacement(PrivateRoutes.CFC, [[\":id?\", \"\"]])}>\n\t\t\t\t\tstart a new canvas\n\t\t\t\t</Link>\n\t\t\t\t.\n\t\t\t</Typography>\n\t\t</>\n\t)\n}\n","import { makeStyles } from \"@material-ui/core\"\n\nconst useStyles = makeStyles((theme) => ({\n\tcompareLabel: {\n\t\tdisplay: \"flex\",\n\t\talignItems: \"center\",\n\t},\n\tcompareTooltip: {\n\t\tmarginLeft: theme.spacing(1),\n\t},\n\tcell1: {\n\t\twidth: \"20%\",\n\t},\n\tcellCanvas: {\n\t\twidth: \"25%\",\n\t},\n\tcellDifference: {\n\t\twidth: \"15%\",\n\t},\n\ttableRow: {\n\t\t\"&:hover\": {\n\t\t\tbackground: theme.palette.grey[100],\n\t\t},\n\t},\n\tnoBorderBottom: {\n\t\tborderBottom: \"none\",\n\t},\n\ttable: {\n\t\t[theme.breakpoints.down(\"md\")]: {\n\t\t\tminWidth: theme.breakpoints.values.md,\n\t\t},\n\t},\n\tto: {\n\t\t[theme.breakpoints.down(\"md\")]: {\n\t\t\tmarginTop: -theme.spacing(1),\n\t\t\tmarginBottom: -theme.spacing(1),\n\t\t},\n\t},\n}))\n\nexport default useStyles\n","import React, { ReactElement } from \"react\"\nimport Alert from \"@material-ui/lab/Alert\"\n\n/**\n * Message to display when comparing canvases are in different time frames\n *\n * @export\n * @returns {ReactElement}\n */\nexport default function TimeframeOutOfSync(): ReactElement {\n\treturn (\n\t\t<Alert severity=\"warning\">\n\t\t\tThe two selected canvases are in different time-frames. The calculations\n\t\t\twill not be accurate.\n\t\t</Alert>\n\t)\n}\n","import React, { ReactElement, useMemo, ChangeEvent } from \"react\"\nimport { Typography, Grid, Tooltip } from \"@material-ui/core\"\nimport InfoIcon from \"@material-ui/icons/Info\"\nimport { CompareSelectorProps } from \"./__config/shape\"\nimport SelectField from \"../SelectField\"\nimport { reduceToOptions } from \"./__config/utilities\"\nimport useStyles from \"./__config/styles\"\nimport TimeframeOutOfSync from \"./TimeframeOutOfSync\"\n\nconst tipContent =\n\t\"The canvas with the later date will always move to the ‘left-side’ of the comparison\"\n\n/**\n * Selector to choose between different canvases\n *\n * @export\n * @param {CompareSelectorProps} {\n * \tselectedCanvases: [leftSelected, rightSelected],\n * \tallCanvases,\n * }\n * @returns {ReactElement}\n */\nexport default function CompareSelector({\n\tselectedCanvases: [leftSelected, rightSelected],\n\tallCanvases,\n\tchangeSelected,\n}: CompareSelectorProps): ReactElement {\n\tconst cls = useStyles()\n\n\tconst selectOptions = useMemo(() => {\n\t\treturn allCanvases.reduce(reduceToOptions(), [])\n\t}, [allCanvases])\n\n\tconst changeSelectedCanvas = (idx: number) => (\n\t\te: ChangeEvent<HTMLInputElement>\n\t): void => {\n\t\tchangeSelected(idx, e.target.value)\n\t}\n\n\treturn (\n\t\t<Grid container spacing={2} alignItems=\"center\">\n\t\t\t<Grid item xs={12} md={3}>\n\t\t\t\t<Typography variant=\"h6\" className={cls.compareLabel}>\n\t\t\t\t\tCompare\n\t\t\t\t\t<Tooltip title={tipContent} className={cls.compareTooltip}>\n\t\t\t\t\t\t<InfoIcon color=\"primary\" />\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12} md={4}>\n\t\t\t\t<SelectField\n\t\t\t\t\tname=\"left-side-compare\"\n\t\t\t\t\tlabel=\"Canvas\"\n\t\t\t\t\tvalue={leftSelected?.id || -1}\n\t\t\t\t\tonChange={changeSelectedCanvas(0)}\n\t\t\t\t\toptions={selectOptions}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12} md={1} className={cls.to}>\n\t\t\t\t<Typography align=\"center\" variant=\"overline\" component=\"p\">\n\t\t\t\t\tto\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12} md={4}>\n\t\t\t\t<SelectField\n\t\t\t\t\tname=\"right-side-compare\"\n\t\t\t\t\tlabel=\"Canvas\"\n\t\t\t\t\tvalue={rightSelected?.id || -1}\n\t\t\t\t\tonChange={changeSelectedCanvas(1)}\n\t\t\t\t\toptions={selectOptions}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t\t{leftSelected.canvasTimeFrame !== rightSelected.canvasTimeFrame && (\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<TimeframeOutOfSync />\n\t\t\t\t</Grid>\n\t\t\t)}\n\t\t</Grid>\n\t)\n}\n","import React, { ReactElement } from \"react\"\nimport { TableHead, TableRow, TableCell } from \"@material-ui/core\"\nimport { TableHeaderProps } from \"./__config/shape\"\nimport { canvasDisplayTitle } from \"../CFC/__config/utilities\"\nimport useStyles from \"./__config/styles\"\n\n/**\n * Component used as the table header\n *\n * @export\n * @param {TableHeaderProps} {\n * \tselectedCanvases: [left, right],\n * }\n * @returns {ReactElement}\n */\nexport default React.memo(function TableHeader({\n\tselectedCanvases: [left, right],\n}: TableHeaderProps): ReactElement {\n\tconst cls = useStyles()\n\n\treturn (\n\t\t<TableHead>\n\t\t\t<TableRow>\n\t\t\t\t<TableCell className={cls.cell1} />\n\t\t\t\t<TableCell className={cls.cellCanvas}>\n\t\t\t\t\t{canvasDisplayTitle(left)}\n\t\t\t\t</TableCell>\n\t\t\t\t<TableCell className={cls.cellCanvas}>\n\t\t\t\t\t{canvasDisplayTitle(right)}\n\t\t\t\t</TableCell>\n\t\t\t\t<TableCell className={cls.cellDifference}>$ Difference</TableCell>\n\t\t\t\t<TableCell className={cls.cellDifference}>% Difference</TableCell>\n\t\t\t</TableRow>\n\t\t</TableHead>\n\t)\n})\n","import React, { ReactElement } from \"react\"\nimport { TableCell, TableRow } from \"@material-ui/core\"\nimport { CanvasItemRowProps } from \"./__config/shape\"\nimport { calculateDifferencePer } from \"./__config/utilities\"\nimport { addDollarSign, formatNumber } from \"../../util/money/formatting\"\nimport useStyles from \"./__config/styles\"\n\n/**\n * Used to display the data related to a value for a field in the canvas\n *\n * @export\n * @param {CanvasItemRowProps} {\n * \tvalues: [val1, val2],\n * \tlabel,\n * \tbold\n * \tborder\n * }\n * @returns {ReactElement}\n */\nexport default function CanvasItemRow({\n\tvalues: [val1, val2],\n\tlabel,\n\tbold = false,\n\tborder = true,\n}: CanvasItemRowProps): ReactElement {\n\tconst cls = useStyles()\n\n\treturn (\n\t\t<TableRow className={cls.tableRow}>\n\t\t\t<TableCell\n\t\t\t\tclassName={border ? \"\" : cls.noBorderBottom}\n\t\t\t\tvariant={bold ? \"head\" : \"body\"}\n\t\t\t>\n\t\t\t\t{label || \"\"}\n\t\t\t</TableCell>\n\t\t\t<TableCell\n\t\t\t\tclassName={border ? \"\" : cls.noBorderBottom}\n\t\t\t\tvariant={bold ? \"head\" : \"body\"}\n\t\t\t>\n\t\t\t\t{formatNumber(`${val1}`)}\n\t\t\t</TableCell>\n\t\t\t<TableCell\n\t\t\t\tclassName={border ? \"\" : cls.noBorderBottom}\n\t\t\t\tvariant={bold ? \"head\" : \"body\"}\n\t\t\t>\n\t\t\t\t{formatNumber(`${val2}`)}\n\t\t\t</TableCell>\n\t\t\t<TableCell\n\t\t\t\tclassName={border ? \"\" : cls.noBorderBottom}\n\t\t\t\tvariant={bold ? \"head\" : \"body\"}\n\t\t\t>\n\t\t\t\t{addDollarSign(formatNumber(`${val1 - val2}`))}\n\t\t\t</TableCell>\n\t\t\t<TableCell\n\t\t\t\tclassName={border ? \"\" : cls.noBorderBottom}\n\t\t\t\tvariant={bold ? \"head\" : \"body\"}\n\t\t\t>\n\t\t\t\t{calculateDifferencePer(val1, val2)}\n\t\t\t</TableCell>\n\t\t</TableRow>\n\t)\n}\n","import React, { ReactElement, useMemo } from \"react\"\nimport { TableContainer, Table, TableBody, TableCell } from \"@material-ui/core\"\nimport TableHeader from \"./TableHeader\"\nimport CanvasItemRow from \"./CanvasItemRow\"\nimport { CompareTableProps } from \"./__config/shape\"\nimport { calculateInitial } from \"../Forms/CFC\"\nimport { calcCashFlowTotal } from \"../../state/CFC/accumulators\"\nimport { CashFlow } from \"../../data/_config/shape\"\nimport arrayFillWith from \"../../util/array/arrayFillWith\"\nimport { newTimestamp } from \"../../util/dates\"\nimport useStyles from \"./__config/styles\"\n\n/**\n * The component used to display the data in a table format\n *\n * @export\n * @param {CompareTableProps} {\n * \tselectedCanvases,\n * }\n * @returns {ReactElement}\n */\nexport default function CompareTable({\n\tselectedCanvases,\n}: CompareTableProps): ReactElement {\n\tconst cls = useStyles()\n\n\tconst leftCalculated = useMemo(() => {\n\t\treturn calculateInitial(selectedCanvases[0])\n\t}, [selectedCanvases])\n\n\tconst rightCalculated = useMemo(() => {\n\t\treturn calculateInitial(selectedCanvases[1])\n\t}, [selectedCanvases])\n\n\t/**\n\t * Renders the repeater form values\n\t *\n\t * @param {CashFlow[]} val1\n\t * @param {CashFlow[]} val2\n\t * @returns {ReactElement[]}\n\t */\n\tfunction renderRepeaterFields(\n\t\tval1: CashFlow[],\n\t\tval2: CashFlow[]\n\t): ReactElement[] {\n\t\tconst len = val1.length > val2.length ? val1.length : val2.length\n\t\tconst arr = arrayFillWith(len, 0)\n\t\treturn arr.map((item, idx) => (\n\t\t\t<CanvasItemRow\n\t\t\t\tkey={val1[idx]?.id || val2[idx]?.id || newTimestamp()}\n\t\t\t\tvalues={[val1[idx]?.amount || 0, val2[idx]?.amount || 0]}\n\t\t\t\tborder={idx >= len - 1}\n\t\t\t/>\n\t\t))\n\t}\n\n\treturn (\n\t\t<TableContainer>\n\t\t\t<Table className={cls.table}>\n\t\t\t\t<TableHeader selectedCanvases={selectedCanvases} />\n\t\t\t\t<TableBody>\n\t\t\t\t\t<CanvasItemRow\n\t\t\t\t\t\tbold\n\t\t\t\t\t\tlabel=\"Opening Balance\"\n\t\t\t\t\t\tvalues={[\n\t\t\t\t\t\t\tselectedCanvases[0].openingBalance,\n\t\t\t\t\t\t\tselectedCanvases[1].openingBalance,\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t\t<TableCell colSpan={5} variant=\"head\" className={cls.noBorderBottom}>\n\t\t\t\t\t\tCash IN\n\t\t\t\t\t</TableCell>\n\t\t\t\t\t{renderRepeaterFields(\n\t\t\t\t\t\tselectedCanvases[0].cashInItems,\n\t\t\t\t\t\tselectedCanvases[1].cashInItems\n\t\t\t\t\t)}\n\t\t\t\t\t<CanvasItemRow\n\t\t\t\t\t\tlabel=\"GST on sales\"\n\t\t\t\t\t\tvalues={[leftCalculated.gstOnSales, rightCalculated.gstOnSales]}\n\t\t\t\t\t/>\n\t\t\t\t\t<CanvasItemRow\n\t\t\t\t\t\tbold\n\t\t\t\t\t\tlabel=\"Total (exc GST)\"\n\t\t\t\t\t\tvalues={[\n\t\t\t\t\t\t\tcalcCashFlowTotal(selectedCanvases[0].cashInItems),\n\t\t\t\t\t\t\tcalcCashFlowTotal(selectedCanvases[1].cashInItems),\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t\t<TableCell colSpan={5} variant=\"head\" className={cls.noBorderBottom}>\n\t\t\t\t\t\tCash OUT\n\t\t\t\t\t</TableCell>\n\t\t\t\t\t{renderRepeaterFields(\n\t\t\t\t\t\tselectedCanvases[0].cashOutItems,\n\t\t\t\t\t\tselectedCanvases[1].cashOutItems\n\t\t\t\t\t)}\n\t\t\t\t\t<CanvasItemRow\n\t\t\t\t\t\tlabel=\"GST on Purchases\"\n\t\t\t\t\t\tvalues={[\n\t\t\t\t\t\t\tleftCalculated.gstOnPurchases,\n\t\t\t\t\t\t\trightCalculated.gstOnPurchases,\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t\t<CanvasItemRow\n\t\t\t\t\t\tbold\n\t\t\t\t\t\tlabel=\"Total (exc GST)\"\n\t\t\t\t\t\tvalues={[\n\t\t\t\t\t\t\tcalcCashFlowTotal(selectedCanvases[0].cashOutItems),\n\t\t\t\t\t\t\tcalcCashFlowTotal(selectedCanvases[1].cashOutItems),\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t\t<CanvasItemRow\n\t\t\t\t\t\tbold\n\t\t\t\t\t\tlabel=\"Cash Surplus\"\n\t\t\t\t\t\tvalues={[leftCalculated.cashSurplus, rightCalculated.cashSurplus]}\n\t\t\t\t\t/>\n\t\t\t\t\t<CanvasItemRow\n\t\t\t\t\t\tlabel=\"Income/Company Tax\"\n\t\t\t\t\t\tvalues={[\n\t\t\t\t\t\t\tleftCalculated.incomeTaxPercentage,\n\t\t\t\t\t\t\trightCalculated.incomeTaxPercentage,\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t\t<CanvasItemRow\n\t\t\t\t\t\tbold\n\t\t\t\t\t\tlabel=\"Available to spend\"\n\t\t\t\t\t\tvalues={[\n\t\t\t\t\t\t\tleftCalculated.availableToSpend,\n\t\t\t\t\t\t\trightCalculated.availableToSpend,\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t\t<CanvasItemRow\n\t\t\t\t\t\tlabel=\"Cash to Owner\"\n\t\t\t\t\t\tvalues={[\n\t\t\t\t\t\t\tselectedCanvases[0].cashToOwner,\n\t\t\t\t\t\t\tselectedCanvases[1].cashToOwner,\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t\t<CanvasItemRow\n\t\t\t\t\t\tbold\n\t\t\t\t\t\tlabel=\"Closing balance\"\n\t\t\t\t\t\tvalues={[\n\t\t\t\t\t\t\tleftCalculated.closingBalance,\n\t\t\t\t\t\t\trightCalculated.closingBalance,\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t\t<CanvasItemRow\n\t\t\t\t\t\tlabel=\"Stock\"\n\t\t\t\t\t\tvalues={[selectedCanvases[0].stock, selectedCanvases[1].stock]}\n\t\t\t\t\t/>\n\t\t\t\t\t<CanvasItemRow\n\t\t\t\t\t\tlabel=\"Debtors\"\n\t\t\t\t\t\tvalues={[selectedCanvases[0].debtors, selectedCanvases[1].debtors]}\n\t\t\t\t\t/>\n\t\t\t\t\t<CanvasItemRow\n\t\t\t\t\t\tlabel=\"Assets\"\n\t\t\t\t\t\tvalues={[selectedCanvases[0].assets, selectedCanvases[1].assets]}\n\t\t\t\t\t/>\n\t\t\t\t\t<CanvasItemRow\n\t\t\t\t\t\tlabel=\"Creditors\"\n\t\t\t\t\t\tvalues={[\n\t\t\t\t\t\t\tselectedCanvases[0].creditors,\n\t\t\t\t\t\t\tselectedCanvases[1].creditors,\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t\t<CanvasItemRow\n\t\t\t\t\t\tlabel=\"Loans\"\n\t\t\t\t\t\tvalues={[selectedCanvases[0].loans, selectedCanvases[1].loans]}\n\t\t\t\t\t/>\n\t\t\t\t\t<CanvasItemRow\n\t\t\t\t\t\tbold\n\t\t\t\t\t\tlabel=\"Net Position\"\n\t\t\t\t\t\tvalues={[\n\t\t\t\t\t\t\tleftCalculated.totalNetAssets,\n\t\t\t\t\t\t\trightCalculated.totalNetAssets,\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t</TableBody>\n\t\t\t</Table>\n\t\t</TableContainer>\n\t)\n}\n","import React, { ReactElement } from \"react\"\nimport { Typography } from \"@material-ui/core\"\nimport { Link } from \"react-router-dom\"\nimport { PrivateRoutes, routeVarReplacement } from \"../../util/routes/routes\"\n\n/**\n * Message to display when there are not enough canvases\n *\n * @export\n * @returns {ReactElement}\n */\nexport default function NotEnoughCanvases(): ReactElement {\n\treturn (\n\t\t<>\n\t\t\t<Typography variant=\"h6\">\n\t\t\t\tYou don&apos;t have enough canvases created\n\t\t\t</Typography>\n\t\t\t<Typography>\n\t\t\t\tTo continue, you&apos;ll need at least 2 canvases created. <br /> Check\n\t\t\t\tthat you have the correct{\" \"}\n\t\t\t\t<Link to={PrivateRoutes.ClientList}>client selected</Link> or{\" \"}\n\t\t\t\t<Link to={routeVarReplacement(PrivateRoutes.CFC, [[\":id?\", \"\"]])}>\n\t\t\t\t\tstart a new canvas\n\t\t\t\t</Link>\n\t\t\t\t.\n\t\t\t</Typography>\n\t\t</>\n\t)\n}\n","import React, {\n\tReactElement,\n\tuseCallback,\n\tuseEffect,\n\tuseState,\n\tuseContext,\n} from \"react\"\nimport { Divider } from \"@material-ui/core\"\nimport { useMachine } from \"@xstate/react\"\nimport { isAfter } from \"date-fns\"\nimport CompareSelector from \"./CompareSelector\"\nimport Spacer from \"../Spacer\"\nimport CompareTable from \"./CompareTable\"\nimport fetchMachine from \"../Forms/CFC/__config/machine\"\nimport NoCanvases from \"../CFC/NoCanvases\"\nimport Loading from \"../Loading\"\nimport useCurrentClient from \"../../state/client/useCurrentClient\"\nimport { CFCStruct, CFCId } from \"../../data/_config/shape\"\nimport { getCanvasData, changeSelected } from \"./__config/utilities\"\nimport NotEnoughCanvases from \"./NotEnoughCanvases\"\nimport { CanvasTuple } from \"./__config/shape\"\nimport CFCContext from \"../../state/CFC/context\"\nimport { calculateInitial } from \"../Forms/CFC\"\nimport { CFCActionTypes } from \"../../state/CFC/shape\"\nimport {\n\tcalcQuestionFour,\n\tcalcQuestionOne,\n\tcalcQuestionTwo,\n\tcalcQuestionThree,\n} from \"../CFC/__config/utilities\"\n\n/**\n * Component wrapper to display all the data in the compare table\n *\n * @export\n * @returns {ReactElement}\n */\nexport default function CompareCanvases(): ReactElement {\n\t// #region State Management\n\tconst { dispatch } = useContext(CFCContext)\n\tconst [stateMachine, changeState] = useMachine(fetchMachine)\n\tconst [currentClient, clientSynced] = useCurrentClient()\n\tconst [canvases, setCanvases] = useState<CFCStruct[]>([])\n\tconst [selectedCanvases, setSelectedCanvases] = useState<CanvasTuple>()\n\n\tuseEffect(() => {\n\t\tconst left = selectedCanvases?.[0]\n\t\tconst right = selectedCanvases?.[1]\n\n\t\tif (left && right) {\n\t\t\tconst leftCalc = calculateInitial(left)\n\t\t\tconst rightCalc = calculateInitial(right)\n\n\t\t\tdispatch({\n\t\t\t\ttype: CFCActionTypes.ChangeQuestionValues,\n\t\t\t\tpayload: {\n\t\t\t\t\tone: calcQuestionOne(leftCalc),\n\t\t\t\t\ttwo: calcQuestionTwo(\n\t\t\t\t\t\tleftCalc,\n\t\t\t\t\t\tleft.paygWithholding,\n\t\t\t\t\t\tleft.superAmount,\n\t\t\t\t\t\tleft.incomeTax\n\t\t\t\t\t),\n\t\t\t\t\tthree: calcQuestionThree(\n\t\t\t\t\t\tleft.openingBalance,\n\t\t\t\t\t\tleftCalc,\n\t\t\t\t\t\tleft.incomeTax\n\t\t\t\t\t),\n\t\t\t\t\tfour: calcQuestionFour(leftCalc, rightCalc),\n\t\t\t\t},\n\t\t\t})\n\n\t\t\tdispatch({\n\t\t\t\ttype: CFCActionTypes.ChangeCompare,\n\t\t\t\tpayload: {\n\t\t\t\t\tleft,\n\t\t\t\t\tright,\n\t\t\t\t},\n\t\t\t})\n\t\t}\n\t}, [selectedCanvases, dispatch])\n\t// #endregion\n\n\t// #region Data Fetching\n\tconst fetchCanvasData = useCallback(async () => {\n\t\tconst data = await getCanvasData(currentClient?.id)\n\t\tsetCanvases(data)\n\t\tif (data.length >= 2) {\n\t\t\tconst item1 = data[0]\n\t\t\tconst item2 = data[1]\n\t\t\tsetSelectedCanvases(\n\t\t\t\tisAfter(item1.canvasStartDate, item2.canvasStartDate)\n\t\t\t\t\t? [item1, item2]\n\t\t\t\t\t: [item2, item1]\n\t\t\t)\n\t\t}\n\t\tchangeState(data.length < 2 ? \"REJECT\" : \"RESOLVE\")\n\t}, [currentClient, changeState])\n\n\tuseEffect(() => {\n\t\tif (clientSynced) {\n\t\t\tfetchCanvasData()\n\t\t}\n\t}, [clientSynced, fetchCanvasData])\n\t// #endregion\n\n\t// #region Changing Selected Canvas\n\t/**\n\t * Change the currently selected canvas to compare\n\t *\n\t * @param {number} idx\n\t * @param {CFCId} id\n\t */\n\tfunction changeSelectedCanvas(idx: number, id: CFCId): void {\n\t\tif (!selectedCanvases) return\n\n\t\tconst newSelected = changeSelected(canvases, selectedCanvases, idx, id)\n\t\tsetSelectedCanvases(newSelected)\n\t}\n\t// #endregion\n\n\t// #region Component rendering\n\t/**\n\t * Renders the component based on the current state of the state machine\n\t *\n\t * @returns {ReactElement}\n\t */\n\tfunction renderForStateMachine(): ReactElement {\n\t\tswitch (stateMachine.value) {\n\t\t\tcase \"failure\":\n\t\t\t\treturn canvases.length === 1 ? <NotEnoughCanvases /> : <NoCanvases />\n\t\t\tcase \"success\":\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<CompareSelector\n\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\t\t\t\tselectedCanvases={selectedCanvases!}\n\t\t\t\t\t\t\tallCanvases={canvases}\n\t\t\t\t\t\t\tchangeSelected={changeSelectedCanvas}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Spacer />\n\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t<Spacer />\n\t\t\t\t\t\t{/* eslint-disable-next-line @typescript-eslint/no-non-null-assertion */}\n\t\t\t\t\t\t<CompareTable selectedCanvases={selectedCanvases!} />\n\t\t\t\t\t</>\n\t\t\t\t)\n\t\t\tcase \"loading\":\n\t\t\tdefault:\n\t\t\t\treturn <Loading />\n\t\t}\n\t}\n\n\treturn renderForStateMachine()\n\t// #endregion\n}\n","import React, { ReactElement, useState, useCallback, useEffect } from \"react\"\nimport CompareArrowsIcon from \"@material-ui/icons/CompareArrows\"\nimport { useHistory, useParams } from \"react-router-dom\"\nimport { ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\"\nimport { PrivateRoutes } from \"../../util/routes/routes\"\nimport useCurrentClient from \"../../state/client/useCurrentClient\"\nimport CFCUseCase from \"../../data/CFC/CFCLogic\"\n\nexport default function ControlCompareLink(): ReactElement {\n\tconst history = useHistory()\n\tconst [count, setCount] = useState(0)\n\tconst { id } = useParams()\n\tconst [currentClient, clientSynced] = useCurrentClient()\n\tconst getCount = useCallback(async () => {\n\t\tif (currentClient?.id) {\n\t\t\tconst c = await CFCUseCase.countClientRecords(currentClient.id)\n\t\t\tsetCount(c)\n\t\t}\n\t}, [currentClient, setCount])\n\n\tuseEffect(() => {\n\t\tif (clientSynced) {\n\t\t\tgetCount()\n\t\t}\n\t}, [clientSynced, getCount, id])\n\n\tconst goTo = (route: PrivateRoutes) => (): void => {\n\t\t// eslint-disable-next-line\n\t\thistory.push(route)\n\t}\n\n\tif (count < 2) {\n\t\treturn <></>\n\t}\n\n\treturn (\n\t\t<ListItem button onClick={goTo(PrivateRoutes.CFCCompare)}>\n\t\t\t<ListItemIcon>\n\t\t\t\t<CompareArrowsIcon />\n\t\t\t</ListItemIcon>\n\t\t\t<ListItemText>Compare Canvases</ListItemText>\n\t\t</ListItem>\n\t)\n}\n","import React, { ReactElement, useState, useContext, useEffect } from \"react\"\nimport { ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\"\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\"\nimport { CopyCanvasDialog } from \"../../content/dialog\"\nimport CFCContext from \"../../state/CFC/context\"\nimport { CFCActionTypes } from \"../../state/CFC/shape\"\n\n/**\n * Component used to trigger the copy canvas modal\n *\n * @export\n * @returns {ReactElement}\n */\nexport default function CopyCanvasTrigger(): ReactElement {\n\tconst [open, setOpen] = useState(false)\n\tconst { dispatch } = useContext(CFCContext)\n\n\tuseEffect(() => {\n\t\tdispatch({\n\t\t\ttype: CFCActionTypes.ChangeCopyCanvasActive,\n\t\t\tpayload: open,\n\t\t})\n\t}, [open, dispatch])\n\n\tconst onClose = (): void => {\n\t\tsetOpen(false)\n\t}\n\tconst onOpen = (): void => {\n\t\tsetOpen(true)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<ListItem button onClick={onOpen}>\n\t\t\t\t<ListItemIcon>\n\t\t\t\t\t<FileCopyIcon />\n\t\t\t\t</ListItemIcon>\n\t\t\t\t<ListItemText>Copy Canvas</ListItemText>\n\t\t\t</ListItem>\n\t\t\t<CopyCanvasDialog open={open} onClose={onClose} />\n\t\t</>\n\t)\n}\n","import pdfMake from \"pdfmake/build/pdfmake\"\nimport pdfFonts from \"pdfmake/build/vfs_fonts\"\nimport { green } from \"@material-ui/core/colors\"\nimport { CFCStruct, CashFlow } from \"../../data/_config/shape\"\nimport { pageDefaultSettings, pageHeading, pagePadding } from \"./PDFLib\"\nimport { canvasDisplayTitle } from \"../CFC/__config/utilities\"\nimport { addDollarSign } from \"../../util/money/formatting\"\nimport { calculateDifferencePer } from \"../CFCCompare/__config/utilities\"\nimport { calculateInitial } from \"../Forms/CFC\"\nimport { calcCashFlowTotal } from \"../../state/CFC/accumulators\"\nimport arrayFillWith from \"../../util/array/arrayFillWith\"\n\npdfMake.vfs = pdfFonts.pdfMake.vfs\n\nconst rowValue = (values: [number, number]): string[] => {\n\tconst [val1, val2] = values\n\treturn [\n\t\t`${val1}`,\n\t\t`${val2}`,\n\t\taddDollarSign(`${val1 - val2}`),\n\t\tcalculateDifferencePer(val1, val2),\n\t]\n}\n\nfunction renderRepeaterFields(val1: CashFlow[], val2: CashFlow[]): string[][] {\n\tconst len = val1.length > val2.length ? val1.length : val2.length\n\tconst arr = arrayFillWith(len, 0)\n\treturn arr.map((item, idx) => [\n\t\t\"\",\n\t\t...rowValue([val1[idx]?.amount || 0, val2[idx]?.amount || 0]),\n\t])\n}\n\nexport default async (\n\tleftSelected: CFCStruct,\n\trightSelected: CFCStruct\n): Promise<pdfMake.TCreatedPdf> => {\n\tconst leftCalc = calculateInitial(leftSelected)\n\tconst rightCalc = calculateInitial(rightSelected)\n\n\tconst docDefinition: any = {\n\t\t...pageDefaultSettings(),\n\t\tcontent: [\n\t\t\tpageHeading(\"Canvas Comparison\"),\n\t\t\tpagePadding([\n\t\t\t\t{\n\t\t\t\t\ttable: {\n\t\t\t\t\t\twidth: [\"*\", \"*\", \"*\", \"*\", \"*\"],\n\t\t\t\t\t\tbody: [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\t\t{ text: canvasDisplayTitle(leftSelected), bold: true },\n\t\t\t\t\t\t\t\t{ text: canvasDisplayTitle(rightSelected), bold: true },\n\t\t\t\t\t\t\t\t{ text: \"$ Difference\", bold: true },\n\t\t\t\t\t\t\t\t{ text: \"% Difference\", bold: true },\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t{ text: \"Opening balance\", bold: true },\n\t\t\t\t\t\t\t\t...rowValue([\n\t\t\t\t\t\t\t\t\tleftSelected.openingBalance,\n\t\t\t\t\t\t\t\t\trightSelected.openingBalance,\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[{ text: \"Cash In\", colSpan: 5, bold: true }, \"\", \"\", \"\", \"\"],\n\t\t\t\t\t\t\t...renderRepeaterFields(\n\t\t\t\t\t\t\t\tleftSelected.cashInItems,\n\t\t\t\t\t\t\t\trightSelected.cashInItems\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\"GST on sales\",\n\t\t\t\t\t\t\t\t...rowValue([leftCalc.gstOnSales, rightCalc.gstOnSales]),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t{ text: \"Total (exc GST)\", bold: true },\n\t\t\t\t\t\t\t\t...rowValue([\n\t\t\t\t\t\t\t\t\tcalcCashFlowTotal(leftSelected.cashInItems),\n\t\t\t\t\t\t\t\t\tcalcCashFlowTotal(rightSelected.cashInItems),\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[{ text: \"Cash Out\", colSpan: 5, bold: true }, \"\", \"\", \"\", \"\"],\n\t\t\t\t\t\t\t...renderRepeaterFields(\n\t\t\t\t\t\t\t\tleftSelected.cashOutItems,\n\t\t\t\t\t\t\t\trightSelected.cashOutItems\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\"GST on Purchases\",\n\t\t\t\t\t\t\t\t...rowValue([\n\t\t\t\t\t\t\t\t\tleftCalc.gstOnPurchases,\n\t\t\t\t\t\t\t\t\trightCalc.gstOnPurchases,\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t{ text: \"Total (exc GST)\", bold: true },\n\t\t\t\t\t\t\t\t...rowValue([\n\t\t\t\t\t\t\t\t\tcalcCashFlowTotal(leftSelected.cashOutItems),\n\t\t\t\t\t\t\t\t\tcalcCashFlowTotal(rightSelected.cashOutItems),\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t{ text: \"Cash Surplus\", bold: true },\n\t\t\t\t\t\t\t\t...rowValue([leftCalc.cashSurplus, rightCalc.cashSurplus]),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\"Income/Outcome tax\",\n\t\t\t\t\t\t\t\t// TODO: Update to the correct income tax value\n\t\t\t\t\t\t\t\t...rowValue([leftSelected.incomeTax, rightSelected.incomeTax]),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t{ text: \"Available to spend\", bold: true },\n\t\t\t\t\t\t\t\t...rowValue([\n\t\t\t\t\t\t\t\t\tleftCalc.availableToSpend,\n\t\t\t\t\t\t\t\t\trightCalc.availableToSpend,\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\"Cash to owner\",\n\t\t\t\t\t\t\t\t...rowValue([\n\t\t\t\t\t\t\t\t\tleftSelected.cashToOwner,\n\t\t\t\t\t\t\t\t\trightSelected.cashToOwner,\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t{ text: \"Closing balance\", bold: true },\n\t\t\t\t\t\t\t\t...rowValue([\n\t\t\t\t\t\t\t\t\tleftCalc.closingBalance,\n\t\t\t\t\t\t\t\t\trightCalc.closingBalance,\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\"Stock\", ...rowValue([leftSelected.stock, rightSelected.stock])],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\"Debtors\",\n\t\t\t\t\t\t\t\t...rowValue([leftSelected.debtors, rightSelected.debtors]),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\"Assets\",\n\t\t\t\t\t\t\t\t...rowValue([leftSelected.assets, rightSelected.assets]),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\"Creditors\",\n\t\t\t\t\t\t\t\t...rowValue([leftSelected.creditors, rightSelected.creditors]),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\"Loans\", ...rowValue([leftSelected.loans, rightSelected.loans])],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t{ text: \"Net position\", bold: true },\n\t\t\t\t\t\t\t\t...rowValue([\n\t\t\t\t\t\t\t\t\tleftCalc.totalNetAssets,\n\t\t\t\t\t\t\t\t\trightCalc.totalNetAssets,\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t]),\n\t\t],\n\t\tstyles: {\n\t\t\tpageHeader: {\n\t\t\t\tfontSize: 20,\n\t\t\t\tbold: true,\n\t\t\t\tfillColor: green[\"800\"],\n\t\t\t\tcolor: \"white\",\n\t\t\t\talignment: \"center\",\n\t\t\t},\n\t\t},\n\t\tdefaultStyles: {\n\t\t\tfontSize: 15,\n\t\t\tbold: false,\n\t\t\tcolor: \"#000\",\n\t\t},\n\t}\n\n\treturn pdfMake.createPdf(docDefinition)\n}\n","import React, { ReactElement, useContext } from \"react\"\nimport PictureAsPdfIcon from \"@material-ui/icons/PictureAsPdf\"\nimport { List, ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\"\nimport AddIcon from \"@material-ui/icons/Add\"\nimport { useHistory, useLocation, useParams } from \"react-router-dom\"\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumbered\"\nimport GetAppIcon from \"@material-ui/icons/GetApp\"\nimport ExpandableNav from \"../ExpandableNav\"\nimport { PrivateRoutes } from \"../../util/routes/routes\"\nimport CopyCanvasTrigger from \"./CopyCanvasTrigger\"\nimport { ControlCompareLink } from \"../CFCCompare\"\nimport CFCUseCase from \"../../data/CFC/CFCLogic\"\nimport CashFlowCanvasPDF from \"../PDF/CashFlowCanvasPDF\"\nimport useCurrentClient from \"../../state/client/useCurrentClient\"\nimport CFCContext from \"../../state/CFC/context\"\nimport CFCComparePDF from \"../PDF/CFCComparePDF\"\nimport servePDF from \"../PDF/servePDF\"\n\n/**\n * Canvas page control panel component\n *\n * @export\n * @returns {ReactElement}\n */\nexport default function ControlPanel(): ReactElement {\n\tconst history = useHistory()\n\tconst location = useLocation()\n\tconst { id: canvasId } = useParams()\n\tconst [currentClient] = useCurrentClient()\n\tconst { leftCompare, rightCompare } = useContext(CFCContext)\n\n\tconst goTo = (route: PrivateRoutes) => (): void => {\n\t\t// eslint-disable-next-line\n\t\thistory.push(route)\n\t}\n\n\tconst isNewPage = (): boolean => {\n\t\treturn location.pathname === PrivateRoutes.CFC\n\t}\n\n\tconst isCompare = (): boolean => {\n\t\treturn location.pathname === PrivateRoutes.CFCCompare\n\t}\n\n\tconst printPDF = async () => {\n\t\tif (canvasId && typeof canvasId === \"string\" && !isCompare()) {\n\t\t\tconst data = await CFCUseCase.findById(canvasId)\n\t\t\t// console.log(\"data\", canvasId, data)\n\t\t\tif (data === undefined) alert(\"no data\")\n\t\t\telse {\n\t\t\t\tconst pdf = await CashFlowCanvasPDF(\n\t\t\t\t\tcurrentClient?.name ?? \"Client\",\n\t\t\t\t\tdata\n\t\t\t\t)\n\t\t\t\tservePDF(pdf)\n\t\t\t}\n\t\t}\n\n\t\tif (isCompare()) {\n\t\t\tif (leftCompare && rightCompare) {\n\t\t\t\tconst pdf = await CFCComparePDF(leftCompare, rightCompare)\n\t\t\t\tservePDF(pdf)\n\t\t\t}\n\t\t}\n\t}\n\n\treturn (\n\t\t<ExpandableNav reactourLabel=\"canvas-control-panel\">\n\t\t\t<List component=\"nav\" disablePadding>\n\t\t\t\t{!isNewPage() && !isCompare() && <CopyCanvasTrigger />}\n\t\t\t\t{(!isNewPage() || isCompare()) && (\n\t\t\t\t\t<ListItem button onClick={goTo(PrivateRoutes.CFC)}>\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<AddIcon />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText>Create new Canvas</ListItemText>\n\t\t\t\t\t</ListItem>\n\t\t\t\t)}\n\t\t\t\t{!isNewPage() && !isCompare() && (\n\t\t\t\t\t<ListItem button>\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<GetAppIcon />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText>Import data</ListItemText>\n\t\t\t\t\t</ListItem>\n\t\t\t\t)}\n\t\t\t\t<ListItem button onClick={goTo(PrivateRoutes.CFCListing)}>\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<FormatListNumberedIcon />\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText>List of Canvases</ListItemText>\n\t\t\t\t</ListItem>\n\t\t\t\t{!isCompare() && !isNewPage() && <ControlCompareLink />}\n\t\t\t\t{!isNewPage() && (\n\t\t\t\t\t<ListItem button>\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<PictureAsPdfIcon />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText onClick={printPDF}>Generate PDF</ListItemText>\n\t\t\t\t\t</ListItem>\n\t\t\t\t)}\n\t\t\t</List>\n\t\t</ExpandableNav>\n\t)\n}\n"],"sourceRoot":""}