{"version":3,"sources":["components/PDF/ActionChecklistPDF.ts","components/ActionChecklist/ActionHeader/_config/style.ts","components/ActionChecklist/ActionHeader/ActionHeader.tsx","components/ActionChecklist/ActionContainer/_config/styles.ts","components/ActionChecklist/ActionContainer/_partials/Actions.tsx","components/ActionChecklist/ActionContainer/_partials/ActionItem.tsx","components/ActionChecklist/ActionContainer/_partials/ActionNotes.tsx","components/ActionChecklist/ActionContainer/_config/utilities.ts","util/array/lastInArray.ts","util/array/arraySwap.ts","components/ActionChecklist/ActionContainer/ActionContainer.tsx","components/ActionChecklist/_config/data.ts","data/ActionChecklist/_config/machine.ts","pages/action-items.tsx","content/tips lazy /^/.*$/ groupOptions: {} namespace object","components/PageTip/_config/style.ts","components/PageTip/_partials/AsyncTip.tsx","components/PageTip/PageTip.tsx","components/SectionTitle/_config/styles.ts","components/SectionTitle/SectionTitle.tsx","components/PDF/PDFLib.ts","components/PDF/servePDF.ts","components/HealthCheck/FourQuestions/FourQuestions.tsx","components/HealthCheck/FourQuestions/_config/utilities.tsx","components/ActionChecklist/ActionContainer/_config/data.ts"],"names":["pdfMake","vfs","pdfFonts","itemsSection","items","length","text","style","basicTable","map","description","reviewBy","format","title","checklistCollection","notes","priority","a","docDefinition","pageDefaultSettings","content","pageHeading","pagePadding","Object","keys","actionTitleMapping","value","idx","arr","filter","i","actionContainer","note","prior","sortedItems","order","p","findIndex","x","id","v","push","styles","pageHeader","fontSize","bold","fillColor","lightBlue","color","alignment","heading","subHeading","rightAlign","noResult","italics","defaultStyle","createPdf","useActionHeaderStyles","makeStyles","theme","root","marginBottom","spacing","box","flexGrow","display","justifyContent","ActionHeader","useContext","ActionChecklistContext","hideCompleted","dispatch","Box","className","FormControlLabel","control","Checkbox","checked","onChange","event","type","ActionChecklistActionTypes","ChangeHideCompleted","payload","target","name","label","useActionContainerStyles","dropdownBody","paddingRight","paddingLeft","useActionsStyles","actionsWrapper","marginTop","alignItems","breakpoints","down","flexDirection","saveIndicator","userSelect","up","marginLeft","useActionItemStyles","gridRoot","margin","width","background","paddingTop","paddingBottom","hide","height","palette","grey","textfield","actions","dragIcon","cursor","completedText","padding","lineHeight","textDecoration","datepicker","useActionNotesStyles","gridActions","Actions","addNewAction","disabled","saving","lastSaved","Button","variant","startIcon","onClick","Typography","ActionItem","index","draggableId","data","deleteAction","lastItemInList","globalHide","useState","cacheDescription","setCacheDescription","dialogueOpen","setDialogueOpen","datepickerOpen","setDatepickerOpen","triggerDispatch","newData","UpdateActionItem","onDialogueClose","onDialogueConfirm","completed","Date","onDescriptionChange","e","onDescriptionBlur","handleDateChange","date","canComplete","handleCheckboxChange","handleDelete","preventDefault","provided","draggableProps","ref","innerRef","Grid","container","item","xs","sm","md","Tooltip","inputProps","indeterminate","TextField","onBlur","utils","DateFnsUtils","disableToolbar","inputVariant","KeyboardButtonProps","open","onOpen","onClose","fullWidth","IconButton","ConfirmDialogue","onCancel","onConfirm","dragHandleProps","ActionNotes","currentClient","setContent","handleContentBlur","UpdateNotes","ActionNotesUseCase","update","addNotesToContainer","newNotesItem","create","AddNotes","removeNote","RemoveNote","delete","multiline","rows","actionItemKeyTitleMapping","key","lastInArray","arraySwap","source","destination","replace","copy","splice","React","memo","identfier","generateKey","setSaving","shouldSave","setShouldSave","setLastSaved","useEffect","setInterval","ActionChecklistUseCase","findByClientAndContainer","DB","ActionPriorityUseCase","PRIOR","isEqual","bulkUpdate","clearInterval","newActionItem","newChecklistItem","dbKey","AddNewActionItem","checklist","RemoveActionItem","targetId","priorityId","mapThroughPriorityOrder","findObjectIndexByValue","constructKey","checklistItem","ExpandableNav","onDragEnd","results","droppableId","UpdatePriorityOrder","droppableProps","placeholder","indexOf","ActionItemMapping","cashInActions","cashOutActions","planningBusiness","recordKeeping","funding","managing","planningCommitments","tracking","transition","ActionChecklistMachine","Machine","initial","states","loading","on","HAS_CONTENT","ActionChecklist","useMachine","state","send","databaseSyced","ClientContext","printPDF","clientId","findByClient","pdfChecklists","pdfNotes","pdfPriority","ActionChecklistPDF","pdf","servePDF","role","SectionTitle","component","Spacer","Divider","filterByActionContainer","Loading","renderActionChecklist","FourQuestions","List","disablePadding","ListItem","button","ListItemIcon","ListItemText","PageTip","tip","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","Error","code","ids","module","exports","usePageTipStyles","position","left","bottom","icon","marginRight","drawer","maxWidth","closeBox","borderBottom","borderBottomColor","borderBottomStyle","AsyncTip","loadable","props","fallback","drawerOpen","setDrawerOpen","toggleDrawer","KeyboardEvent","Fab","Drawer","anchor","classes","paper","useSTStyles","fontWeight","typography","h5","children","addPadding","columns","pageSize","pageMargins","footer","frameContent","inner","table","widths","body","layout","browser","detect","download","answers","useFourQsStyles","reactourLabel","list","fourQuestionsContent","listItem","listItemFirst","listItemText","answerIconRoot","answer","opt","getOptionByAnswer","answerTheming","Icon","getIcon","questions","options","answerText"],"mappings":"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","file":"static/js/27.5c588b19.chunk.js","sourcesContent":["/* eslint-disable */\r\nimport pdfMake, { TCreatedPdf } from \"pdfmake/build/pdfmake\"\r\nimport pdfFonts from \"pdfmake/build/vfs_fonts\"\r\nimport { format } from \"date-fns\"\r\nimport { lightBlue } from \"@material-ui/core/colors\"\r\nimport {\r\n\tpageHeading,\r\n\tpagePadding,\r\n\tpageDefaultSettings,\r\n\tbasicTable,\r\n} from \"./PDFLib\"\r\nimport {\r\n\tActionChecklistStruct,\r\n\tActionChecklistNotesStruct,\r\n\tClientId,\r\n\tActionChecklistPriorityStruct,\r\n} from \"../../data/_config/shape\"\r\nimport { actionTitleMapping } from \"../ActionChecklist/ActionContainer/_config/data\"\r\nimport { PossibleActionItems } from \"../../state/action-checklist/shape\"\r\nimport ActionChecklistUseCase from \"../../data/ActionChecklist/ChecklistLogic\"\r\nimport ActionNotesUseCase from \"../../data/ActionChecklist/NotesLogic\"\r\nimport ActionPriorityUseCase from \"../../data/ActionChecklist/PriorityLogic\"\r\n\r\npdfMake.vfs = pdfFonts.pdfMake.vfs\r\n\r\nconst itemsSection = (items: ActionChecklistStruct[]) => {\r\n\tif (items.length === 0) {\r\n\t\treturn {\r\n\t\t\ttext: \"No action items\",\r\n\t\t\tstyle: \"noResult\",\r\n\t\t}\r\n\t}\r\n\r\n\treturn basicTable(\r\n\t\titems.map(({ description, reviewBy }) => [\r\n\t\t\t{\r\n\t\t\t\ttext: description || \"No description provided\",\r\n\t\t\t\tstyle: description === \"\" ? \"noResult\" : \"\",\r\n\t\t\t},\r\n\t\t\tformat(reviewBy, \"dd/MM/yyyy\"),\r\n\t\t])\r\n\t)\r\n}\r\n\r\nexport default async (\r\n\ttitle: string,\r\n\tchecklistCollection: ActionChecklistStruct[],\r\n\tnotes: ActionChecklistNotesStruct[],\r\n\tpriority: ActionChecklistPriorityStruct[]\r\n): Promise<TCreatedPdf> => {\r\n\tconst docDefinition: any = {\r\n\t\t...pageDefaultSettings(),\r\n\r\n\t\tcontent: [\r\n\t\t\tpageHeading(`${title} - Action Checklist`),\r\n\t\t\tpagePadding([\r\n\t\t\t\t...(Object.keys(actionTitleMapping) as PossibleActionItems[]).map(\r\n\t\t\t\t\t(value, idx) => {\r\n\t\t\t\t\t\tconst arr = []\r\n\t\t\t\t\t\tconst items = checklistCollection.filter(\r\n\t\t\t\t\t\t\t(i) => i.actionContainer === value\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\tconst note = notes.filter((i) => i.actionContainer === value)\r\n\t\t\t\t\t\tconst prior = priority.filter((i) => i.actionContainer === value)\r\n\r\n\t\t\t\t\t\tif (items.length === 0 || prior.length < 1) return \"\"\r\n\r\n\t\t\t\t\t\tconst sortedItems = prior[0].order\r\n\t\t\t\t\t\t\t.map((p) => {\r\n\t\t\t\t\t\t\t\tconst idx = items.findIndex((x) => x?.id === p)\r\n\t\t\t\t\t\t\t\treturn items[idx]\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.filter((v) => typeof v !== \"undefined\")\r\n\r\n\t\t\t\t\t\tif (idx !== 0) arr.push(\" \")\r\n\t\t\t\t\t\tarr.push({ text: actionTitleMapping[value], style: \"heading\" })\r\n\t\t\t\t\t\tarr.push(itemsSection(sortedItems))\r\n\t\t\t\t\t\tif (note.length > 0 && note[0].notes !== \"\") {\r\n\t\t\t\t\t\t\tarr.push(\" \")\r\n\t\t\t\t\t\t\tarr.push({ text: \"Notes\", style: \"subHeading\" })\r\n\t\t\t\t\t\t\tarr.push(note[0].notes)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn arr\r\n\t\t\t\t\t}\r\n\t\t\t\t),\r\n\t\t\t]),\r\n\t\t],\r\n\r\n\t\tstyles: {\r\n\t\t\tpageHeader: {\r\n\t\t\t\tfontSize: 20,\r\n\t\t\t\tbold: true,\r\n\t\t\t\tfillColor: lightBlue[\"800\"],\r\n\t\t\t\tcolor: \"white\",\r\n\t\t\t\talignment: \"center\",\r\n\t\t\t},\r\n\t\t\theading: {\r\n\t\t\t\tfontSize: 16,\r\n\t\t\t\tbold: true,\r\n\t\t\t},\r\n\t\t\tsubHeading: {\r\n\t\t\t\tfontSize: 14,\r\n\t\t\t\tbold: true,\r\n\t\t\t},\r\n\t\t\trightAlign: {\r\n\t\t\t\talignment: \"right\",\r\n\t\t\t},\r\n\t\t\tnoResult: {\r\n\t\t\t\titalics: true,\r\n\t\t\t\tcolor: \"#333\",\r\n\t\t\t},\r\n\t\t},\r\n\r\n\t\tdefaultStyle: {\r\n\t\t\tfontSize: 15,\r\n\t\t\tbold: false,\r\n\t\t},\r\n\t}\r\n\treturn pdfMake.createPdf(docDefinition)\r\n}\r\n","import { makeStyles } from \"@material-ui/core\"\r\n\r\n// Styles definition for the Action Header components\r\nconst useActionHeaderStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tmarginBottom: theme.spacing(2),\r\n\t},\r\n\tbox: {\r\n\t\tflexGrow: 2,\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"flex-end\",\r\n\t},\r\n}))\r\n\r\nexport default useActionHeaderStyles\r\n","import React, { ReactElement, useContext } from \"react\"\r\nimport { FormControlLabel, Checkbox, Box } from \"@material-ui/core\"\r\nimport useActionHeaderStyles from \"./_config/style\"\r\nimport { ActionChecklistContext } from \"../../../state/action-checklist\"\r\nimport { ActionChecklistActionTypes } from \"../../../state/action-checklist/shape\"\r\n\r\n/**\r\n * Header component for the Action Checklist page\r\n *\r\n * @returns ReactElement\r\n */\r\nconst ActionHeader = (): ReactElement => {\r\n\tconst styles = useActionHeaderStyles()\r\n\tconst { hideCompleted, dispatch } = useContext(ActionChecklistContext)\r\n\r\n\t/**\r\n\t * Change the state of the \"hide all completed\"\r\n\t * checkbox\r\n\t *\r\n\t * @param {React.ChangeEvent<HTMLInputElement>} event\r\n\t * @returns void\r\n\t */\r\n\tconst handleHideChange = (\r\n\t\tevent: React.ChangeEvent<HTMLInputElement>\r\n\t): void => {\r\n\t\tdispatch({\r\n\t\t\ttype: ActionChecklistActionTypes.ChangeHideCompleted,\r\n\t\t\tpayload: event.target.checked,\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Box className={styles.root}>\r\n\t\t\t<FormControlLabel\r\n\t\t\t\tcontrol={\r\n\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\tchecked={hideCompleted}\r\n\t\t\t\t\t\tonChange={handleHideChange}\r\n\t\t\t\t\t\tname=\"hide-items\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\tlabel=\"Hide completed actions\"\r\n\t\t\t/>\r\n\t\t</Box>\r\n\t)\r\n}\r\n\r\nexport default ActionHeader\r\n","import { makeStyles } from \"@material-ui/core\"\r\n\r\n// style definition for action container component\r\nexport const useActionContainerStyles = makeStyles((theme) => ({\r\n\tdropdownBody: {\r\n\t\tpaddingRight: theme.spacing(2),\r\n\t\tpaddingLeft: theme.spacing(2),\r\n\t},\r\n}))\r\n\r\n// style definition for action styles component\r\nexport const useActionsStyles = makeStyles((theme) => ({\r\n\tactionsWrapper: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"flex-start\",\r\n\t\tmarginTop: theme.spacing(3),\r\n\t\talignItems: \"center\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tflexDirection: \"column\",\r\n\t\t\talignItems: \"flex-start\",\r\n\t\t\tmarginTop: theme.spacing(2),\r\n\t\t},\r\n\t},\r\n\tsaveIndicator: {\r\n\t\tuserSelect: \"none\",\r\n\t\t[theme.breakpoints.up(\"sm\")]: {\r\n\t\t\tmarginLeft: theme.spacing(2),\r\n\t\t},\r\n\t},\r\n}))\r\n\r\n// style definition for action item component\r\nexport const useActionItemStyles = makeStyles((theme) => ({\r\n\tgridRoot: {\r\n\t\talignItems: \"center\",\r\n\t\tmargin: 0,\r\n\t\twidth: \"100%\",\r\n\t\tbackground: \"white\",\r\n\t\t\"& > .MuiGrid-item\": {\r\n\t\t\tpaddingTop: theme.spacing(1),\r\n\t\t\tpaddingBottom: theme.spacing(1),\r\n\t\t},\r\n\t},\r\n\thide: {\r\n\t\theight: \"10px\",\r\n\t\tbackground: theme.palette.grey[200],\r\n\t\tmarginTop: theme.spacing(1),\r\n\t\tmarginBottom: theme.spacing(1),\r\n\t\t\"& > *\": {\r\n\t\t\tdisplay: \"none !important\",\r\n\t\t},\r\n\t},\r\n\ttextfield: {\r\n\t\twidth: \"100%\",\r\n\t},\r\n\tactions: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"flex-end\",\r\n\t},\r\n\tdragIcon: {\r\n\t\tcursor: \"move\",\r\n\t},\r\n\tcompletedText: {\r\n\t\tpadding: \"18.5px 14px\",\r\n\t\tlineHeight: \"1.1876em\",\r\n\t\ttextDecoration: \"line-through\",\r\n\t},\r\n\tdatepicker: {\r\n\t\tmargin: 0,\r\n\t},\r\n}))\r\n\r\nexport const useActionNotesStyles = makeStyles((theme) => ({\r\n\tbox: {\r\n\t\tmarginTop: theme.spacing(3),\r\n\t},\r\n\ttextfield: {\r\n\t\twidth: \"100%\",\r\n\t},\r\n\tgridRoot: {\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tgridActions: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"flex-end\",\r\n\t},\r\n}))\r\n","import React, { ReactElement } from \"react\"\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\nimport { Box, Button, Typography } from \"@material-ui/core\"\r\nimport { format } from \"date-fns\"\r\nimport { useActionsStyles } from \"../_config/styles\"\r\nimport { IActionsProps } from \"../_config/shape\"\r\n\r\n/**\r\n * Component to display all the actions for a\r\n * action container\r\n *\r\n * @param {IActionsProps} props\r\n * @returns ReactElement\r\n */\r\nconst Actions = ({\r\n\taddNewAction,\r\n\tdisabled,\r\n\tsaving,\r\n\tlastSaved,\r\n}: IActionsProps): ReactElement => {\r\n\tconst styles = useActionsStyles()\r\n\r\n\treturn (\r\n\t\t<Box className={styles.actionsWrapper}>\r\n\t\t\t<Button\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\tcolor=\"primary\"\r\n\t\t\t\tstartIcon={<AddIcon />}\r\n\t\t\t\tonClick={addNewAction}\r\n\t\t\t\tdisabled={disabled}\r\n\t\t\t>\r\n\t\t\t\tAdd action\r\n\t\t\t</Button>\r\n\t\t\t<Typography\r\n\t\t\t\tvariant=\"overline\"\r\n\t\t\t\tcolor=\"textSecondary\"\r\n\t\t\t\tclassName={styles.saveIndicator}\r\n\t\t\t>\r\n\t\t\t\t{saving ? \"Saving...\" : `Saved at ${format(lastSaved, \"H:mm:ss a\")}`}\r\n\t\t\t</Typography>\r\n\t\t</Box>\r\n\t)\r\n}\r\n\r\nexport default Actions\r\n","import React, {\r\n\tReactElement,\r\n\tChangeEvent,\r\n\tFocusEvent,\r\n\tuseState,\r\n\tMouseEvent,\r\n} from \"react\"\r\nimport {\r\n\tGrid,\r\n\tCheckbox,\r\n\tTextField,\r\n\tIconButton,\r\n\tTooltip,\r\n\tTypography,\r\n} from \"@material-ui/core\"\r\nimport DragIndicatorIcon from \"@material-ui/icons/DragIndicator\"\r\nimport DeleteIcon from \"@material-ui/icons/Delete\"\r\nimport { Draggable } from \"react-beautiful-dnd\"\r\nimport {\r\n\tMuiPickersUtilsProvider,\r\n\tKeyboardDatePicker,\r\n} from \"@material-ui/pickers\"\r\nimport DateFnsUtils from \"@date-io/date-fns\"\r\nimport { format } from \"date-fns\"\r\nimport { useActionItemStyles } from \"../_config/styles\"\r\nimport { IActionItemProps } from \"../_config/shape\"\r\nimport { ActionChecklistActionTypes } from \"../../../../state/action-checklist/shape\"\r\nimport { BaseActionChecklistStruct } from \"../../../../data/_config/shape\"\r\nimport ConfirmDialogue from \"../../../ConfirmDialogue\"\r\n\r\n/**\r\n * Component used to render a single action item\r\n *\r\n * @param {IActionItemProps} props\r\n * @returns ReactElement\r\n */\r\nconst ActionItem = ({\r\n\tindex,\r\n\tdraggableId,\r\n\tdata,\r\n\tdispatch,\r\n\tdeleteAction,\r\n\tlastItemInList,\r\n\tglobalHide,\r\n}: IActionItemProps): ReactElement => {\r\n\tconst styles = useActionItemStyles()\r\n\tconst [cacheDescription, setCacheDescription] = useState<string>(\r\n\t\tdata.description\r\n\t)\r\n\tconst [dialogueOpen, setDialogueOpen] = useState<boolean>(false)\r\n\tconst [datepickerOpen, setDatepickerOpen] = useState(false)\r\n\r\n\t/**\r\n\t * Triggers a update action to change the state\r\n\t *\r\n\t * @param {BaseActionChecklistStruct} newData Updated data\r\n\t * @returns void\r\n\t */\r\n\tconst triggerDispatch = (newData: BaseActionChecklistStruct): void => {\r\n\t\tif (data?.id) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: ActionChecklistActionTypes.UpdateActionItem,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tid: data.id,\r\n\t\t\t\t\tdata: newData,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Closes the confirmation dialogue\r\n\t *\r\n\t * @returns void\r\n\t */\r\n\tconst onDialogueClose = (): void => {\r\n\t\tsetDialogueOpen(false)\r\n\t}\r\n\r\n\t/**\r\n\t * Triggers the delete method if the dialogue is confirmed\r\n\t *\r\n\t * @returns void\r\n\t */\r\n\tconst onDialogueConfirm = (): void => {\r\n\t\tif (!lastItemInList) {\r\n\t\t\t// Deletes the item from the db & state\r\n\t\t\tdeleteAction(data.id || \"\")\r\n\t\t} else {\r\n\t\t\t// Reset the last item\r\n\t\t\tsetCacheDescription(\"\")\r\n\t\t\ttriggerDispatch({\r\n\t\t\t\t...data,\r\n\t\t\t\tdescription: \"\",\r\n\t\t\t\tcompleted: false,\r\n\t\t\t\treviewBy: new Date(),\r\n\t\t\t})\r\n\t\t}\r\n\t\tsetDialogueOpen(false)\r\n\t}\r\n\r\n\t/**\r\n\t * Changes the state for the description value\r\n\t *\r\n\t * @param {ChangeEvent<HTMLInputElement>} e\r\n\t */\r\n\tconst onDescriptionChange = (e: ChangeEvent<HTMLInputElement>): void => {\r\n\t\tsetCacheDescription(e.target.value)\r\n\t}\r\n\r\n\t/**\r\n\t * When focusing OFF the description field,\r\n\t * update the state. This prevents a delay in input\r\n\t *\r\n\t * @async\r\n\t * @param {FocusEvent<HTMLInputElement>} e\r\n\t * @returns Promise<void>\r\n\t */\r\n\tconst onDescriptionBlur = async (\r\n\t\te: FocusEvent<HTMLInputElement>\r\n\t): Promise<void> => {\r\n\t\tif (data.description !== cacheDescription) {\r\n\t\t\ttriggerDispatch({\r\n\t\t\t\t...data,\r\n\t\t\t\tdescription: cacheDescription,\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Change the state of the \"Review by\" date\r\n\t *\r\n\t * @param {Date|null} date\r\n\t * @returns void\r\n\t */\r\n\tconst handleDateChange = (date: Date | null): void => {\r\n\t\tif (date) {\r\n\t\t\ttriggerDispatch({\r\n\t\t\t\t...data,\r\n\t\t\t\treviewBy: date,\r\n\t\t\t})\r\n\t\t\tsetDatepickerOpen(false)\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Check to see if item can be completed\r\n\t *\r\n\t * @returns boolean\r\n\t */\r\n\tconst canComplete = (): boolean => cacheDescription !== \"\"\r\n\r\n\t/**\r\n\t * Handles the change event when completing a action\r\n\t *\r\n\t * @param {ChangeEvent<HTMLInputElement>} e\r\n\t * @returns void\r\n\t */\r\n\tconst handleCheckboxChange = (e: ChangeEvent<HTMLInputElement>): void => {\r\n\t\ttriggerDispatch({\r\n\t\t\t...data,\r\n\t\t\tcompleted: e.target.checked,\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Method to handle the action triggered when clicking\r\n\t * on the delete icon\r\n\t *\r\n\t * @param {MouseEvent<HTMLButtonElement>} e\r\n\t * @returns void\r\n\t */\r\n\tconst handleDelete = (e: MouseEvent<HTMLButtonElement>): void => {\r\n\t\te.preventDefault()\r\n\t\tsetDialogueOpen(true)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Draggable draggableId={`${draggableId}`} index={index}>\r\n\t\t\t{(provided): ReactElement => (\r\n\t\t\t\t<div\r\n\t\t\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\r\n\t\t\t\t\t{...provided.draggableProps}\r\n\t\t\t\t\tref={provided.innerRef}\r\n\t\t\t\t\tclassName=\"action-item\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\tspacing={2}\r\n\t\t\t\t\t\tclassName={`${styles.gridRoot} ${\r\n\t\t\t\t\t\t\tglobalHide && data.completed ? styles.hide : \"\"\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{/* TODO: Split some of these into other partials */}\r\n\t\t\t\t\t\t<Grid item xs={2} sm={1} md={1}>\r\n\t\t\t\t\t\t\t<Tooltip title=\"Mark as done\">\r\n\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\tchecked={data.completed}\r\n\t\t\t\t\t\t\t\t\tinputProps={{ \"aria-label\": \"completed checkbox\" }}\r\n\t\t\t\t\t\t\t\t\tid={`action-complete--${data?.id}`}\r\n\t\t\t\t\t\t\t\t\tonChange={handleCheckboxChange}\r\n\t\t\t\t\t\t\t\t\tdisabled={!canComplete()}\r\n\t\t\t\t\t\t\t\t\tindeterminate={!canComplete()}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={10} sm={5} md={6}>\r\n\t\t\t\t\t\t\t{data.completed ? (\r\n\t\t\t\t\t\t\t\t<Typography className={styles.completedText}>\r\n\t\t\t\t\t\t\t\t\t{data.description}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tclassName={styles.textfield}\r\n\t\t\t\t\t\t\t\t\tid={`action-description--${data?.id}`}\r\n\t\t\t\t\t\t\t\t\tlabel=\"Action item\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\tvalue={cacheDescription}\r\n\t\t\t\t\t\t\t\t\tonChange={onDescriptionChange}\r\n\t\t\t\t\t\t\t\t\tonBlur={onDescriptionBlur}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12} sm={4} md={3}>\r\n\t\t\t\t\t\t\t{data.completed ? (\r\n\t\t\t\t\t\t\t\t<Typography className={styles.completedText}>\r\n\t\t\t\t\t\t\t\t\t{format(data.reviewBy, \"dd/MM/yyyy\")}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n\t\t\t\t\t\t\t\t\t<KeyboardDatePicker\r\n\t\t\t\t\t\t\t\t\t\tdisableToolbar\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"inline\"\r\n\t\t\t\t\t\t\t\t\t\tinputVariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\tformat=\"dd/MM/yyyy\"\r\n\t\t\t\t\t\t\t\t\t\tid={`action-reviewby--${data?.id}`}\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Review by\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={data.reviewBy}\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange}\r\n\t\t\t\t\t\t\t\t\t\tKeyboardButtonProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\"aria-label\": \"change date\",\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName={styles.datepicker}\r\n\t\t\t\t\t\t\t\t\t\topen={datepickerOpen}\r\n\t\t\t\t\t\t\t\t\t\tonOpen={(): void => setDatepickerOpen(true)}\r\n\t\t\t\t\t\t\t\t\t\tonClose={(): void => setDatepickerOpen(false)}\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</MuiPickersUtilsProvider>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12} sm={2} md={2} className={styles.actions}>\r\n\t\t\t\t\t\t\t<Tooltip title=\"Delete\">\r\n\t\t\t\t\t\t\t\t<IconButton onClick={handleDelete}>\r\n\t\t\t\t\t\t\t\t\t<DeleteIcon />\r\n\t\t\t\t\t\t\t\t\t<span className=\"MuiTypography-srOnly\">Delete item</span>\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t<ConfirmDialogue\r\n\t\t\t\t\t\t\t\topen={dialogueOpen}\r\n\t\t\t\t\t\t\t\tonClose={onDialogueClose}\r\n\t\t\t\t\t\t\t\tonCancel={onDialogueClose}\r\n\t\t\t\t\t\t\t\tonConfirm={onDialogueConfirm}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tAre you sure you want to remove this item?\r\n\t\t\t\t\t\t\t</ConfirmDialogue>\r\n\t\t\t\t\t\t\t<Tooltip title=\"Reposition\">\r\n\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\tclassName={styles.dragIcon}\r\n\t\t\t\t\t\t\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\r\n\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<DragIndicatorIcon />\r\n\t\t\t\t\t\t\t\t\t<span className=\"MuiTypography-srOnly\">Reorder priority</span>\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</Draggable>\r\n\t)\r\n}\r\n\r\nexport default ActionItem\r\n","import React, { ReactElement, useState, ChangeEvent, MouseEvent } from \"react\"\r\nimport {\r\n\tTextField,\r\n\tBox,\r\n\tButton,\r\n\tIconButton,\r\n\tGrid,\r\n\tTooltip,\r\n} from \"@material-ui/core\"\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\nimport DeleteIcon from \"@material-ui/icons/Delete\"\r\nimport { useActionNotesStyles } from \"../_config/styles\"\r\nimport { IActionNotesProps } from \"../_config/shape\"\r\nimport ActionNotesUseCase from \"../../../../data/ActionChecklist/NotesLogic\"\r\nimport { newNotesItem } from \"../../../../data/ActionChecklist/_config/utilities\"\r\nimport { ActionChecklistActionTypes } from \"../../../../state/action-checklist/shape\"\r\n\r\nconst ActionNotes = ({\r\n\tcurrentClient,\r\n\tcontainer,\r\n\tnote,\r\n\tdispatch,\r\n}: IActionNotesProps): ReactElement => {\r\n\tconst styles = useActionNotesStyles()\r\n\tconst [content, setContent] = useState<string>(note?.notes || \"\")\r\n\r\n\tconst handleContentChange = (e: ChangeEvent<HTMLInputElement>): void => {\r\n\t\tsetContent(e.target.value)\r\n\t}\r\n\r\n\tconst handleContentBlur = async (): Promise<void> => {\r\n\t\tif (note?.id && note.notes !== content) {\r\n\t\t\tconst newData = {\r\n\t\t\t\t...note,\r\n\t\t\t\tnotes: content,\r\n\t\t\t}\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: ActionChecklistActionTypes.UpdateNotes,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tid: note.id,\r\n\t\t\t\t\tdata: newData,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\tawait ActionNotesUseCase.update(note.id, newData)\r\n\t\t}\r\n\t}\r\n\r\n\tconst addNotesToContainer = async (\r\n\t\te: MouseEvent<HTMLButtonElement>\r\n\t): Promise<void> => {\r\n\t\te.preventDefault()\r\n\t\tconst item = newNotesItem(currentClient, container)\r\n\t\tconst id = await ActionNotesUseCase.create(item)\r\n\t\tdispatch({\r\n\t\t\ttype: ActionChecklistActionTypes.AddNotes,\r\n\t\t\tpayload: {\r\n\t\t\t\tid,\r\n\t\t\t\t...item,\r\n\t\t\t},\r\n\t\t})\r\n\t}\r\n\r\n\tconst removeNote = async (\r\n\t\te: MouseEvent<HTMLButtonElement>\r\n\t): Promise<void> => {\r\n\t\te.preventDefault()\r\n\t\tif (note?.id) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: ActionChecklistActionTypes.RemoveNote,\r\n\t\t\t\tpayload: note.id,\r\n\t\t\t})\r\n\t\t\tawait ActionNotesUseCase.delete(note.id)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Box className={styles.box}>\r\n\t\t\t{note ? (\r\n\t\t\t\t<Grid container className={styles.gridRoot}>\r\n\t\t\t\t\t<Grid item xs={10}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tclassName={styles.textfield}\r\n\t\t\t\t\t\t\tlabel=\"Notes\"\r\n\t\t\t\t\t\t\tmultiline\r\n\t\t\t\t\t\t\trows={3}\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tvalue={content}\r\n\t\t\t\t\t\t\tonChange={handleContentChange}\r\n\t\t\t\t\t\t\tonBlur={handleContentBlur}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={2} className={styles.gridActions}>\r\n\t\t\t\t\t\t<Tooltip title=\"Delete note\">\r\n\t\t\t\t\t\t\t<IconButton onClick={removeNote}>\r\n\t\t\t\t\t\t\t\t<DeleteIcon />\r\n\t\t\t\t\t\t\t\t<span className=\"MuiTypography-srOnly\">Delete note</span>\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t) : (\r\n\t\t\t\t<Button startIcon={<AddIcon />} onClick={addNotesToContainer}>\r\n\t\t\t\t\tAdd notes\r\n\t\t\t\t</Button>\r\n\t\t\t)}\r\n\t\t</Box>\r\n\t)\r\n}\r\n\r\nexport default ActionNotes\r\n","/* eslint-disable import/prefer-default-export */\r\nimport { PossibleActionItems } from \"../../../../state/action-checklist/shape\"\r\nimport { actionTitleMapping } from \"./data\"\r\n\r\n/**\r\n * Gets the title for the current Action container\r\n *\r\n * @param {PossibleActionItems} key\r\n * @returns string\r\n */\r\nexport const actionItemKeyTitleMapping = (key: PossibleActionItems): string => {\r\n\treturn actionTitleMapping[key]\r\n}\r\n\r\n/**\r\n * Get a list of identifiers that are \"static\",\r\n * ie they should always be showen\r\n *\r\n * @returns PossibleActionItems[]\r\n */\r\nexport const staticIdentifier = (): PossibleActionItems[] => [\r\n\t\"cashInActions\",\r\n\t\"cashOutActions\",\r\n]\r\n\r\n/**\r\n * Checks if the container is not cashInActions OR cashOutActions\r\n *\r\n * @param {PossibleActionItems} identifier\r\n * @returns boolean\r\n */\r\nexport const allowNotes = (identifier: PossibleActionItems): boolean => {\r\n\treturn staticIdentifier().indexOf(identifier) === -1\r\n}\r\n","/**\r\n * Returns the last items in an array\r\n *\r\n * @param {any[]} arr\r\n * @returns {any}\r\n */\r\nconst lastInArray = (arr: any[]): any => arr[arr.length - 1]\r\nexport default lastInArray\r\n","/**\r\n * Swaps a items in an array\r\n *\r\n * @param {T[]} arr\r\n * @param {number} source\r\n * @param {number} destination\r\n * @param {T} replace\r\n * @returns {T[]}\r\n */\r\nconst arraySwap = <T>(\r\n\tarr: T[],\r\n\tsource: number,\r\n\tdestination: number,\r\n\treplace: T\r\n): T[] => {\r\n\tconst copy = [...arr]\r\n\tcopy.splice(source, 1)\r\n\tcopy.splice(destination, 0, replace)\r\n\r\n\treturn copy\r\n}\r\n\r\nexport default arraySwap\r\n","import React, {\r\n\tReactElement,\r\n\tMouseEvent,\r\n\tuseContext,\r\n\tuseState,\r\n\tFragment,\r\n\tuseEffect,\r\n} from \"react\"\r\nimport { Box } from \"@material-ui/core\"\r\nimport { DragDropContext, Droppable, DropResult } from \"react-beautiful-dnd\"\r\nimport { isEqual } from \"lodash-es\"\r\nimport ExpandableNav from \"../../ExpandableNav\"\r\nimport { IActionContainerProps } from \"./_config/shape\"\r\nimport { useActionContainerStyles } from \"./_config/styles\"\r\nimport { Actions, ActionItem, ActionNotes } from \"./_partials\"\r\nimport { actionItemKeyTitleMapping, allowNotes } from \"./_config/utilities\"\r\nimport { ActionChecklistContext } from \"../../../state/action-checklist\"\r\nimport { ActionChecklistActionTypes } from \"../../../state/action-checklist/shape\"\r\nimport lastInArray from \"../../../util/array/lastInArray\"\r\nimport { generateKey, constructKey } from \"../../../util/lists/key\"\r\nimport {\r\n\tActionChecklistId,\r\n\tActionChecklistStruct,\r\n} from \"../../../data/_config/shape\"\r\nimport findObjectIndexByValue from \"../../../util/array/findObjectIndexByValue\"\r\nimport ActionChecklistUseCase from \"../../../data/ActionChecklist/ChecklistLogic\"\r\nimport ActionPriorityUseCase from \"../../../data/ActionChecklist/PriorityLogic\"\r\nimport arraySwap from \"../../../util/array/arraySwap\"\r\nimport { newChecklistItem } from \"../../../data/ActionChecklist/_config/utilities\"\r\n\r\n/**\r\n * A single Action items wrapper\r\n *\r\n * @param {PossibleActionItems} {identfier}\r\n * @param {ISingleActionItem} {data}\r\n * @returns ReactElement\r\n */\r\nconst ActionContainer = ({\r\n\tidentfier,\r\n\tdata,\r\n\tpriority,\r\n\tnotes,\r\n\tcurrentClient,\r\n}: IActionContainerProps): ReactElement => {\r\n\t// #region Component functionality\r\n\tconst styles = useActionContainerStyles()\r\n\tconst { dispatch, hideCompleted } = useContext(ActionChecklistContext)\r\n\tconst [key] = useState(generateKey())\r\n\tconst [saving, setSaving] = useState<boolean>(false)\r\n\tconst [shouldSave, setShouldSave] = useState<boolean>(true)\r\n\tconst [lastSaved, setLastSaved] = useState<Date>(new Date())\r\n\r\n\tuseEffect(() => {\r\n\t\t// Run every 1.5s\r\n\t\tconst id = setInterval(async () => {\r\n\t\t\tif (!shouldSave) return\r\n\t\t\t// Get the database data for this container\r\n\t\t\tconst DB = await ActionChecklistUseCase.findByClientAndContainer(\r\n\t\t\t\tidentfier,\r\n\t\t\t\tcurrentClient\r\n\t\t\t)\r\n\t\t\tconst PRIOR = await ActionPriorityUseCase.findByClientAndContainer(\r\n\t\t\t\tidentfier,\r\n\t\t\t\tcurrentClient\r\n\t\t\t)\r\n\r\n\t\t\t// If it is out of sync with the state\r\n\t\t\tif (!isEqual(DB, data) || !isEqual(PRIOR[0], priority)) {\r\n\t\t\t\t// Bulk update the database to insync with the state\r\n\t\t\t\tsetSaving(true)\r\n\t\t\t\tawait ActionChecklistUseCase.bulkUpdate(data)\r\n\t\t\t\tif (priority?.id) {\r\n\t\t\t\t\tawait ActionPriorityUseCase.update(priority.id, priority)\r\n\t\t\t\t}\r\n\t\t\t\tsetLastSaved(new Date())\r\n\t\t\t\tsetSaving(false)\r\n\t\t\t}\r\n\t\t}, 2000)\r\n\r\n\t\treturn (): void => clearInterval(id)\r\n\t}, [data, identfier, priority, currentClient, shouldSave])\r\n\r\n\t/**\r\n\t * Event that triggers once a item is dropped\r\n\t *\r\n\t * @param {DropResult} results\r\n\t * @returns void\r\n\t */\r\n\tconst onDragEnd = (results: DropResult): void => {\r\n\t\tconst { destination, source, draggableId } = results\r\n\r\n\t\tif (\r\n\t\t\t!destination ||\r\n\t\t\t(destination.droppableId === source.droppableId &&\r\n\t\t\t\tdestination.index === source.index)\r\n\t\t) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst order = arraySwap<string>(\r\n\t\t\tpriority.order,\r\n\t\t\tsource.index,\r\n\t\t\tdestination.index,\r\n\t\t\tdraggableId\r\n\t\t)\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: ActionChecklistActionTypes.UpdatePriorityOrder,\r\n\t\t\tpayload: {\r\n\t\t\t\t...priority,\r\n\t\t\t\torder,\r\n\t\t\t},\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Handles the state change when adding a new action item\r\n\t *\r\n\t * @param {MouseEvent<HTMLButtonElement>} e\r\n\t * @returns void\r\n\t */\r\n\tconst addNewAction = async (\r\n\t\te: MouseEvent<HTMLButtonElement>\r\n\t): Promise<void> => {\r\n\t\te.preventDefault()\r\n\t\tif (currentClient && priority.id) {\r\n\t\t\tconst newActionItem = newChecklistItem(currentClient, identfier)\r\n\t\t\t// Adds checklist item to db\r\n\t\t\tconst dbKey = await ActionChecklistUseCase.create(newActionItem)\r\n\t\t\t// Updates db item with order\r\n\t\t\tawait ActionPriorityUseCase.update(priority.id, {\r\n\t\t\t\t...priority,\r\n\t\t\t\torder: [...priority.order, dbKey],\r\n\t\t\t})\r\n\r\n\t\t\t// Dispatch the state change\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: ActionChecklistActionTypes.AddNewActionItem,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tchecklist: {\r\n\t\t\t\t\t\tid: dbKey,\r\n\t\t\t\t\t\t...newActionItem,\r\n\t\t\t\t\t},\r\n\t\t\t\t\tpriority: priority.id,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Deletes a action from the db and state\r\n\t *\r\n\t * @async\r\n\t * @param {ActionChecklistId} id ID of the checklist to delete\r\n\t * @returns Promise<void>\r\n\t */\r\n\tconst deleteAction = async (id: ActionChecklistId): Promise<void> => {\r\n\t\tif (priority.id) {\r\n\t\t\tsetShouldSave(false)\r\n\t\t\t// remove the checklist item from the db\r\n\t\t\tawait ActionChecklistUseCase.delete(id)\r\n\t\t\t// remove the priority item from the db if it is removing the last item\r\n\t\t\t// in the order\r\n\t\t\tif (priority.order.length === 1) {\r\n\t\t\t\tawait ActionPriorityUseCase.delete(priority.id)\r\n\t\t\t}\r\n\t\t\t// remove the checklist item from state and priority order\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: ActionChecklistActionTypes.RemoveActionItem,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\ttargetId: id,\r\n\t\t\t\t\tpriorityId: priority.id,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\r\n\t\t\tsetShouldSave(true)\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the latest item has content before\r\n\t * letting a user add more actions\r\n\t *\r\n\t * @returns boolean\r\n\t */\r\n\tconst preventAddingNew = (): boolean => {\r\n\t\treturn lastInArray(data).description === \"\"\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the item is the last in the list\r\n\t *\r\n\t * @returns boolean\r\n\t */\r\n\tconst lastItemInList = (): boolean => {\r\n\t\treturn data.length === 1\r\n\t}\r\n\r\n\t/**\r\n\t * Map method to render all the action items\r\n\t * in priority order\r\n\t *\r\n\t * @param {ActionChecklistId} id\r\n\t * @param {number} idx\r\n\t * @returns ReactElement\r\n\t */\r\n\tconst mapThroughPriorityOrder = (\r\n\t\tid: ActionChecklistId,\r\n\t\tidx: number\r\n\t): ReactElement => {\r\n\t\tconst index = findObjectIndexByValue(data, \"id\", id)\r\n\r\n\t\tif (index === -1) return <Fragment key={constructKey(key, idx)} />\r\n\r\n\t\tconst checklistItem: ActionChecklistStruct = data[index]\r\n\t\tif (checklistItem?.id) {\r\n\t\t\treturn (\r\n\t\t\t\t<ActionItem\r\n\t\t\t\t\tkey={checklistItem?.id}\r\n\t\t\t\t\tdraggableId={checklistItem?.id}\r\n\t\t\t\t\tindex={idx}\r\n\t\t\t\t\tdata={checklistItem}\r\n\t\t\t\t\tdispatch={dispatch}\r\n\t\t\t\t\tdeleteAction={deleteAction}\r\n\t\t\t\t\tlastItemInList={lastItemInList()}\r\n\t\t\t\t\tglobalHide={hideCompleted}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\t}\r\n\t\treturn <Fragment key={constructKey(key, idx)} />\r\n\t}\r\n\r\n\t// #endregion\r\n\r\n\t// #region Component Markup\r\n\treturn (\r\n\t\t<ExpandableNav title={actionItemKeyTitleMapping(identfier)}>\r\n\t\t\t<DragDropContext onDragEnd={onDragEnd}>\r\n\t\t\t\t<Box className={styles.dropdownBody}>\r\n\t\t\t\t\t<Droppable droppableId={identfier}>\r\n\t\t\t\t\t\t{(provided): ReactElement => (\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\r\n\t\t\t\t\t\t\t\t{...provided.droppableProps}\r\n\t\t\t\t\t\t\t\tref={provided.innerRef}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{priority.order.map(mapThroughPriorityOrder)}\r\n\t\t\t\t\t\t\t\t{provided.placeholder}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Droppable>\r\n\t\t\t\t\t{allowNotes(identfier) && (\r\n\t\t\t\t\t\t<ActionNotes\r\n\t\t\t\t\t\t\tcurrentClient={currentClient}\r\n\t\t\t\t\t\t\tcontainer={identfier}\r\n\t\t\t\t\t\t\tnote={notes}\r\n\t\t\t\t\t\t\tdispatch={dispatch}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<Actions\r\n\t\t\t\t\t\taddNewAction={addNewAction}\r\n\t\t\t\t\t\tdisabled={preventAddingNew()}\r\n\t\t\t\t\t\tsaving={saving}\r\n\t\t\t\t\t\tlastSaved={lastSaved}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Box>\r\n\t\t\t</DragDropContext>\r\n\t\t</ExpandableNav>\r\n\t)\r\n\t// #endregion\r\n}\r\n\r\nexport default React.memo(ActionContainer)\r\n","import { PossibleActionItems } from \"../../../state/action-checklist/shape\"\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const ActionItemMapping: Record<\r\n\tPossibleActionItems,\r\n\tPossibleActionItems\r\n> = {\r\n\tcashInActions: \"cashInActions\",\r\n\tcashOutActions: \"cashOutActions\",\r\n\tplanningBusiness: \"planningBusiness\",\r\n\trecordKeeping: \"recordKeeping\",\r\n\tfunding: \"funding\",\r\n\tmanaging: \"managing\",\r\n\tplanningCommitments: \"planningCommitments\",\r\n\ttracking: \"tracking\",\r\n\ttransition: \"transition\",\r\n}\r\n","import { Machine } from \"xstate\"\r\n\r\nexport type StateMap = \"loading\" | \"content\"\r\n\r\nexport interface IActionChecklistSchema {\r\n\tstates: {\r\n\t\tloading: {}\r\n\t\tcontent: {}\r\n\t}\r\n}\r\n\r\nexport type ACEvents = { type: \"HAS_CONTENT\" }\r\n\r\nexport const ActionChecklistMachine = Machine<\r\n\tnull,\r\n\tIActionChecklistSchema,\r\n\tACEvents\r\n>({\r\n\tkey: \"ac_machine\",\r\n\tinitial: \"loading\",\r\n\tstates: {\r\n\t\tloading: {\r\n\t\t\ton: {\r\n\t\t\t\tHAS_CONTENT: \"content\",\r\n\t\t\t},\r\n\t\t},\r\n\t\tcontent: {},\r\n\t},\r\n})\r\n","import React, {\r\n\tReactElement,\r\n\tuseContext,\r\n\tuseState,\r\n\tFragment,\r\n\tuseEffect,\r\n} from \"react\"\r\nimport {\r\n\tGrid,\r\n\tList,\r\n\tListItem,\r\n\tListItemText,\r\n\tListItemIcon,\r\n\tBox,\r\n\tTypography,\r\n\tDivider,\r\n} from \"@material-ui/core\"\r\nimport PictureAsPdfIcon from \"@material-ui/icons/PictureAsPdf\"\r\nimport { useMachine } from \"@xstate/react\"\r\nimport { PageContainer } from \"../components/Layouts\"\r\nimport SectionTitle from \"../components/SectionTitle\"\r\nimport FourQuestions from \"../components/HealthCheck/FourQuestions\"\r\nimport ExpandableNav from \"../components/ExpandableNav\"\r\nimport { ActionHeader, ActionContainer } from \"../components/ActionChecklist\"\r\nimport PageTip from \"../components/PageTip\"\r\nimport { ActionChecklistContext } from \"../state/action-checklist\"\r\nimport { generateKey, constructKey } from \"../util/lists/key\"\r\nimport { PossibleActionItems } from \"../state/action-checklist/shape\"\r\nimport { ActionItemMapping } from \"../components/ActionChecklist/_config/data\"\r\nimport { ClientContext } from \"../state/client\"\r\nimport filterByActionContainer from \"../util/filters/ByActionContainer\"\r\nimport { ActionChecklistMachine } from \"../data/ActionChecklist/_config/machine\"\r\nimport Loading from \"../components/Loading\"\r\nimport Spacer from \"../components/Spacer\"\r\nimport ActionChecklistPDF from \"../components/PDF/ActionChecklistPDF\"\r\nimport servePDF from \"../components/PDF/servePDF\"\r\nimport ActionChecklistUseCase from \"../data/ActionChecklist/ChecklistLogic\"\r\nimport ActionNotesUseCase from \"../data/ActionChecklist/NotesLogic\"\r\nimport ActionPriorityUseCase from \"../data/ActionChecklist/PriorityLogic\"\r\n\r\n/**\r\n * Action Checklist page component\r\n *\r\n * @returns ReactElement\r\n */\r\nconst ActionChecklist = (): ReactElement => {\r\n\tconst [state, send] = useMachine(ActionChecklistMachine)\r\n\tconst { checklistCollection, priority, databaseSyced, notes } = useContext(\r\n\t\tActionChecklistContext\r\n\t)\r\n\tconst {\r\n\t\tstate: { currentClient },\r\n\t} = useContext(ClientContext)\r\n\tconst [key] = useState(generateKey())\r\n\r\n\tuseEffect(() => {\r\n\t\tif (currentClient?.id && databaseSyced) {\r\n\t\t\tsend(\"HAS_CONTENT\")\r\n\t\t}\r\n\t}, [currentClient, databaseSyced, send])\r\n\r\n\t/**\r\n\t * Renders all the action containers based on\r\n\t * current state data\r\n\t *\r\n\t * @returns ReactElement[]\r\n\t */\r\n\tconst renderActionContainers = (): ReactElement[] => {\r\n\t\treturn (Object.keys(ActionItemMapping) as PossibleActionItems[]).map(\r\n\t\t\t(item, idx) => {\r\n\t\t\t\tif (currentClient?.id) {\r\n\t\t\t\t\tconst data = checklistCollection.filter(filterByActionContainer(item))\r\n\t\t\t\t\tconst prior = priority.filter(filterByActionContainer(item))\r\n\t\t\t\t\tconst note = notes.filter(filterByActionContainer(item))\r\n\r\n\t\t\t\t\tif (data.length > 0 && prior.length > 0) {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<ActionContainer\r\n\t\t\t\t\t\t\t\tkey={constructKey(key, idx)}\r\n\t\t\t\t\t\t\t\tidentfier={item}\r\n\t\t\t\t\t\t\t\tdata={data}\r\n\t\t\t\t\t\t\t\tpriority={prior[0]}\r\n\t\t\t\t\t\t\t\tnotes={note[0] || null}\r\n\t\t\t\t\t\t\t\tcurrentClient={currentClient.id}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn <Fragment key={constructKey(key, idx)} />\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\tconst renderActionChecklist = (): ReactElement => {\r\n\t\tswitch (state.value) {\r\n\t\t\tcase \"content\":\r\n\t\t\t\treturn <>{renderActionContainers()}</>\r\n\t\t\tcase \"loading\":\r\n\t\t\tdefault:\r\n\t\t\t\treturn <Loading />\r\n\t\t}\r\n\t}\r\n\r\n\tconst printPDF = async (): Promise<void> => {\r\n\t\tif (currentClient?.id) {\r\n\t\t\tconst clientId = currentClient.id\r\n\t\t\tconst pdfChecklists = await ActionChecklistUseCase.findByClient(clientId)\r\n\t\t\tconst pdfNotes = await ActionNotesUseCase.findByClient(clientId)\r\n\t\t\tconst pdfPriority = await ActionPriorityUseCase.findByClient(clientId)\r\n\r\n\t\t\tconst pdf = await ActionChecklistPDF(\r\n\t\t\t\tcurrentClient?.name ?? \"Client\",\r\n\t\t\t\tpdfChecklists,\r\n\t\t\t\tpdfNotes,\r\n\t\t\t\tpdfPriority\r\n\t\t\t)\r\n\t\t\tservePDF(pdf)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<PageContainer role=\"main\">\r\n\t\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t\t<Grid item xs={12} md={9}>\r\n\t\t\t\t\t\t<SectionTitle component=\"h1\">Action Checklist</SectionTitle>\r\n\t\t\t\t\t\t<Box className=\"content-area\">\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tYour checklist has all the actions you selected in previous\r\n\t\t\t\t\t\t\t\tparts of the Cash Flow Coaching Kit.\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tUse the checklist to track, prioritise and review your actions.\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t<Spacer />\r\n\t\t\t\t\t\t<Divider />\r\n\t\t\t\t\t\t<Spacer />\r\n\t\t\t\t\t\t<ActionHeader />\r\n\t\t\t\t\t\t<Box>{renderActionChecklist()}</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={12} md={3}>\r\n\t\t\t\t\t\t<FourQuestions />\r\n\t\t\t\t\t\t<ExpandableNav>\r\n\t\t\t\t\t\t\t<List component=\"nav\" disablePadding>\r\n\t\t\t\t\t\t\t\t<ListItem button>\r\n\t\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t\t<PictureAsPdfIcon />\r\n\t\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t<ListItemText onClick={printPDF}>Generate PDF</ListItemText>\r\n\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t</ExpandableNav>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</PageContainer>\r\n\r\n\t\t\t<PageTip tip=\"ActionChecklistTip\" />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default ActionChecklist\r\n","var map = {\n\t\"./ActionChecklistTip\": [\n\t\t909,\n\t\t4\n\t],\n\t\"./ActionChecklistTip.tsx\": [\n\t\t909,\n\t\t4\n\t],\n\t\"./CFCanvasTip\": [\n\t\t910,\n\t\t5\n\t],\n\t\"./CFCanvasTip.tsx\": [\n\t\t910,\n\t\t5\n\t],\n\t\"./ChangeLevers\": [\n\t\t911,\n\t\t6\n\t],\n\t\"./ChangeLevers.tsx\": [\n\t\t911,\n\t\t6\n\t],\n\t\"./ClientListTips\": [\n\t\t912,\n\t\t7\n\t],\n\t\"./ClientListTips.tsx\": [\n\t\t912,\n\t\t7\n\t],\n\t\"./CoachingKitTips\": [\n\t\t913,\n\t\t8\n\t],\n\t\"./CoachingKitTips.tsx\": [\n\t\t913,\n\t\t8\n\t],\n\t\"./DiscoverTopicsTips\": [\n\t\t914,\n\t\t9\n\t],\n\t\"./DiscoverTopicsTips.tsx\": [\n\t\t914,\n\t\t9\n\t],\n\t\"./HCQuestionnaire\": [\n\t\t915,\n\t\t10\n\t],\n\t\"./HCQuestionnaire.tsx\": [\n\t\t915,\n\t\t10\n\t],\n\t\"./style\": [\n\t\t905,\n\t\t11\n\t],\n\t\"./style.ts\": [\n\t\t905,\n\t\t11\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 916;\nmodule.exports = webpackAsyncContext;","import { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nconst usePageTipStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tposition: \"fixed\",\r\n\t\tleft: theme.spacing(2),\r\n\t\tbottom: theme.spacing(2),\r\n\t},\r\n\ticon: {\r\n\t\tmarginRight: theme.spacing(1),\r\n\t},\r\n\tdrawer: {\r\n\t\tpadding: theme.spacing(2),\r\n\t\tmaxWidth: \"350px\",\r\n\t\twidth: \"100%\",\r\n\t},\r\n\tcloseBox: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t\tmarginBottom: theme.spacing(2),\r\n\t\tpaddingBottom: theme.spacing(2),\r\n\t\tborderBottom: 1,\r\n\t\tborderBottomColor: theme.palette.grey[500],\r\n\t\tborderBottomStyle: \"solid\",\r\n\t},\r\n}))\r\n\r\nexport default usePageTipStyles\r\n","import React from \"react\"\r\nimport loadable from \"@loadable/component\"\r\nimport Loading from \"../../Loading\"\r\n\r\n/**\r\n * Loadable component to dynamically render the tip content\r\n *\r\n */\r\nconst AsyncTip = loadable(\r\n\t(props: { tip: string }) => import(`../../../content/tips/${props.tip}`),\r\n\t{\r\n\t\tfallback: <Loading />,\r\n\t}\r\n)\r\n\r\nexport default AsyncTip\r\n","import React, { ReactElement, useState, MouseEvent } from \"react\"\r\nimport { Fab, Drawer, Button, Box, Typography } from \"@material-ui/core\"\r\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\"\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\"\r\nimport usePageTipStyles from \"./_config/style\"\r\nimport { IPageTip } from \"./_config/shape\"\r\nimport { AsyncTip } from \"./_partials\"\r\n\r\n/**\r\n * Renders a page tip tooltip at the bottom left of the page\r\n *\r\n * @param {string} {tip} File name (no extension) for the tip component\r\n * @returns ReactElement\r\n */\r\nconst PageTip = ({ tip }: IPageTip): ReactElement => {\r\n\tconst style = usePageTipStyles()\r\n\tconst [drawerOpen, setDrawerOpen] = useState<boolean>(false)\r\n\r\n\t/**\r\n\t * Toggles the state of the drawer\r\n\t *\r\n\t * @param {Boolean} open State to change the drawer to\r\n\t * @param {KeyboardEvent|MouseEvent<HTMLButtonElement>} event Event generated by a keypress|click\r\n\t */\r\n\tconst toggleDrawer = (open: boolean) => (\r\n\t\tevent: KeyboardEvent | MouseEvent<HTMLButtonElement>\r\n\t): void => {\r\n\t\tif (event instanceof KeyboardEvent) {\r\n\t\t\tif (\r\n\t\t\t\tevent.type === \"keydown\" &&\r\n\t\t\t\t(event.key === \"Tab\" || event.key === \"Shift\")\r\n\t\t\t) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Change the state of the drawer\r\n\t\tsetDrawerOpen(open)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className={style.root} role=\"complementary\">\r\n\t\t\t\t<Fab color=\"secondary\" onClick={toggleDrawer(true)} variant=\"extended\">\r\n\t\t\t\t\t<HelpOutlineIcon className={style.icon} />\r\n\t\t\t\t\tTips\r\n\t\t\t\t</Fab>\r\n\t\t\t</div>\r\n\t\t\t<Drawer\r\n\t\t\t\tanchor=\"left\"\r\n\t\t\t\topen={drawerOpen}\r\n\t\t\t\tonClose={toggleDrawer(false)}\r\n\t\t\t\tclasses={{\r\n\t\t\t\t\tpaper: style.drawer,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Box className={style.closeBox}>\r\n\t\t\t\t\t<Typography variant=\"h6\">Tips</Typography>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tonClick={toggleDrawer(false)}\r\n\t\t\t\t\t\tstartIcon={<HighlightOffIcon />}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tClose\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Box>\r\n\r\n\t\t\t\t<AsyncTip tip={tip} />\r\n\t\t\t</Drawer>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default PageTip\r\n","import { makeStyles } from \"@material-ui/core\"\r\n\r\n// Section title styles\r\nconst useSTStyles = makeStyles((theme) => ({\r\n\ttitle: {\r\n\t\tfontWeight: 500,\r\n\t\tmarginBottom: theme.spacing(2),\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tfontSize: theme.typography.h5.fontSize,\r\n\t\t},\r\n\t},\r\n}))\r\n\r\nexport default useSTStyles\r\n","import React, { ReactElement } from \"react\"\r\nimport { Typography } from \"@material-ui/core\"\r\nimport { SectionTitleProps } from \"./_config/shape\"\r\nimport useSTStyles from \"./_config/styles\"\r\n\r\n/**\r\n * Abstraction for the Typography for a consistent heading for sections\r\n *\r\n * @param {SectionTitleProps} props Mimics the props for `<Typography>`\r\n * @returns ReactElement\r\n */\r\nconst SectionTitle = ({\r\n\tchildren,\r\n\tclassName,\r\n\t...props\r\n}: SectionTitleProps): ReactElement => {\r\n\tconst styles = useSTStyles()\r\n\treturn (\r\n\t\t<Typography\r\n\t\t\tvariant=\"h4\"\r\n\t\t\tcolor=\"textPrimary\"\r\n\t\t\tclassName={`${styles.title} ${className}`}\r\n\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\r\n\t\t\t{...props}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</Typography>\r\n\t)\r\n}\r\n\r\nexport default SectionTitle\r\n","/**\r\n * Add Padding\r\n *\r\n * add white space around some content\r\n */\r\n\r\nimport { format } from \"date-fns\"\r\n\r\nexport const addPadding = (content: any, margin = 10) => {\r\n\treturn {\r\n\t\tmargin,\r\n\t\tcolumns: [content],\r\n\t}\r\n}\r\n\r\n/**\r\n * Page and margin defaults\r\n */\r\n\r\nexport const pageDefaultSettings = () => {\r\n\treturn {\r\n\t\t// watermark: {\r\n\t\t// \ttext: \"draft\",\r\n\t\t// \tcolor: \"blue\",\r\n\t\t// \topacity: 0.3,\r\n\t\t// \tbold: true,\r\n\t\t// \titalics: false,\r\n\t\t// },\r\n\r\n\t\tpageSize: \"A4\",\r\n\t\tpageMargins: [0, 0, 0, 25],\r\n\t\tfooter: {\r\n\t\t\tcolumns: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttext: `Created on the ${format(new Date(), \"do 'of' MMMM yyyy\")}`,\r\n\t\t\t\t\talignment: \"center\",\r\n\t\t\t\t\tfontSize: 12,\r\n\t\t\t\t\tcolor: \"#333\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t}\r\n}\r\n\r\n/**\r\n * Frame Content\r\n *\r\n * Put content in a table with a border\r\n */\r\n\r\nexport const frameContent = (inner: any, style: string[] = []) => {\r\n\treturn {\r\n\t\ttable: {\r\n\t\t\twidths: [\"*\"], // to make it full length\r\n\t\t\tbody: [[inner]],\r\n\t\t},\r\n\t\tstyle,\r\n\t}\r\n}\r\n\r\n/**\r\n * Table with Text in it for top of page\r\n * Requires a pageHeader style\r\n */\r\n\r\nexport const pageHeading = (text: string) => {\r\n\tconst content = frameContent(addPadding(text), [\"pageHeader\"])\r\n\r\n\treturn {\r\n\t\t...content,\r\n\t\tlayout: \"noBorders\",\r\n\t}\r\n}\r\n\r\n/**\r\n * Add 20 points of padding on a full page\r\n */\r\n\r\nexport const pagePadding = (content: any) => addPadding(content, 20)\r\n\r\n/**\r\n * Basic table of key .... value\r\n */\r\n\r\nexport const basicTable = (items: any, style: string[] = []) => {\r\n\treturn {\r\n\t\ttable: {\r\n\t\t\twidths: [\"75%\", \"*\"],\r\n\t\t\tbody: items,\r\n\t\t},\r\n\t\tstyle,\r\n\t\tlayout: \"noBorders\",\r\n\t}\r\n}\r\n","import pdfMake from \"pdfmake/build/pdfmake\"\r\nimport { detect } from \"detect-browser\"\r\n\r\nexport default function (pdf: pdfMake.TCreatedPdf): void {\r\n\tconst browser = detect()\r\n\tif (browser?.name === \"ie\" || browser?.name === \"edge\") {\r\n\t\tpdf.download()\r\n\t\treturn\r\n\t}\r\n\r\n\tpdf.open()\r\n}\r\n","import React, { ReactElement } from \"react\"\r\nimport { List, ListItem, ListItemText, Box } from \"@material-ui/core\"\r\nimport { fourQuestionsContent, answerTheming } from \"../_config/data\"\r\nimport useFourQsStyles from \"./_config/styles\"\r\nimport { IFourQuestionsProps } from \"./_config/shape\"\r\nimport { answerText } from \"./_config/utilities\"\r\nimport ExpandableNav from \"../../ExpandableNav\"\r\nimport { getOptionByAnswer } from \"../_config/utilities\"\r\nimport { QuestionOptions } from \"../_config/shape\"\r\n\r\n/**\r\n * Component to render the Four key questions with optional\r\n * answers, used on the questionnaire summary page\r\n *\r\n * @param {QuestionOptions[]} { answers? }\r\n * @returns ReactElement\r\n */\r\nconst FourQuestions = ({ answers }: IFourQuestionsProps): ReactElement => {\r\n\tconst styles = useFourQsStyles()\r\n\r\n\t/**\r\n\t * Renders the answer related icon next to the question\r\n\t *\r\n\t * @param {QuestionOptions} answer\r\n\t * @returns {ReactElement}\r\n\t */\r\n\tconst getIcon = (answer: QuestionOptions): ReactElement => {\r\n\t\tconst opt = getOptionByAnswer(answer, answerTheming)\r\n\t\tif (opt) {\r\n\t\t\treturn <opt.Icon style={{ color: opt.color }} />\r\n\t\t}\r\n\r\n\t\treturn <></>\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ExpandableNav\r\n\t\t\ttitle=\"Four Key Questions\"\r\n\t\t\treactourLabel=\"four-questions-nav\"\r\n\t\t>\r\n\t\t\t<Box className={styles.box}>\r\n\t\t\t\t<List className={styles.list}>\r\n\t\t\t\t\t{fourQuestionsContent.map(\r\n\t\t\t\t\t\t(content: string, idx: number): ReactElement => (\r\n\t\t\t\t\t\t\t<Box key={content} component=\"li\">\r\n\t\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\t\tcomponent=\"div\"\r\n\t\t\t\t\t\t\t\t\tclassName={`${styles.listItem} ${\r\n\t\t\t\t\t\t\t\t\t\tidx === 0 ? styles.listItemFirst : \"\"\r\n\t\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<ListItemText className={styles.listItemText}>\r\n\t\t\t\t\t\t\t\t\t\t{`${idx + 1}. ${content}`}\r\n\t\t\t\t\t\t\t\t\t\t<Box className={styles.answerIconRoot}>\r\n\t\t\t\t\t\t\t\t\t\t\t{answers?.[idx] && getIcon(answers[idx])}\r\n\t\t\t\t\t\t\t\t\t\t\t{answerText(idx, answers)}\r\n\t\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t</ListItemText>\r\n\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)}\r\n\t\t\t\t</List>\r\n\t\t\t</Box>\r\n\t\t</ExpandableNav>\r\n\t)\r\n}\r\n\r\nexport default FourQuestions\r\n","/* eslint-disable import/prefer-default-export */\r\n\r\nimport React, { ReactElement } from \"react\"\r\nimport { Typography } from \"@material-ui/core\"\r\nimport { QuestionOptions } from \"../../_config/shape\"\r\nimport { getOptionByAnswer } from \"../../_config/utilities\"\r\nimport { answerTheming, questions } from \"../../_config/data\"\r\n\r\n/**\r\n * Checks if a question has a answer and displays the answer\r\n * with a theme\r\n *\r\n * @param {number} idx Question index\r\n * @param {QuestionOptions[]|undefined} answers Answers given in the quiz\r\n * @returns (boolean | ReactElement)\r\n */\r\nexport const answerText = (\r\n\tidx: number,\r\n\tanswers: QuestionOptions[] | undefined\r\n): ReactElement | boolean => {\r\n\tif (answers && typeof answers[idx] !== \"undefined\") {\r\n\t\tconst { color } = getOptionByAnswer(answers[idx], answerTheming)\r\n\t\treturn (\r\n\t\t\t<Typography style={{ color, fontWeight: 500 }}>\r\n\t\t\t\t{questions[idx].options[answers[idx]]}\r\n\t\t\t</Typography>\r\n\t\t)\r\n\t}\r\n\r\n\treturn false\r\n}\r\n","/* eslint-disable import/prefer-default-export */\r\nimport { PossibleActionItems } from \"../../../../state/action-checklist/shape\"\r\n\r\n// Action title mapping object\r\nexport const actionTitleMapping: Record<PossibleActionItems, string> = {\r\n\tcashInActions: \"Cash IN actions\",\r\n\tcashOutActions: \"Cash OUT actions\",\r\n\tplanningBusiness: \"Planning your business actions\",\r\n\trecordKeeping: \"Record keeping actions\",\r\n\tfunding: \"Funding your business actions\",\r\n\tmanaging: \"Managing your cash flow actions\",\r\n\tplanningCommitments: \"Planning your regular financial commitments actions\",\r\n\ttracking: \"Tracking your performance actions\",\r\n\ttransition: \"Selling, closing and succession planning\",\r\n}\r\n"],"sourceRoot":""}